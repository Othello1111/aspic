*
*+ CMPRS   IMAGEIN  XFACTOR  YFACTOR  IMAGEOUT
*
*  COMPRESS 2D IMAGEIN INTO IMAGEOUT; NEW PIXELS ARE
*  XFACTOR BY YFACTOR OLD PIXELS.
*
*  XFACTOR & YFACTOR ARE BOTH INTEGERS.
*
*  IF EITHER DIMENSION OF IMAGEIN IS NOT AN EXACT MULTIPLE OF THE
*  CORRESPONDING FACTOR, EDGE PIXELS ARE DISCARDED SO AS TO
*  ACHIEVE THIS CONDITION.
*

      INCLUDE 'INTERIM(FMTPAR)'



      INTEGER IDIMA(99),IDIMB(2)
      EQUIVALENCE (IDIMA(1),NXA),(IDIMA(2),NYA),
     :            (IDIMB(1),NXB),(IDIMB(2),NYB)

      CHARACTER*4 IWK


*
*  OPEN AND VALIDATE INPUT IMAGE
*  -----------------------------

      CALL RDIMAG('IN',FMT_R,99,IDIMA,NDIMS,IPIN,JSTAT)
      IF (NDIMS.NE.2) GO TO 9000

*
*  PICK UP & VALIDATE COMPRESSION FACTORS
*  --------------------------------------

*  X FACTOR
      CALL RDKEYI('XFACT',.FALSE.,1,NFACTX,NVALS,JSTAT)
      IF (NFACTX.LT.1) GO TO 9010

*  WIDTH OF OUTPUT IMAGE
      NXB=NXA/NFACTX
      IF (NXB.LT.1) GO TO 9010

*  Y FACTOR
      CALL RDKEYI('YFACT',.FALSE.,1,NFACTY,NVALS,JSTAT)
      IF (NFACTY.LT.1) GO TO 9020

*  HEIGHT OF OUTPUT IMAGE
      NYB=NYA/NFACTY
      IF (NYB.LT.1) GO TO 9020

*
*  PREPARE TO WRITE OUTPUT IMAGE
*  -----------------------------

      CALL WRIMAG('OUT',FMT_R,IDIMB,2,IPOUT,JSTAT)

*  DIMENSIONS OF USED AREA OF INPUT IMAGE
      NXUA=NXB*NFACTX
      NYUA=NYB*NFACTY

*  WASTED PIECES OF INPUT IMAGE: TOP, BOTTOM, LEFT, RIGHT

      NXWAT=(NXA-NXUA)/2
      IF (NXWAT.NE.0) THEN
         WRITE (IWK,'(I4)') NXWAT
         CALL WRUSER(IWK//' ROWS LOST FROM TOP',J)
      END IF

      NXWAB=NXA-NXUA-NXWAT
      IF (NXWAB.NE.0) THEN
         WRITE (IWK,'(I4)') NXWAB
         CALL WRUSER(IWK//' ROWS LOST FROM BOTTOM',J)
      END IF

      NYWAL=(NYA-NYUA)/2
      IF (NYWAL.NE.0) THEN
         WRITE (IWK,'(I4)') NYWAL
         CALL WRUSER(IWK//' COLS LOST FROM LEFT',J)
      END IF

      NYWAR=NYA-NYUA-NYWAL
      IF (NYWAR.NE.0) THEN
         WRITE (IWK,'(I4)') NYWAR
         CALL WRUSER(IWK//' COLS LOST FROM RIGHT',J)
      END IF

*  STARTING X,Y IN INPUT IMAGE
      IXA0=1+NXWAT
      IYA0=1+NYWAT

*
*  COMPRESS
*  --------

      CALL CMPRS2(%VAL(IPIN),NXA,NYA,NFACTX,NFACTY,
     :            IXA0,IYA0,NXUA,NYUA,NXB,NYB,%VAL(IPOUT))

*  WRAP UP
      GO TO 9900

*
*  ERRORS
*  ------

 9000 CONTINUE
      CALL WRUSER('MUST BE 2D!',J)
      GO TO 9900

 9010 CONTINUE
      CALL WRUSER('INVALID X FACTOR!',J)
      GO TO 9900

 9020 CONTINUE
      CALL WRUSER('INVALID Y FACTOR!',J)

*
*  EXIT
*  ----

 9900 CONTINUE
      CALL FRDATA(' ',JSTAT)

      END

      SUBROUTINE CMPRS2(A,NXA,NYA,NFX,NFY,IXA0,IYA0,
     :                  NXUA,NYUA,NXB,NYB,B)

*
*  COMPRESS ARRAY INTO SMALLER ARRAY
*
*
*  GIVEN:
*
*     A              ARRAY BEFORE COMPRESSION
*     NXA,NYA        DIMENSIONS OF ARRAY A
*     NFX,NFY        COMPRESSION FACTORS
*     IXA0,IYA0      INDICES FOR FIRST PIXEL FROM A TO BE USED
*     NXUA,NYUA      DIMENSIONS OF PART OF A TO BE USED
*     NXB,NYB        DIMENSIONS OF ARRAY B
*
*
*  RETURNED:
*
*     B              ARRAY AFTER COMPRESSION
*


      INTEGER NXA,NYA,NFX,NFY,IXA0,IYA0,NXUA,NYUA,NXB,NYB
      REAL A(NXA,NYA),B(NXB,NYB)


*  ROW BY ROW DOWN A
      DO JYA=0,NYUA-1

*     A & B ROW NUMBERS
         IYA=IYA0+JYA
         IYB=1+JYA/NFY

*     FLAG:  ZERO = FIRST A ROW THIS B ROW
         JFLAGY=MOD(JYA,NFY)

*     COL BY COL ALONG ROW
         DO JXA=0,NXUA-1

*        A & B COL NUMBERS
            IXA=IXA0+JXA
            IXB=1+JXA/NFX

*        FLAG:  ZERO = FIRST A COL THIS B COL
            JFLAGX=MOD(JXA,NFX)

*        FIRST REFERENCE TO THIS B PIXEL?
            IF (JFLAGX+JFLAGY.EQ.0) THEN

*           FIRST REFERENCE
               B(IXB,IYB)=A(IXA,IYA)
               ELSE

*           SUBSEQUENT REFERENCES
               B(IXB,IYB)=B(IXB,IYB)+A(IXA,IYA)
            END IF

*        NEXT A COL
         END DO

*     NEXT A ROW
      END DO

      END
