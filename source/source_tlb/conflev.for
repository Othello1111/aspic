C+
C
C      STARLINK ENVIRONMENT PROGRAM      *** CONFLEV ***
C
C      WRITTEN BY K F HARTLEY AT RGO ON 19/2/81
C
C      VERSION #2
C
C
C      THIS ROUTINE MAY BE USED IN TWO WAYS :-
C            (1) TO CREATE A THRESHOLDED IMAGE MADE UP OF 0 AND 1
C                DEPENDING ON THE DATA VALUE BEING BELOW OR ABOVE
C                THE VALUE DEFINED BY MEAN + CUTOFF
C                THIS COULD BE USED TO TRANSMIT A HIGHLY COMPRESSED
C                VERSION OF AN IMAGE OVER THE NETWORK.
C            (2) TO CREATE A NEW IMAGE WHICH USES SIGMAS ABOVE THE
C                BACKGROUND INSTEAD OF DATA VALUES .
C                VALUES BELOW MEAN+CUTOFF ARE SET TO ZERO
C                VALUES OF (MEAN+CUTOFF) + K*SIGMA ARE SET TO K
C                AND VALUES ABOVE MEAN+CUTOFF+2*SIGMA ARE SET TO 3
C                IF DISPLAYED WITH A SUITABLE LUT THIS WILL GIVE
C                CONTOURS OF "CONFIDENCE LEVELS"
C
C      THE PARAMETERS ARE :- INPUT   THE INPUT FRAME (I*4)
C                            OUTPUT  THE OUTPUT FRAME (I*2)
C                            TYPE    1 CHARACTER ... T FOR THRESHOLD
C                                                    C FOR CONFIDENCE
C                                                    N FOR NOTHING
C                            CUTOFF  THE CUTOFF VALUE EXPRESSED AS AN
C                                    INTEGER , AND USED AS THAT VALUE
C                                    MULTIPLIED BY SIGMA.
C                                    THUS A VALUE OF 2 MEANS "TWO SIGMA"
C
C      THE MEAN AND SIGMA ARE FOUND BY DEFINING LIMITS AROUND THE
C      CENTRAL PEAK OF THE HISTOGRAM AND THEM COMPUTING THEM
C      USING ONLY VALUES BETWEEN THESE LIMITS.
C
C      THE HISTOGRAM HAS BY DEFAULT 1024 BINS
C
C-
      INTEGER*4 PIN,POUT,AX(3),STATUS
      CHARACTER*1 CHAR
C
C      FIRST GET THE INPUT FRAME
C
      CALL RDIMAG('INPUT',204,3,AX,I,PIN,STATUS)
      IF (STATUS.NE.0.OR.I.LE.0.OR.I.GT.3) THEN
         CALL WRERR('HELLIN',STATUS)
         CALL FRDATA(' ',STATUS)
         CALL EXIT
      END IF
C
C      NOW WORK OUT TOTAL NUMBER OF PIXELS
C
      NTOT=1
      DO 100 K=1,I
         NTOT=NTOT*AX(K)
  100 CONTINUE
C
C      THEN THE OUTPUT FRAME
C
      CALL WRIMAG('OUTPUT',102,AX,I,POUT,STATUS)
      IF (STATUS.NE.0) THEN
         CALL WRERR('HELLO',STATUS)
         CALL FRDATA(' ',STATUS)
         CALL EXIT
      END IF
C
C      NOW COMPUTE MEAN AND SIGMA
C
      CALL SIGMA(%VAL(PIN),NTOT,AVE,SIG)
C
C      NOW GET THE TYPE OF SCALING TO BE USED
C
      CALL WRUSER('ENTER "T" FOR THRESHOLD',STATUS)
      CALL WRUSER(' OR   "C" FOR CONFIDENCE LEVELS',STATUS)
      CALL WRUSER(' OR   "N" TO DO NOTHING FURTHER',STATUS)
  200 CALL RDKEYC('TYPE',.FALSE.,1,CHAR,I,STATUS)
      IF (STATUS.NE.0.OR.
     1    .NOT.(CHAR.NE.'T'.OR.CHAR.NE.'C'.OR.CHAR.NE.'N')) THEN
         CALL WRERR('TYPERR',STATUS)
         CALL CNPAR('TYPE',STATUS)
         GO TO 200
      END IF
      IF (CHAR.EQ.'N') THEN
         CALL FRDATA(' ',STATUS)
         CALL EXIT
      END IF
C
C      FINALLY GET THE CUTOFF VALUE
C
      ICUT=1
      CALL WRUSER('ENTER CUTOFF VALUE AS THE NUMBER OF SIGMAS',STATUS)
  300 CALL RDKEYI('CUTOFF',.TRUE.,1,ICUT,I,STATUS)
      IF (STATUS.GT.1.OR.I.GT.1) THEN
         CALL WRERR('CUTERR',STATUS)
         CALL CNPAR('CUTOFF',STATUS)
         GO TO 300
      END IF
C
C      IF THE VALUE WAS OK,SET A VALUE FOR ITYP CORRESPONDING TO
C      THE CHARCTER INPUT FOR "TYPE"
C
      IF (CHAR.EQ.'T') ITYP=0
      IF (CHAR.EQ.'C') ITYP=1
C
C      NOW DO THE SCALING
C
      CALL SCALE(%VAL(PIN),%VAL(POUT),NTOT,AVE,SIG,ICUT,ITYP)
C
C      FINALLY TIDY UP AND GO HOME
C
      CALL FRDATA(' ',STATUS)
      CALL EXIT
      END
      SUBROUTINE SIGMA(IN,N,AVE,SIG)
C
C      COMPUTES THE MEAN AND SIGMA OF A 1D ARRAY (IN) OF DIMENSION N
C
C
C      THE VALUES ARE FOUND BY SELECTING ONLY "BACKGROUND" VALUES
C      IE THOSE IN A LIMITED RANGE AROUND THE HISTOGRAM PEAK
C
C      THE NUMBER OF BINS IN THE HISTOGRAM (NBINS) IS 1024 UNLESS
C      THE RANGE OF VALUES FOUND (MAX-MIN) IS LESS THAN THAT.
C
      INTEGER*4 HIST(0:1024)
      CHARACTER*72 LIST
      CHARACTER*7 BO,PE
      REAL DATA(1024)
      REAL IN(N),MIN,MAX
      DOUBLE PRECISION SXX,SX,USED
C
C      FIRST FIND LOWEST AND HIGHEST VALUES AND OUTPUT THEM
C
      MIN=IN(1)
      MAX=IN(1)
      DO 100 I=2,N
        IF (IN(I).GT.MAX) MAX=IN(I)
        IF (IN(I).LT.MIN) MIN=IN(I)
  100 CONTINUE
      BO='BOUNDS:'
      WRITE (LIST,'(A,2F10.3)') BO,MIN,MAX
      CALL WRUSER(LIST,STATUS)
C
C     DECIDE HOW MANY BINS TO USE FOR THE HISTOGRAM
C
      IF ((MAX-MIN).LT.1024.0) THEN
         NBINS=MAX-MIN
      ELSE
         NBINS=1024
      END IF
C
C      NOW FORM THE HISTOGRAM
C
      DO 200 I=0,NBINS
         HIST(I)=0
  200 CONTINUE
      IF (MAX.EQ.MIN) THEN
         CALL WRUSER('ALL VALUES ARE THE SAME',STATUS)
         MEAN=MAX
         SIG=0.0
         RETURN
      END IF
      F=FLOAT(NBINS)/(MAX-MIN)
      DO 400 I=1,N
         K=IFIX((IN(I)-MIN)*F)
         HIST(K)=HIST(K)+1
  400 CONTINUE
C
C      NOW FIND PEAK VALUE AND IT'S LOCATION
C
      MAXH=HIST(0)
      MAXPOS=0
      DO 500 I=1,NBINS
         IF (HIST(I).GT.MAXH) THEN
            MAXH=HIST(I)
            MAXPOS=I
         END IF
  500 CONTINUE
  501 PE='PEAK AT'
      WRITE (LIST,'(A,I5)') PE,MAXPOS
      CALL WRUSER(LIST,STATUS)
      CALL WRUSER('(IN TERMS OF HISTOGRAM BINS )',STATUS)
      BINS=NBINS
      HMAX=MAXH
C*******************************************************************
C      NOW FIND THE RANGE OF VALUES TO BE USED FOR COMPUTING
C      THE MEAN AND SIGMA.
C      THE CRITERION ADOPTED IS FROM THE FIRST BIN WITH LESS THAN
C      10% OF THE PEAK VALUE , TO THE FIRST ON THE OTHER SIDE OF THE
C      PEAK WITH LESS THAN 10% OF THE PEAK.
C*******************************************************************
      LIMLOW=0
      IF (MAXPOS.GT.0) THEN
         DO 510 I=MAXPOS,0,-1
            IF (HIST(I).LT.(MAXH/10)) THEN
               LIMLOW=I
               GO TO 520
            END IF
  510    CONTINUE
  520    CONTINUE
      END IF
      LIMHI=NBINS
      IF (MAXPOS.LT.NBINS) THEN
         DO 530 I=MAXPOS,NBINS
            IF (HIST(I).LT.(MAXH/10)) THEN
               LIMHI=I
               GO TO 540
            END IF
  530    CONTINUE
  540    CONTINUE
      END IF
      WRITE (LIST,'(A,2I5)') 'FIT BETWEEN BINS : ',LIMLOW,LIMHI
      CALL WRUSER(LIST,STATUS)
C
C      NOW CONVERT INTO DATA VALUES
C
      XLOW=REAL(LIMLOW)/F+REAL(MIN)
      XHI=REAL(LIMHI)/F+REAL(MIN)
      WRITE(LIST,'(A,2F10.3)') 'OR DATA VALUES : ',XLOW,XHI
      CALL WRUSER(LIST,STATUS)
C
C      NOW FORM THE SUMS
C
      SXX=0.0
      SX=0.0
      USED=0.0
      DO 600 I=1,N
         IF (IN(I).GE.XLOW.AND.IN(I).LE.XHI) THEN
            X=DBLE(IN(I))
            SXX=SXX + X*X
            SX=SX + X
            USED=USED + 1.0
         END IF
  600 CONTINUE
C
C      NOTE THE USE OF DOUBLE PRECISION FOR THE SUMS
C
C      NOW FORM THE MEAN AND SIGMA
C
      IF (USED.GE.1.0) THEN
         AVE=SX/USED
         SIG=SQRT ( (SXX-USED*AVE*AVE)/USED )
      ELSE
         AVE=(XLOW+XHI)/2.0
         SIG=0.0
      END IF
      WRITE (LIST,'(A,F12.3,A,F10.5)' ) 'MEAN = ',AVE,' & SIGMA = ',SIG
      CALL WRUSER(LIST,STATUS)
      END
      SUBROUTINE SCALE (IN,OUT,N,AVE,SIGMA,ICUT,ITYP)
C
C      THIS RESCALES AN INPUT ARRAY (IN) INTO AN OUTPUT ARRAY (OUT)
C
C      A LIMIT IS DEFINED AS       MEAN+ICUT*SIGMA
C
C      IF ITYP=0 THEN BELOW THIS VALUE EVRYTHING IS ZERO ,
C                WHILE ABOVE IT IS 1
C      IF ITYP=1 THEN VALUES BELOW THE LIMIT ARE STILL ZERO ,
C                BUT ABOVE ARE SCALED TO THE NUMBER OF SIGMA BY WHICH
C                THEY EXCEED THE LIMIT , UP TO A MAXIMUM OF 3
C
C      THE OUTPUT ARRAY NEED BE ONLY I*2 (OR EVEN LOGICAL*1??????)
C
      INTEGER*4 ICUT,ITYP
      INTEGER*2 OUT(N)
      REAL SIGMA,AVE
      REAL IN(N)
      VALLIM=AVE+IFIX(SIGMA*FLOAT(ICUT))
C
C      IF SIGMA IS ZERO.........
C
      IF (SIGMA.EQ.0.0) THEN
         CALL WRERR('HELLSI',STATUS)
         DO 10 I=1,N
            OUT(I)=0
   10    CONTINUE
         RETURN
      END IF
C
C      OTHERWISE......
C
      IF (ITYP.EQ.0) THEN
         DO 100 I=1,N
            IF (IN(I).LE.VALLIM) THEN
               OUT(I)=0
            ELSE
               OUT(I)=1
            END IF
  100    CONTINUE
      END IF
C
C      OR......
C
      IF (ITYP.EQ.1) THEN
         DO 200 I=1,N
            IF (IN(I).LE.VALLIM) THEN
               OUT(I)=0
            ELSE
               K=IFIX((IN(I)-VALLIM)/SIGMA)
               IF (K.GT.3) K=3
               OUT(I)=K
            END IF
  200    CONTINUE
      END IF
      END
