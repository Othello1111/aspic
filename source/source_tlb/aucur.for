*+
*
*  - - - - - - - - - - -
*  :    A U C U R      :
*  - - - - - - - - - - -
*
* PROGRAM TO DISPLAY ONE OF FOUR USER CURSORS ON THE ARGS.
*
*	USE OF BUTTONS
*	1 - LOG SIZE AND POSITION OF CURSOR
*	2 - INCREASE SIZE OF CURSOR
*	3 - DECREASE SIZE OF CURSOR
*	4 - EXIT
*
* INPUT PARAMETERS
*	SIZE OF CURSOR
*	NO. OF CURSOR POSITIONS REQUIRED
*	COLOUR OF CUSOR
*	COLOUR OF POSITION INDICATOR
*	TYPE OF CURSOR  (1=CIRCLE,2=SQUARE,3=OPEN CROSS,4=ARROW)
*
* RETURNED
*	NO. OF POSITIONS ACTUALLY DEFINED
*	POSITIONS AND SIZES
*
*-
	IMPLICIT INTEGER (A-Z)
	DIMENSION SPOS(27)
	CHARACTER*1 CURCOL,INDCOL,CHARN
	CHARACTER AX*2,AY*2,ARAD*4,AXN*3,AYN*3,ARADN*5
	DATA AX/'AX'/,AY/'AY'/,ARAD/'ARAD'/

*  CHECK DATABASE TO SEE IF ANYTHING IS DISPLAYED

	CALL ARGS_NUMIM(IDMAX)
	IF (IDMAX.EQ.0) THEN
		CALL WRERR('NOIMS')
	ELSE

*  ALLOCATE ARGS

		CALL SRINIT(0,.FALSE.,STATUS)
		IF (STATUS.NE.0) THEN
			CALL WRERR('NOARGS')
		ELSE

* GET DETAILS OF LAST IMAGE DISPLAYED

			CALL ARGS_RDIM(XPOS,YPOS,ISX,ISY,I,I,STATUS)
			XOR=XPOS-(ISX/2)
			YOR=YPOS-(ISY/2)

* INQUIRE INITIAL RADIUS OF USER CURSOR

			RADIUS=10
			CALL RDKEYI('RADIUS',.TRUE.,1,RADIUS,I,STATUS)

* INQUIRE MAXIMUM NO. OF POSITIONS REQUIRED

			NPOS=1
			CALL RDKEYI('NPOS',.TRUE.,1,NPOS,I,STATUS)

* INQUIRE COLOUR OF CURSOR

			CURCOL='W'
			CALL RDKEYC('CURCOL',.TRUE.,1,CURCOL,I,STATUS)

* INQUIRE COLOUR OF INDICATOR

			INDCOL='W'
			CALL RDKEYC('INDCOL',.TRUE.,1,INDCOL,I,STATUS)

* INQUIRE CURSOR TYPE

			TYPE=1
			CALL RDKEYI('TYPE',.TRUE.,1,TYPE,I,STATUS)

* CALL CURSOR SUBROUTINE

			CALL ACURS(TYPE,NPOS,RADIUS,XPOS,YPOS,RET,CURCOL,
     1					INDCOL,SPOS)
			DO I=1,RET
			J=(I-1)*3+1
			ASCV=I+48
			CHARN=CHAR(ASCV)
			AXN=AX//CHARN
			AYN=AY//CHARN
			ARADN=ARAD//CHARN
			CALL WRKEYI(AXN,SPOS(J+1),1,STATUS)
			CALL WRKEYI(AYN,SPOS(J+2),1,STATUS)
			CALL WRKEYI(ARADN,SPOS(J),1,STATUS)
			END DO
		ENDIF

	ENDIF

	END
