C
C++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C
C          *********************
C          *                   *
C          * PROGRAM ITFGENA   *
C          *                   *
C          *********************
C
C
C         CALLING SEQUENCE
C             ITFGENA
C
C
C  PURPOSE
C  	TO GENERATE ITF TABLES FOR STANDARD LINEARITY CORRECTIONS
C
C  METHOD
C  	OBTAIN THE NUMBER OF TABLE ENTRIES AND AN OUTPUT DATASET.
C  	DETERMINE THE TYPE OF LINEARITY CORRECTION REQUIRED AND THE
C  	RANGE OF VALIDITY, THEN CALL GENLCT TO GENERATE THE TABLE.
C  	INSERT REQUIRED ITEMS IN OUTPUT DESCRIPTOR.
C
C       THIS DIFFERS FROM W-S AS IT ALLOWS DENSITIES DOWN TO -0.5
C       FOR ELECTRONOGRAPHIC FILMS.
C       THERE IS ALSO A NEW OPTION TO INPUT THE ITF BY MEANS
C       OF TYPING IN  A LOOK-UP TABLE
C
C  STARLINK PARAMETERS
C  	NENTRY
C  		NUMBER OF ENTRIES IN THE TABLE
C  	OUTPUT
C  		OUTPUT IMAGE DATASET FOR ITF TABLE
C  	ITFTYPE
C  		SPECIFIES WHICH CORRECTION IS REQUIRED
C  	LOLIMIT
C  		LOWER LIMIT OF TABLE VALIDITY
C  	UPLIMIT
C  		UPPER LIMIT OF TABLE VALIDITY
C  	TITLE
C  		TITLE FOR THE OUTPUT ITF TABLE
C       LUTVALS
C               FALSE PARAMETER FOR INPUTTING LOOK-UP TABLE
C
C
C  	R.F. WARREN-SMITH AND A.J. PENNY       RGO                82-NOV
C-------------------------------------------------------------------------
C
C
C
C  CALLS
C       THIS FILE:
C              GENLCT
C  	EDRS PACKAGE:
C  		GETPAR,GT2DIW,GETCMD,PTDSCR
C  	STARLINK:
C  		RDKEYC,RDKEYR,FRDATA
C
C  NOTES
C  	USES VAX %VAL FACILITY
C
C      A J PENNY                   RGO                         82-NOV
C -------------------------------------------------------------------
C
C
C
      PROGRAM ITFGENA
C
C
C
      CHARACTER ITFTYP*20,CVAL*1,TITLE(1)*30,PRBUF(1)*80
C
C SET NUMBER OF SUPPORTED ITF FUNCTIONS AND MAX NUMBER OF COEFFICIENTS
C SPECIFYING THE CORRECTION
C
      PARAMETER (NFUNCT=6,MAXORD=10)
      REAL LIMITU(NFUNCT),LIMITL(NFUNCT),LOLIM,C(MAXORD)
      REAL ALUTVL(2),BLUTVL(1000,2)
      INTEGER TYPE(NFUNCT)
C
C SET THE TYPE OF EACH ITF CORRECTION:
C 	1: POLYNOMIAL
C	2: ELECTRONOGRAPHIC EMULSION SATURATION CORRECTION
C
      DATA TYPE/1,1,2,2,2,3/
C
C SET LIMITS FOR THE RANGE OF VALIDITY OF EACH CORRECTION FUNCTION
C
      DATA LIMITU/1.0E10,4095.0,1.0E20,6.0,6.0,1.0E10/
* AJP DIFFERENCE
      DATA LIMITL/-1.0E10,0.0,-0.5,-0.5,-0.5,-1.0E10/
C
C DETERMINE WHICH ITF FUNCTION IS TO BE USED
C
      NITF = 1
      CALL GETCMD('ITFTYPE',
     +       'POLYNOMIAL,PDS,ELECTRONOGRAPHIC,L4,G5,LOOKUP.',
     +       1,NITF,ITFTYP,LITF,IERR)
C
C SET DEFAULT LOWER AND UPPER TABLE LIMITS
C
      LOLIM = LIMITL(NITF)
	UPLIM=LIMITU(NITF)
C
C IF CORRECTION IS A POLYNOMIAL:
C ------------------------------
C
	IF(TYPE(NITF).EQ.1) THEN
C
C TREAT SPECIAL POLYNOMIAL CORRECTIONS FIRST
C
	   IF(ITFTYP.EQ.'PDS') THEN
C
C SET COEFFICIENTS FOR STANDARD PDS CORRECTION
C
	      C(1)=-2.097E-3
	      C(2)=1.1207E-3
	      C(3)=1.256E-7
	      C(4)=-2.344E-11
	      DO 16 I=5,MAXORD
	         C(I)=0.0
   16       CONTINUE
C
C NOW TREAT THE GENERAL POLYNOMIAL CORRECTION
C
	   ELSE
C
C SET DEFAULT COEFFICIENTS, THEN OBTAIN VALUES FROM THE ENVIRONMENT
C
	      DO 17 I=1,MAXORD
	         C(I)=0.0
   17       CONTINUE
	      C(2)=1.0
	      CALL RDKEYR('CONST',.FALSE.,MAXORD,C,NVAL,ISTAT)
C
C SET DEFAULT TABLE LIMITS FOR THE GENERAL POLYNOMIAL CORRECTION
C
	      LOLIM=0.0
	      UPLIM=1.0
         ENDIF
C
C IF THE CORRECTION IS AN ELECTRONOGRAPHIC EMULSION SATURATION CORRN.
C -------------------------------------------------------------------
C
	ELSE IF(TYPE(NITF).EQ.2) THEN
C
C TREAT THE SPECIAL CASES FIRST
C
	   IF(ITFTYP.EQ.'L4') THEN
C
C SET THE L4 FILM CONSTANT
C
	      C(1)=18.9
	   ELSE IF(ITFTYP.EQ.'G5') THEN
C
C SET THE G5 FILM CONSTANT
C
	      C(1)=9.45
C
C NOW TREAT THE GENERAL ELECTRONOGRAPHIC CORRECTION
C
	   ELSE
C
C SET THE DEFAULT, THEN OBTAIN A FILM CONSTANT FROM THE ENVIRONMENT
C
	      C(1)=18.9
	      CALL GETPAR('CONST','REAL',1,1.0E-20,1.0E20,.TRUE.,IVAL,
     +	    C(1),IERR)
C
C SET THE DEFAULT TABLE LIMITS FOR THE GENERAL CORRECTION
C
* AJP DIFFERENCE
	      LIMITU(NITF)=1.01*C(1)
	      UPLIM=0.5*C(1)
	   ENDIF
C
C IF THE CORRECTION IS BY INPUTTING A LOOK-UP TABLE
C---------------------------------------------------
C
      ELSE IF (TYPE(NITF).EQ.3) THEN
         CALL WRUSER(' INPUT VALUE PAIRS; BLANK TO EXIT',ISTAT)
         K = 1
   20    CONTINUE
         CALL CNPAR('LUTVALS',ISTAT)
         CALL RDKEYR('LUTVALS',.FALSE.,2,ALUTVL,NVAL,ISTAT)
         IF (ISTAT.EQ.0) THEN
            KA = K - 1
            IF(KA.EQ.0) THEN
               KA = 1
               BLUTVL(1,1) = -1.0E10
            ENDIF
            IF(BLUTVL(KA,1).LT.ALUTVL(1)) THEN
               BLUTVL(K,1) = ALUTVL(1)
               BLUTVL(K,2) = ALUTVL(2)
               K = K + 1
            ELSE
               CALL WRUSER('1ST MUST INCREASE,TRY AGAIN',LSTA)
            ENDIF
         ENDIF
         IF(ISTAT.EQ.0) GO TO 20
         IF(K.EQ.1) CALL WRUSER('NEEDS AT LEAST 2 PAIRS',LSTA)
         IF(K.EQ.1) GO TO 20
         KTOT = K - 1
C
C SET LOWER AND UPPER LIMITS TO 1ST AND LAST PAIRS
C
         LIMITL(NITF) = BLUTVL(1,1)
         LIMITU(NITF) = BLUTVL(KTOT,1)
         LOLIM = LIMITL(NITF)
         UPLIM = LIMITU(NITF)
C
C
C TYPE VALUES TO GIVE A CHECK
C
         CALL WRUSER(' ',ISTAT)
         CALL WRUSER(' INPUTS        OUTPUTS ',ISTAT)
         DO 22 K = 1,KTOT
         WRITE(PRBUF,21)BLUTVL(K,1),BLUTVL(K,2)
   21    FORMAT(' ',2F12.6)
         CALL WRUSER(PRBUF,ISTAT)
   22    CONTINUE
         CALL WRUSER(' ',ISTAT)
C
C---------------------------------------------------------------------
C
	ENDIF
C
C NOW OBTAIN THE TABLE LIMITS FROM THE ENVIRONMENT, USING THE DEFAULTS
C AND CONSTRAINING THEM SO THAT THEY LIE WITHIN THE VALID RANGE OF THE
C CORRECTION SPECIFIED. ALSO ENSURE UPLIM.GE.LOLIM
C
	CALL GETPAR('LOLIMIT','REAL',1,LIMITL(NITF),LIMITU(NITF),
     +	.TRUE.,IVAL,LOLIM,IERR)
      CALL GETPAR('UPLIMIT','REAL',1,LOLIM,LIMITU(NITF),
     +       	.TRUE.,IVAL,UPLIM,IERR)
*
* IF'ELECTRONOGRAPHIC' OPTION THEN CHECK THAT UPPER LIMIT
* IS BELOW SATURATION DENSITY AS IT ALLOWED TO BE 1.01 TIMES IT
*
      IF(TYPE(NITF).EQ.2.AND.ITFTYP.NE.'L4'.AND.ITFTYP.NE.'G5') THEN
         IF(UPLIM.GT.(0.99*C(1))) UPLIM = 0.99*C(1)
      ENDIF
C
C OBTAIN REQUIRED NO. OF ENTRIES IN ITF TABLE
C
      NENTRY = UPLIM - LOLIM + 1
      CALL GETPAR('NENTRY','INTEGER',1,2.0,10000.0,.TRUE.,NENTRY,RVAL,
     +IERR)
C
C OBTAIN OUTPUT IMAGE TO CONTAIN TABLE
C
      CALL GT2DIW('OUTPUT',204,.FALSE.,NENTRY,1,IPOINT,IERROU)
C
C OUTPUT IMAGE SUCESSFULLY OBTAINED:
C
      IF(IERROU.EQ.0) THEN
C
C CALL GENLCT TO FILL THE TABLE WITH THE REQUIRED FUNCTION
C
        CALL GENLCT(TYPE(NITF),LOLIM,UPLIM,C,MAXORD,BLUTVL,KTOT,
     +	%VAL(IPOINT),NENTRY,IERR)
C
C PUT TITLE AND UPPER AND LOWER TABLE LIMITS IN OUTPUT DESCRIPTOR
C
        TITLE(1)=ITFTYP(:LITF)//' ITF TABLE'
	  CALL RDKEYC('TITLE',.TRUE.,1,TITLE,NVAL,ISTAT)
	  CALL PTDSCR('OUTPUT','TITLE','CHARACTER',IVAL,RVAL,
     +    TITLE(1),IERR)
	  CALL PTDSCR('OUTPUT','UPLIM','REAL',IVAL,UPLIM,CVAL,IERR)
        CALL PTDSCR('OUTPUT','LOLIM','REAL',IVAL,LOLIM,CVAL,IERR)
      ENDIF
C
C RELEASE DATA AREA AND RETURN
C
      CALL FRDATA(' ',ISTAT)
      END
C
C
C



C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C          **************
C          *            *
C          * S/R GENLCT *
C          *            *
C          **************
C
C -----------------------------------------------------------------
C
C
C
      SUBROUTINE GENLCT(ITYPE,BOTLIM,TOPLIM,C,MAXORD,ALUT,KTOT,TABLE,
     +                  NTAB,IERR)
*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
*PURPOSE
*	TO GENERATE LINEARITY CORRECTION TABLES USING STANDARD FORMULAE
*
*METHOD
*	EVALUATE THE FORMULAE AT REGULAR INTERVALS AND STORE IN A TABLE
*
*ARGUMENTS
*	ITYPE (IN)
*	INTEGER
*		THE TYPE OF LINEARITY CORRECTION REQUIRED
*			1: POLYNOMIAL
*			2: ELECTRONOGRAPHIC EMULSION SATURATION CORRN.
*                     3: LOOK-UP TABLE INPUT
*	BOTLIM,TOPLIM (IN)
*	REAL
*		THE LOWER AND UPPER LIMITS FOR THE TABLE
*	C (IN)
*	REAL(MAXORD)
*		SET OF CONSTANTS FOR THE POLYNOMIAL FUNCTION
*		IF ITYPE=2, THE FIRST CONSTANT IS USED AS THE FILM
*		CONSTANT
*	MAXORD (IN)
*	INTEGER
*		NUMBER OF CONSTANTS C
*     ALUT   (IN)
*     REAL(1000,2)
*            LOOK-UP TABLE
*     KTOT
*     INTEGER
*            NUMBER OF ENTRIES IN LOOK-UP TABLE
*	TABLE (OUT)
*	REAL(NTAB)
*		THE CORRECTION TABLE
*	NTAB (IN)
*	INTEGER
*		THE NUMBER OF ENTRIES IN THE TABLE
*	IERR (OUT)
*	INTEGER
*		ERROR FLAG: ZERO FOR SUCCESS
*
*CALLS
*	NONE
*
*WRITTEN BY
*     A.J.PENNY  FROM STDLIN BY R.F.WARREN-SMITH
*-----------------------------------------------------------------------
C
C
      REAL TABLE(NTAB),C(MAXORD),ALUT(1000,2)
      IERR=0
C
C CHECK VALIDITY OF ARGUMENTS
C
      IF(BOTLIM.GT.TOPLIM) THEN
	IERR=1
      ELSE IF(NTAB.LT.2) THEN
	IERR=2
      ELSE
C
C CALCULATE INTERVAL BETWEEN TABLE ENTRIES
C
	DINTVL=(TOPLIM-BOTLIM)/(NTAB-1)
C
C SCAN THROUGH TABLE ENTRIES
C
	DO 1 IDEN=1,NTAB
	  D=BOTLIM+(IDEN-1)*DINTVL
C
C CALCULATE THE TABLE VALUE USING THE APPROPRIATE FORMULA
C
	  IF(ITYPE.EQ.1) THEN
	    DOUT=C(MAXORD)
	    DO 11 J=MAXORD-1,1,-1
	      DOUT=DOUT*D+C(J)
   11	    CONTINUE
C
	  ELSE IF(ITYPE.EQ.2) THEN
	    DOUT=-C(1)*LOG(1.0-D/C(1))
C
        ELSE IF(ITYPE.EQ.3) THEN
           K = 0
   20      CONTINUE
           K = K + 1
           IF(D.GT.ALUT(K,1)) GO TO 20
           KA = K - 1
           IF(KA.NE.0) THEN
              FRACT = (D-ALUT(KA,1))/(ALUT(K,1)-ALUT(KA,1))
              DOUT = ALUT(KA,2) + FRACT*(ALUT(K,2)-ALUT(KA,2))
           ELSE
              DOUT = ALUT(1,2)
           ENDIF
C
        ENDIF
C
        TABLE(IDEN) = DOUT
    1   CONTINUE
C
      ENDIF
C
      END
