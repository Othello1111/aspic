C++
C
C      STARLINK ENVIRONMENT PROGRAM   *** MEDIAN ***
C
C      WRITTEN BY K F HARTLEY AT RGO ON 15/12/80
C
C      VERSION #1
C
C
C      THIS PROGRAM CREATES A NEW ARRAY FROM A STARLINK 2-D ARRAY
C      IN WHICH EACH ELEMENT OF THE NEW ARRAY IS THE MEDIAN OF THE
C      CORRESPONDING NEIGHBOURHOOD IN THE OLD ARRAY.
C
C
C
C      THE MEDIAN IS COMPUTED BY USING A NAG ROUTINE TO SORT THE
C      PIXELS AND PICK THE CENTRAL ONE.
C      THIS VERSION DOES THE JOB PROPERLY BY TAKING A BOX CENTRED ON
C      EACH PIXEL IN TURN.
C
C      THE USER IS PROMPTED FOR :-
C      INPUT   THE INPUT IMAGE
C      OUTPUT  THE OUTPUT IMAGE ( ? THE RESULT OF APPLYING A "MEDIAN"
C              FILTER TO INPUT.
C
C      BOX     THIS SHOULD BE AN ODD,POSITIVE INTEGER GREATER THAN 3
C              AND DEFINES THE SIZE OF THE BOX FOR WHICH THE MEDIAN IS
C              COMPUTED.
C
C--
      INTEGER*4 AXIS(2),STATUS,PIN,POUT,BOX
      INCLUDE 'INTERIM(FMTPAR)'
C
C      PICK UP THE INPUT AND OUTPUT IMAGES
C
      CALL RDIMAG('INPUT',FMT_R,2,AXIS,I,PIN,STATUS)
      IF (STATUS.NE.0.OR.I.NE.2) THEN
            CALL WRERR('HELLIN')
            CALL EXIT
      END IF
      CALL WRIMAG('OUTPUT',FMT_R,AXIS,2,POUT,STATUS)
      IF (STATUS.NE.0) THEN
            CALL WRERR('HELLOUT')
            CALL EXIT
      END IF
C
C      NOW PICK UP THE BOX SIZE
C      CHECK FOR : BAD STATUS
C                  WRONG NUMBER OF PARAMETERS
C                  VALUE LESS THAN 3
C                  EVEN VALUE
C                  VALUE TOO LARGE
C
      BOX=5
  100 CALL RDKEYI('BOX',.TRUE.,1,BOX,I,STATUS)
      IF (STATUS.GT.1.OR.I.GT.1) THEN
            CALL WRERR('HELL1')
            CALL CNPAR('BOX',STATUS)
            IF (STATUS.NE.0) THEN
                  CALL EXIT
            ELSE
                  GO TO 100
            END IF
      END IF
      IF (BOX.LT.3) THEN
         CALL WRERR('HELL2')
         CALL CNPAR('BOX',STATUS)
         IF (STATUS.NE.0) THEN
            CALL EXIT
         ELSE
            GO TO 100
         END IF
      END IF
      NB=AXIS(1)/BOX
      MB=AXIS(2)/BOX
      IREM=2*(BOX/2)-BOX
      IF (IREM.EQ.0.OR.NB.LT.3.OR.MB.LT.3) THEN
         CALL WRERR('HELL3')
         CALL CNPAR('BOX',STATUS)
         IF (STATUS.NE.0) THEN
            CALL EXIT
         ELSE
            GO TO 100
         END IF
      END IF
C
C      HAVING GOT THE PARAMETERS , DO THE WORK
C
      CALL MEDIAN(%VAL(PIN),%VAL(POUT),AXIS(1),AXIS(2),BOX)
      CALL FRDATA (' ',STATUS)
      CALL EXIT
      END
      SUBROUTINE MEDIAN(IN,OUT,N,M,IBOX)
C
C      THIS IS A NEW ROUTINE BUT IS SIMILAR IN INTENT TO "MODAL"
C
C      IN IS AN INPUT ARRAY ; OUT AN OUTPUT ARRAY BOTH OF SIZE N BY M
C
C      THE ROUTINE APPLIES A MEDIAN FILTER TO THE INPUT ARRAY , YIELDING
C      THE OUTPUT ARRAY.
C      IBOX DEFINES THE SIZE OF THE BOX OVER WHICH THE MEDIAN IS COMPUTED
C
      REAL IN(N,M),OUT(N,M)
      REAL MEDN
C
C      SORT IS USED TO SORT THE PIXELS IN EACH BOX FOR THE MEDIAN
C
      DOUBLE PRECISION SORT(2500)
C
C      BOXSQ IS THE NUMBER OF PIXELS IN THE BOX (REAL) IBOXSC IS THE
C      INTEGER VERSION.
C
      IBOXSQ=IBOX*IBOX
      BOXSQ=IBOXSQ
C
C      FIRST ZEROIZE THE OUTPUT ARRAY
C
      DO 20 J=1,M
         DO 10 I=1,N
           OUT(I,J)=0
   10    CONTINUE
   20 CONTINUE
C
C      NOW FIGURE WHICH PIXELS CAN HAVE A BOX OF THIS SIZE ROUND THEM
C
      ISIDE=(IBOX-1)/2
      IS=1+ISIDE
      IE=N-ISIDE
      JS=1+ISIDE
      JE=M-ISIDE
      LOOP=0
C
C      NOW LOOP THROUGH ALL POSSIBLE PIXELS
C
      DO 500 J=JS,JE
         JHS=J-ISIDE
         JHE=J+ISIDE
         DO 400 I=IS,IE
            IHS=I-ISIDE
            IHE=I+ISIDE
C
C      SET THE PIXEL VALUES INTO A 1D ARRAY FOR SORTING
C
            K=1
            DO 200 JH=JHS,JHE
               DO 180 IH=IHS,IHE
                  SORT(K)=IN(IH,JH)
                  K=K+1
  180          CONTINUE
  200       CONTINUE
C
C      NOW CALL NAG ROUTINE TO DO THE SORT
C
            IFAIL=0
            CALL M01ANF(SORT,1,IBOXSQ,IFAIL)
C
C      AND TEST THAT IT IS OK
C
            IF (IFAIL.NE.0) GO TO 400
C
C      NOW PICK CENTRAL VALUE
C
            MEDN=SORT((IBOXSQ+1)/2)
C
C      AND STORE IT IN THE OUTPUT ARRAY
C
            OUT(I,J)=MEDN
  400    CONTINUE
C
C      ENCOURAGE THE USER
C
         IF (LOOP.GE.20) THEN
            CALL WRUSER('ANOTHER 20 ROWS DONE',ISTAT)
            LOOP=1
         END IF
         LOOP=LOOP+1
  500 CONTINUE
C
C     AND RETURN TO CALLING SEGMENT
C
      RETURN
      END
