C++
C
C      STARLINK ENVIRONMENT PROGRAM   *** MODE ***
C
C      WRITTEN BY K F HARTLEY AT RGO ON 15/12/80
C
C      VERSION #1
C
C
C      THIS PROGRAM CREATES A NEW ARRAY FROM A STARLINK 2-D ARRAY
C      IN WHICH EACH ELEMENT OF THE NEW ARRAY IS THE MODE OF THE
C      CORRESPONDING NEIGHBOURHOOD IN THE OLD ARRAY.
C
C      THE DETAILS ARE A BIT CRUDE .
C
C      THERE MAY BE RATHER FEW PIXELS IN THE BOX USED TO CALCULATE
C      THE MODE , SO THE HISTOGRAM CONTAINS ONLY 21 BINS .
C      THE MODE IS THEN TAKEN AS THE HISTOGRAM BIN WHICH CONTAINS
C      THE LARGEST NUMBER OF OCCURRENCES .
C      THIS MAY BE CHANGED IF REQUIRED.
C
C      THIS IS AN IMPROVED VERSION OF THE EARLIER PROGRAM MODAL
C      WHERE THE MODE IS COMPUTED FOR A BOX CENTRED AT EVERY PIXEL,
C      EXCEPT AT THE EDGES.THERE IS , THEREFORE , NO NEED FOR
C      LINEAR INTERPOLATION .
C
C      THE USER IS PROMPTED FOR :-
C      INPUT   THE INPUT IMAGE
C      OUTPUT  THE OUTPUT IMAGE ( ? THE RESULT OF APPLYING A "MODAL"
C              FILTER TO INPUT.
C
C      BOX     THIS SHOULD BE AN ODD,POSITIVE INTEGER GREATER THAN 3
C              AND DEFINES THE SIZE OF THE BOX FOR WHICH THE MODE IS
C              COMPUTED.
C
C--
      INTEGER*4 AXIS(2),STATUS,PIN,POUT,BOX
      INCLUDE 'INTERIM(FMTPAR)'
C
C      PICK UP THE INPUT AND OUTPUT IMAGES
C
      CALL RDIMAG('INPUT',FMT_SL,2,AXIS,I,PIN,STATUS)
      IF (STATUS.NE.0.OR.I.NE.2) THEN
            CALL WRERR('HELLIN')
            CALL EXIT
      END IF
      CALL WRIMAG('OUTPUT',FMT_SL,AXIS,2,POUT,STATUS)
      IF (STATUS.NE.0) THEN
            CALL WRERR('HELLOUT')
            CALL EXIT
      END IF
C
C      NOW PICK UP THE BOX SIZE
C      CHECK FOR : BAD STATUS
C                  WRONG NUMBER OF PARAMETERS
C                  VALUE LESS THAN 3
C                  EVEN VALUE
C                  VALUE TOO LARGE
C
      BOX=5
  100 CALL RDKEYI('BOX',.TRUE.,1,BOX,I,STATUS)
      IF (STATUS.GT.1.OR.I.GT.1) THEN
            CALL WRERR('HELL1')
            CALL CNPAR('BOX',STATUS)
            IF (STATUS.NE.0) THEN
                  CALL EXIT
            ELSE
                  GO TO 100
            END IF
      END IF
      IF (BOX.LT.3) THEN
         CALL WRERR('HELL2')
         CALL CNPAR('BOX',STATUS)
         IF (STATUS.NE.0) THEN
            CALL EXIT
         ELSE
            GO TO 100
         END IF
      END IF
      NB=AXIS(1)/BOX
      MB=AXIS(2)/BOX
      IREM=2*(BOX/2)-BOX
      IF (IREM.EQ.0.OR.NB.LT.3.OR.MB.LT.3) THEN
         CALL WRERR('HELL3')
         CALL CNPAR('BOX',STATUS)
         IF (STATUS.NE.0) THEN
            CALL EXIT
         ELSE
            GO TO 100
         END IF
      END IF
C
C      HAVING GOT THE PARAMETERS , DO THE WORK
C
      CALL MODE(%VAL(PIN),%VAL(POUT),AXIS(1),AXIS(2),BOX)
      CALL FRDATA (' ',STATUS)
      CALL EXIT
      END
      SUBROUTINE MODE(IN,OUT,N,M,IBOX)
C
C      THIS IS A REWRITE OF AN RGODR ROUTINE WRITTEN BY K F HARTLEY
C
C      IN IS AN INPUT ARRAY ; OUT AN OUTPUT ARRAY BOTH OF SIZE N BY M
C
C      THE ROUTINE APPLIES A MODAL FILTER TO THE INPUT ARRAY , YIELDING
C      THE OUTPUT ARRAY.
C      IBOX DEFINES THE SIZE OF THE BOX OVER WHICH THE MODE IS COMPUTED
C
      INTEGER*4 IN(N,M),OUT(N,M)
C
C      HIST IS USED TO STORE THE HISTOGRAM - YES , ONLY 21 BINS!
C
      INTEGER*4 HIST(21)
C
C      FIRST ZEROIZE THE OUTPUT ARRAY
C
      DO 20 J=1,M
         DO 10 I=1,N
           OUT(I,J)=0
   10    CONTINUE
   20 CONTINUE
C
C      THEN FIND OUY WHICH PIXELS CAN BE DONE
C
      ISIDE=(IBOX-1)/2
      IS=1+ISIDE
      IE=N-ISIDE
      JS=1+ISIDE
      JE=M-ISIDE
C
C     THESE OUTER LOOPS (500 AND 400) ARE FOR THE PIXELS
C
      LOOP=0
      DO 500 J=JS,JE
         JHS=J-ISIDE
         JHE=J+ISIDE
         DO 400 I=IS,IE
            IHS=I-ISIDE
            IHE=I+ISIDE
C
C      FIRST FIND THE MIN AND MAX IN THE BOX
C
            MIN=IN(I,J)
            MAX=IN(I,J)
               DO 190 JH=JHS,JHE
                  DO 180 IH=IHS,IHE
                     IF(IN(IH,JH).GT.MAX) MAX=IN(IH,JH)
                     IF(IN(IH,JH).LT.MIN) MIN=IN(IH,JH)
  180             CONTINUE
  190          CONTINUE
C
C      IF THEY ARE THE SAME , THEN USE THAT VALUE
C
            IF (MIN.EQ.MAX) THEN
               OUT(I,J)=MIN
            ELSE
C
C      OTHERWISE FORM THE HISTOGRAM OF THE BOX SAMPLES
C
               DO 200 K=1,21
                  HIST(K)=0
  200          CONTINUE
               F=20.0/FLOAT(MAX-MIN)
               DO 290 JH=JHS,JHE
                  DO 280 IH=IHS,IHE
                     ITEM=IFIX(FLOAT(IN(IH,JH)-MIN)*F)+1
                     HIST(ITEM)=HIST(ITEM)+1
  280             CONTINUE
  290          CONTINUE
C
C      AND FIND THE BIN WITH THE LARGEST VALUE
C
               MAXH=0
               DO 300 K=1,21
                  IF (HIST(K).GT.MAXH) THEN
                     MAXH=HIST(K)
                     MODEVAL=K
                  END IF
  300          CONTINUE
C
C     THE POSITION OF THAT BIN IS THEN SCALED TO GIVE THE MODE
C
C      CRUDE , ISN'T IT?
C
               OUT(I,J)=IFIX(FLOAT(MODEVAL-1)/F)+MIN
            END IF
  400    CONTINUE
C
C      ENCOURAGE THE USER
C
         LOOP=LOOP+1
         IF (LOOP.GE.20) THEN
            CALL WRUSER('ANOTHER 20 ROWS DONE',ISTAT)
            LOOP=1
         END IF
  500 CONTINUE
      RETURN
      END
