C+
C
C      STARLINK ENVIRONMENT PROGRAM      *** LAPLACE ***
C
C      WRITTEN BY K F HARTLEY AT RGO ON 25/2/81
C
C       VERSION #2
C
C      THIS ROUTINE FORMS A NEW IMAGE FROM AN INPUT FRAME
C      BY SUBTRACTING THE LAPLACIAN OF THE IMAGE FROM THE IMAGE
C      THE SECOND VERSION ALLOWS N TIMES THE LAPLACIAN
C      TO BE SUBTRACTED.
C
C      THIS CAN BE THOUGHT OF AS A CONVOLUTION BY
C
C                   -N
C                -N 1+4N -N
C                   -N
C
C    PARAMETERS ARE:
C
C        INPUT:   THE INPUT IMAGE
C        OUTPUT:  THE OUTPUT IMAGE
C        TIMES:   THE MULTIPLICATIVE FACTOR IN THE ANALYSIS
C                 (CONNECTION FILE DEFAULTED TO 1)
C
C-
      INTEGER PIN,POUT,AX(2),STATUS
      INCLUDE 'INTERIM(FMTPAR)'
      INCLUDE 'INTERIM(ERRPAR)'
      CALL RDIMAG('INPUT',FMT_SL,2,AX,I,PIN,STATUS)
      IF (STATUS.NE.ERR_NORMAL.OR.I.NE.2) THEN
         CALL WRERR('HELLIN')
         CALL FRDATA('INPUT',STATUS)
         CALL EXIT
      END IF
      CALL WRIMAG('OUTPUT',FMT_SL,AX,2,POUT,STATUS)
      IF (STATUS.NE.ER_NORMAL) THEN
         CALL FRDATA(' ',STATUS)
         CALL EXIT
      END IF
C
C
C      PICK UP THE MULTIPLICATION FACTOR
C
  100 CALL RDKEYI('TIMES',.FALSE.,1,ITIM,I,STATUS)
      IF (STATUS.NE.ERR_NORAL) THEN
         CALL WRERR('HELLTIM',STATUS)
         CALL CNPAR('TIMES',STATUS)
         GO TO 100
      END IF
C      HAVING GOT INPUT AND OUTPUT FRAMES , DO THE WORK
C
      CALL LAPLACE(%VAL(PIN),%VAL(POUT),AX(1),AX(2),ITIM)
C
C      NOW TIDY UP AND GO HOME
C
      CALL FRDATA(' ',STATUS)
      CALL EXIT
      END
      SUBROUTINE LAPLACE(IN,OUT,N,M,IFACTOR)
C
C      THIS ROUTINE SUBTRACTS THE LAPLACIAN OF "IN"
C      FROM "IN" AND PUTS THE RESULT INTO OUT
C
      INTEGER IN(N,M),OUT(N,M)
C
C      FIRST TIDY UP THE EDGES OF OUT
C
      DO 100 I=1,N
         OUT(I,1)=0
         OUT(I,M)=0
  100 CONTINUE
      DO 200 J=2,M-1
         OUT(1,J)=0
         OUT(N,J)=0
  200 CONTINUE
C
C       NOW DO THE ARITHMETIC
C
      DO 400 J=2,M-1
         DO 300 I=2,N-1
            OUT(I,J)= (1 + 4*IFACTOR) * IN(I,J)
     1          -IFACTOR * ( IN(I+1,J)+IN(I-1,J)+IN(I,J+1)+IN(I,J-1))
  300    CONTINUE
  400 CONTINUE
      RETURN
      END
