C+
C
C      STARLINK ENVIRONMENT PROGRAM      *** UNPACK ***
C
C      WRITTEN BY K F HARTLEY AT RGO ON 23/1/81
C
C      VERSION #1
C
C      THIS PROGRAM COMPLEMENTS "PACK" IN THE SENSE THAT IT
C      UNSCRAMBLES DATA SCREWED-UP BY PACK
C
      INTEGER*4 PIN,POUT,AXIN(1),AXOUT(3),STATUS
C
C      FIRST GET INPUT FRAME
C
      CALL RDIMAG('INPUT',302,1,AXIN,I,PIN,STATUS)
      IF (STATUS.NE.0) THEN
         CALL WRERR('HELLIN',STATUS)
         CALL FRDATA(' ',STATUS)
         CALL EXIT
      END IF
C
C      ARRAYS FROM PACK ARE 1D ONLY , SO...
C
      IF (I.NE.1) THEN
         CALL WRERR('HELLDIM',STATUS)
         CALL FRDATA(' ',STATUS)
         CALL EXIT
      END IF
C
C     NOW FIND SIZE AND SCALE OF OUTPUT ARRAY
C
      CALL DIME(%VAL(PIN),AXIN(1),AXOUT(1),AXOUT(2),AXOUT(3),ISCALE)
C
C      IF AXOUT AND ISCALE DO NOT HAVE PLAUSIBLE VALUES , THE CHANCES
C      ARE THAT THE DATA HAD NOT BEEN THROUGH "PACK"
C
C      ISTAT IS USED AS A STATUS VALUE
C
      ISTAT=0
      IF (ISCALE.NE.1.AND.ISCALE.NE.2) ISTAT=1
C
C      NOTE THAT AXOUT(1) MUST BE POSITIVE AND NON-ZERO
C      WHILST THE OTHERS MAY BE ZERO IF THE INPUT ARRAY
C      WAS ORIGINALLY 1D OR 2D
C
      IF (AXOUT(1).LE.0) ISTAT=1
      IF (AXOUT(2).LT.0) ISTAT=1
      IF (AXOUT(3).LT.0) ISTAT=1
C
C      NOW GIVE OUT THE BAD NEWS
C
      IF (ISTAT.NE.0) THEN
         CALL WRERR('HELLDIM',STATUS)
         CALL FRDATA(' ',STATUS)
         CALL EXIT
      END IF
C
C      IF EVERYTHING IS OK , GET OUTPUT FRAME
C      BUT FIRST SORT OUT IT'S DIMENSIONS
C
      IDIM=1
      IF (AXOUT(2).NE.0) IDIM=2
      IF (AXOUT(3).NE.0) IDIM=3
C
C      NOW FIND OUT TOTAL NUMBER OF PIXELS IN OUTPUT
C
      NTOT=1
      DO 10 I=1,IDIM
         NTOT=NTOT*AXOUT(I)
   10 CONTINUE
      CALL WRIMAG('OUTPUT',102,AXOUT,IDIM,POUT,STATUS)
      IF (STATUS.NE.0) THEN
         CALL WRERR('HELLOUT',STATUS)
         CALL FRDATA(' ',STATUS)
         CALL EXIT
      END IF
C
C      WE ARE NOW READY TO UNPACK THIS DATA
C
      CALL UNPACK(%VAL(PIN),AXIN(1),%VAL(POUT),NTOT,ISCALE)
C
C     NOW TIDY UP AND GO HOME
      CALL FRDATA(' ',STATUS)
      CALL EXIT
      END
      SUBROUTINE DIME(IN,N,N1,N2,N3,ISCALE)
C
C      FINDS OUT TYPE AND DIMENSIONS OF AN ARRAY THAT HAS
C      BEEN THROUGH THE ROUTINE "PACK"
C
      INTEGER*2 IN(N)
C
C      ISCALE DENOTES THE NUMBER OF BITS PER OUTPUT PIXEL
C             IT SHOULD BE 1 OR 2
C      N1 IS THE FIRST DIMENSION OF THE ORIGINAL ARRAY - MUST BE >0
C      N2 IS THE SECOND DIMENSION - IT MAY BE ZERO (1D CASE)
C         BUT NOT NEGATIVE
C      N3 IS THIRD DIMESION - IT MAY BE ZERO (2D CASE) BUT MUST NOT
C         BE NEGATIVE
      ISCALE=IN(1)
      N1=IN(2)
      N2=IN(3)
      N3=IN(4)
      END
      SUBROUTINE UNPACK(IN,N,OUT,M,ISC)
C
C     THIS UNPACKS THE 1 OR 2 BITS PER SAMPLE
C      AND STORES THEM IN OUT
C
      INTEGER*2 IN(N),OUT(M)
C
C      KLOOP IS THE NUMBER OF OUTPUT SAMPLES PER INPUT SAMPLE
C      KDIV  IS THE DIVIDING FACTOR
C      KPOS  IS THE POSITION IN THE OUTPUT ARRAY
C
C      THE METHOD IS TO DIVIDE BY SUCESSIVE POWERS OF 2
C      AND THEN SUBTRACT THE RESULT OF MULTIPLYING BACK
C      IGNORING THE REMAINDER
C
      KLOOP=16/ISC
C
C  ZEROIZE THE OUTPUT ARRAY
C
      DO I=1,M
         OUT(I)=0
      END DO
C
C      THE OUTER LOOP RUNS THROUGH ALL THE INPUT SAMPLES
C
      DO 200 I=1,N-1
         KDIV=16*1024*(3-ISC)
C
C   THE FIRST 4 ELEMENTS OF IN WERE OVERWRITTEN BY PACK , SO...
C
         IF (I.LE.4) THEN
            IVAL=0
         ELSE
            IVAL=IN(I)
         END IF
C
C
C      NOTE THAT IVAL IS (BY DEFAULT) I*4 AND IN(I) I*2
C
C      PROBLEMS ARISE IF IN(I) IS NEGATIVE (MOST SIGNIFICANT BIT SET)
C      WHICH CAN BE CIRCUMVENTED AS FOLOWS...
C
         IF (IVAL.LT.0) IVAL=IVAL+64*1024
C
C      THE INNER LOOP IS OVER EACH OUTPUT SAMPLE IN EACH INPUT SAMPLE
C
         DO 100 K=1,KLOOP
            KPOS=(I-1)*KLOOP+K
            INEW=IVAL/KDIV
            OUT(KPOS)=INEW
            IVAL=IVAL-INEW*KDIV
            KDIV=KDIV/(2*ISC)
  100    CONTINUE
  200 CONTINUE
      RETURN
      END
