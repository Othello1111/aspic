*
*+ DIVFF  IMAGEIN1  IMAGEIN2  IMAGEOUT
*
*  THE QUOTIENT IMAGEIN1/(IMAGEIN2/F) IS STORED IN IMAGEOUT,
*  WHERE F IS THE MEAN PIXEL VALUE IN IMAGE2.
*  AN UNACCEPTABLY SMALL DIVISOR PIXEL FORCES A ZERO RESULT.
*

      INTEGER IDIMN1(99),IDIMN2(99)
      CHARACTER*40 MESS

      INCLUDE 'INTERIM(FMTPAR)'

      CALL RDIMAG('IN1',FMT_R,99,IDIMN1,NDIMS1,IPIN1,JSTAT)
      CALL RDIMAG('IN2',FMT_R,99,IDIMN2,NDIMS2,IPIN2,JSTAT)
      IF (NDIMS1.NE.NDIMS2) GO TO 9010
      NELS  =  1
      DO I  =  1,NDIMS1
         ID  =  IDIMN1(I)
         IF (IDIMN2(I).NE.ID) GO TO 9010
         NELS  =  NELS*ID
      END DO
      CALL WRIMAG('OUT',FMT_R,IDIMN1,NDIMS1,IPOUT,JSTAT)
      CALL DIVFF(NELS,%VAL(IPIN1),%VAL(IPIN2),%VAL(IPOUT),PMEAN)
      WRITE (MESS,'('' MEAN PIXEL ='',G14.6)') PMEAN
      CALL WRUSER(MESS,JSTAT)
      GO TO 9999

 9010 CONTINUE
      CALL WRUSER('IMAGES MUST BE OF SAME ORDER!',JSTAT)

 9999 CONTINUE
      CALL FRDATA(' ',JSTAT)
      END
      SUBROUTINE DIVFF(NELS,A,B,C,PM)
      INTEGER NELS
      REAL A(NELS),B(NELS),C(NELS)
      DOUBLE PRECISION DPS

      DPS = 0D0
      DO I  =  1,NELS
         DPS = DPS+B(I)
      END DO
      PM = REAL(DPS)/REAL(NELS)

      DO I=1,NELS
         DR = B(I)
         IF (ABS(DR).GT.1E-20) THEN
            QU = A(I)/(DR/PM)
         ELSE
            QU = 0.0
         END IF
         C(I)=QU
      END DO
      END
