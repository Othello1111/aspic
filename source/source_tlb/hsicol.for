	PROGRAM HSICOL
C
C+	STARLINK ENVIRONMENT PROGRAM ****HSICOL****
C
C	WRITTEN BY W F LUPTON NOV 1980
C
C	ALLOWS INTERACTIVE SPECIFICATION OF AN ARGS NEWLOOK
C	TABLE USING INTERPOLATION FROM A PRE-STORED SET OF
C	REFERENCE COLOURS THAT CORRESPOND TO FULLY SATURATED
C	COLOURS AT EVENLY SPACED HUES AT (ROUGHLY) CONSTANT
C	INTENSITY.
C       N.B. THE TERMINAL MUST BE IN T4010 COMPATIBLE MODE TO RUN
C            THIS ROUTINE.
C
C	PARAMETERS:-
C	OUTPUT	IMAGE TO CONTAIN LOOKUP TABLE
C	INTERP	LOGICAL VARIABLE INDICATING WHETHER COLOURS ARE
C		TO BE INTERPOLATED IN THE HUE-SATURATION DIAGRAM
C	ZERO	LOGICAL VALUE INDICATING WHETHER ZERO LEVEL IS
C		TO BE LEFT CLEAR (FOR THE BACKGROUND)
C
C      THE LUT CREATED CAN BE INSPECTED ON THE ARGS BY CALLS TO
C      LUTREAD AND ABLOCK.
C
C-
      INCLUDE 'INTERIM(FMTPAR)'
      INCLUDE 'INTERIM(ERRPAR)'
	INTEGER ERROR,PNTR,AXIS(2)
	LOGICAL ZERO,INTERP
C
C	READ NAME OF OUTPUT FRAME
C
	AXIS(1)=3
	AXIS(2)=256
10	CALL WRIMAG('OUTPUT',FMT_SL,AXIS,2,PNTR,ERROR)
	IF (ERROR.NE.ERR_NORMAL) THEN
		CALL WRERR('GETOUT')
		CALL FRDATA('OUTPUT',ERROR)
	CALL CNPAR('OUTPUT',ERROR)
		GOTO 10
	ENDIF
20	CALL RDKEYL('ZERO',.FALSE.,1,ZERO,I,ERROR)
	IF (ERROR.NE.ERR_NORMAL) THEN
		CALL WRERR('GETZERO')
		CALL CNPAR('ZERO',ERROR)
		GOTO 20
	ENDIF
30	CALL RDKEYL('INTERP',.FALSE.,1,INTERP,I,ERROR)
	IF (ERROR.NE.ERR_NORMAL) THEN
		CALL WRERR('GETINT')
		CALL CNPAR('INTERP',ERROR)
		GOTO 30
	ENDIF
	CALL GETDYN('WORK',FMT_SL,260,WORK,ERROR)
	IF (ERROR.NE.ERR_NORMAL) THEN
		CALL WRERR('GETWORK')
		GOTO 999
	ENDIF
C
C	AND CALL HSICOL2
C
	CALL HSICOL2(%VAL(WORK),%VAL(PNTR),INTERP,ZERO,ERROR)
C
C	FREE DATA THEN STOP
C
999	CALL FRDATA(' ',ERROR)
	CALL EXIT
	END
C
	SUBROUTINE HSICOL2(WORK,TABLE,INTERP,ZERO,ERROR)
C
C	W F LUPTON NOV 1980
C
      INCLUDE 'INTERIM(FMTPAR)'
      INCLUDE 'INTERIM(ERRPAR)'
	PARAMETER (RED=1,GREEN=2,BLUE=3,DIST=4,PI=3.141592654)
	INTEGER WORK(4,0:64),TABLE(3,0:255),ERROR,R,G,B
	LOGICAL BEGUN,ZERO,INTERP
C
C	INITIALISE VARIABLES GRAPHIC DEVICE AND CURSOR
C
	NUM=-1
	BEGUN=.FALSE.
	CALL T4010
	CALL CURDEF(' EQ*.')
	CALL VUPORT(0.15,1.15,0.0,1.0)
	CALL WINDOL(-4.0,4.0,-4.0,4.0)
	CALL DEVSPE(9600)
50	CALL PICCLE
	CALL WRUSER('LEGAL KEYS AND THEIR MEANINGS ARE:-',ERROR)
	CALL WRUSER(' ',ERROR)
	CALL WRUSER('<SP>	ACCEPT CURRENT POSITION',ERROR)
	CALL WRUSER('E	ACCEPT POINT AND EXIT',ERROR)
	CALL WRUSER('Q	QUIT AND RESTART',ERROR)
	CALL DRAWGRID(0.0,0.0,4.0)
C
C	START OF CURSOR LOOP
C
10	CALL CURSOR(I,X,Y)
	IF (X.EQ.0.0.AND.Y.EQ.0.0) THEN
		X=0.01
	ENDIF
	GOTO (20,20,40,10,10),I
C
C	<SP> MEANS MOVE TO CURRENT POINT AND WRITE TO TABLE
C
20	IF (X*X+Y*Y.GT.9.0) THEN
		CALL WRERR('OUTCIRC')
		GOTO 10
	ENDIF
	IF (.NOT.BEGUN) THEN
		XOLD=X
		YOLD=Y
	ENDIF
C
C	DRAW VECTOR
C
	CALL MOVTO2(XOLD,YOLD)
	CALL LINTO2(X,Y)
C
C	CONVERT TO R G B COORDS
C
	CALL RGB(X,Y,R,G,B)
C
C	AND UPDATE WORK TABLE
C
	NUM=NUM+1
	WORK(RED,NUM)=R
	WORK(GREEN,NUM)=G
	WORK(BLUE,NUM)=B
C
C	IF FIRST TIME THROUGH, RETURN AND REREAD CURSOR
C
	IF (.NOT.BEGUN) THEN
		BEGUN=.TRUE.
		GOTO 10
	ENDIF
	DIFF=ATAN2(Y,X)-ATAN2(YOLD,XOLD)
	IF (DIFF.LT.0.0) THEN
		DIFF=DIFF+2*PI
	ELSE IF (DIFF.GE.2*PI) THEN
		DIFF=DIFF-2*PI
	ENDIF
	WORK(DIST,NUM)=WORK(DIST,NUM-1)+1000*DIFF
	IF (I.EQ.2) THEN
		GOTO 30
	ELSE IF (NUM.LT.64) THEN
		XOLD=X
		YOLD=Y
		GOTO 10
	ELSE
		CALL WRERR('MAXPTS')
		GOTO 30
	ENDIF
C
C	Q MEANS START AGAIN
C
40	NUM=-1
	BEGUN=.FALSE.
	GOTO 50
C
C	FILL TABLE FROM VALUES IN WORK
C
30	FACTOR=255.0/WORK(DIST,NUM)
	IF (INTERP) THEN
		DO I=1,NUM
			JMIN=MIN(INT(FACTOR*WORK(DIST,I-1)+0.9999),254)
			JMAX=MIN(MAX(JMIN+1,(INT(FACTOR*WORK(DIST,I)+
     +			0.0001))),255)
			DO J=JMIN,JMAX
				TABLE(RED,J)=(WORK(RED,I-1)*(JMAX-J)+WORK(RED,I)
     +					*(J-JMIN))/(JMAX-JMIN)
				TABLE(GREEN,J)=(WORK(GREEN,I-1)*(JMAX-J)+WORK(GREEN,I)
     +					*(J-JMIN))/(JMAX-JMIN)
				TABLE(BLUE,J)=(WORK(BLUE,I-1)*(JMAX-J)+WORK(BLUE,I)
     +					*(J-JMIN))/(JMAX-JMIN)
			ENDDO
		ENDDO
	ELSE
		DO I=0,NUM
			IF (I.EQ.0) THEN
				JMIN=0
			ELSE
				JMIN=MIN(INT(FACTOR*(WORK(DIST,I-1)+
     +				WORK(DIST,I))/2.0+0.9999),254)
			ENDIF
			IF (I.EQ.NUM) THEN
				JMAX=255
			ELSE
				JMAX=MIN(MAX(JMIN+1,INT(FACTOR*
     +				(WORK(DIST,I)+WORK(DIST,I+1))/2.0+
     +				0.0001)),255)
			ENDIF
			DO J=JMIN,JMAX
				TABLE(RED,J)=WORK(RED,I)
				TABLE(GREEN,J)=WORK(GREEN,I)
				TABLE(BLUE,J)=WORK(BLUE,I)
			ENDDO
		ENDDO
	ENDIF
	IF (ZERO) THEN
		TABLE(RED,0)=0
		TABLE(GREEN,0)=0
		TABLE(BLUE,0)=0
	ENDIF
C
C	AND RETURN
C
999	RETURN
	END
C
	SUBROUTINE CIRCLE(X,Y,A)
C
C	W F LUPTON NOV 1980
C
	PARAMETER (PI=3.141592654)
	DT=PI/36
	CALL MOVTO2(X+A,Y)
	DO I=1,72
		CALL LINTO2(X+A*COS(I*DT),Y+A*SIN(I*DT))
	ENDDO
	RETURN
	END
C
	SUBROUTINE DRAWGRID(X,Y,S)
C
C	W F LUPTON NOV 1980
C
	PARAMETER (PI=3.141592654)
	BYTE COLOUR(9,6)
	DATA COLOUR/	'C','Y','A','N',' ',' ',' ','*','.',
     +			'R','E','D',' ',' ',' ',' ','*','.',
     +			'B','L','U','E',' ',' ',' ','*','.',
     +			'Y','E','L','L','O','W',' ','*','.',
     +			'M','A','G','E','N','T','A','*','.',
     +			'G','R','E','E','N',' ',' ','*','.'/
	DO I=1,3
		CALL CIRCLE(X,Y,(I*S)/4)
		CALL MOVTO2(X+S*COS(I*PI/3),Y+S*SIN(I*PI/3))
		CALL CHAHOL(COLOUR(1,2*I-1))
		CALL MOVTO2(X+S*COS(I*PI/3),Y+S*SIN(I*PI/3))
		CALL LINTO2(X-S*COS(I*PI/3),Y-S*SIN(I*PI/3))
		CALL CHAHOL(COLOUR(1,2*I))
	ENDDO
	RETURN
	END
C
	SUBROUTINE RGB(X,Y,R,G,B)
C
C	ROUTINE TO CONVERT A SCREEN POSITION TO R G B VALUES
C	IN THE RANGE 0 TO 255
C
C	W F LUPTON NOV 1980
C
      INCLUDE 'INTERIM(FMTPAR)'
      INCLUDE 'INTERIM(ERRPAR)'
	PARAMETER (PI=3.141592654,RED=1,GREEN=2,BLUE=3)
	INTEGER BASIS(3,0:11),ERROR,R,G,B
	DATA BASIS/	  0,255,  0, 85,255,  0,255,255,  0,
     +			255, 85,  0,255,  0,  0,255,  0, 85,
     +			255,  0,255, 85,  0,255,  0,  0,255,
     +			  0, 85,255,  0,255,255,  0,255, 85/
C
C	HAVE (IN BASIS) A SET OF 12 (R,G,B) TRIPLES THAT DEFINE
C	SATURATED COLOURS AT HUES OF 0,30,...,330 DEGREES
C
C	CALCULATE HUE AND SAT FROM X Y
C
	IF (X.EQ.0.0.AND.Y.EQ.0.0) THEN
		H=0
		S=0
	ELSE
		H=-ATAN2(Y,X)*180/PI
		IF (H.LT.0.0) THEN
			H=H+359.99
		ENDIF
		S=SQRT(X*X+Y*Y)/3
	ENDIF
C
C	INTERPOLATE IN BASIS TO FIND FULL SATURATION R G B
C
	I=H/30
	J=30*I
	R=(BASIS(RED,I)*(30-H+J)+BASIS(RED,MOD(I+1,12))*(H-J))/30
	G=(BASIS(GREEN,I)*(30-H+J)+BASIS(GREEN,MOD(I+1,12))*(H-J))/30
	B=(BASIS(BLUE,I)*(30-H+J)+BASIS(BLUE,MOD(I+1,12))*(H-J))/30
C
C	AND THEN INTERPOLATE IN TOWARDS GREY AXIS (255,255,255)
C
	R=R*S+255*(1-S)
	G=G*S+255*(1-S)
	B=B*S+255*(1-S)
C
C	RETURN
C
	RETURN
	END
