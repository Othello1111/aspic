C++
C
C      STARLINK ENVIRONMENT PROGRAM   *** COMPAVE ***
C
C      WRITTEN BY B A HARRISON AT RGO ON 16/8/82
C
C      VERSION #2
C
C      THIS PROGRAM PRODUCES A MORE COMPACT VERSION OF AN ARRAY ,
C      FOR EXAMPLE SO THAT IT WILL FIT ON AN ARGS DISPLAY SCREEN
C
C      IT WORKS BY AVERAGING TOGETHER PIXELS IN THE INPUT FRAME
C      TO FORM ONE PIXEL IN THE OUTPUT FRAME
C
C      THIS PROGRAM WILL WORK FOR BOTH 1-D AND 2-D IMAGES.
C
C     THE PARAMETERS ARE:
C
C           1)  INPUT    THE INPUT IMAGE
C           2)  OUTPUT   THE IMAGE CREATED FOR OUTPUT
C           3)  COMPRESS THE COMPRESSION FACTOR IN PIXELS
C
C
C--

C
C      BASED ON THE ORIGINAL PROGRAM BY K F HARTLEY AT RGO.
C

      INTEGER*4 AXISIN(2),AXISOU(2),STATUS,PIN,POUT,FACTOR
      INCLUDE 'INTERIM(FMTPAR)'
      INCLUDE 'INTERIM(ERRPAR)'
C
C      FIRST GET THE COMPRESSION FACTOR,WHICH MUST BE AN INTEGER
C
      FACTOR=1
  100 CALL RDKEYI('COMPRESS',.TRUE.,1,FACTOR,I,STATUS)
      IF(STATUS.GT.1.OR.I.GT.1.OR.FACTOR.LT.1) THEN
            CALL WRERR('DAMN')
            CALL CNPAR('COMPRESS',STATUS)
            IF (STATUS.GT.0) THEN
               CALL EXIT
            ELSE
               GO TO 100
            END IF
      END IF
C
C      NOW GET INPUT IMAGE
C
      CALL RDIMAG('INPUT',FMT_R,2,AXISIN,MAX,PIN,STATUS)
      IF (STATUS.NE.0.OR.MAX.GT.2) THEN
            CALL WRERR('BLAST')
            CALL EXIT
      END IF
C
C      GIVEN FACTOR AND AXISIN WE CAN COMPUTE THE
C      SIZE OF THE OUTPUT IMAGE
C
      AXISOU(1)=AXISIN(1)/FACTOR
      AXISOU(2)=AXISIN(2)/FACTOR
      IF(AXISOU(2).LT.1) AXISOU(2)=1
      CALL WRIMAG('OUTPUT',FMT_R,AXISOU,MAX,POUT,STATUS)
      IF (STATUS.NE.0) THEN
         CALL WRERR('HELL')
         CALL EXIT
      END IF
C
C      NOW WE HAVE PARAMETERS , WE CALL ALGORITHM
C
      CALL COMPAVE(%VAL(PIN),AXISIN(1),AXISIN(2),
     1             %VAL(POUT),AXISOU(1),AXISOU(2),FACTOR)
      CALL FRDATA(' ',STATUS)
      CALL EXIT
      END
      SUBROUTINE COMPAVE(IN,NX,NY,OUT,MX,MY,FACTOR)
C
C
C      THIS ROUTINE FORMS AVERAGES OF BLOCKS OF FACTOR*FACTOR
C      PIXELS IN ARRAY "IN" , WHOSE SIZE IS NX BY NY
C      AND PUTS THE RESULTS INTO THE OUTPUT ARRAY "OUT" OF
C      SIZE MX BY MY
C
C      ALL THE PARAMETERS ARE OF TYPE INTEGER*4
C
C      THIS SUBROUTINE WAS MODIFIED BY B A HARRISON  ,BASED ON THE
C      SUBROUTINE BY K F HARTLEY , BASED ON THE SAME ROUTINE
C      IN RGODR , WRITTEN BY C D PIKE
C
C--
      INTEGER FACTOR,ROW(2048)
      REAL IN(NX,NY),OUT(MX,MY)
C
C      BOX IS THE TOTAL NUMBER OF PIXELS IN THE INPUT FRAME
C      WHICH ARE AVERAGED TO GIVE ONE PIXEL IN THE OUTPUT FRAME
C
       IF (NY.GT.1) THEN
          BOX=FACTOR*FACTOR
       ELSE
           BOX=FACTOR
       END IF

C
C      TEST TO SEE IF THE IMAGE IS 1-D. IF SO THEN CREATE THE
C      OUTPUT IMAGE AND RETURN.
C

      IF (NY.EQ.1.AND.MY.EQ.1) THEN
	  DO 600 I=1,MX
	     SUM=0.0
	     DO 500 J=1,FACTOR
                SUM=IN(K,1)
	        K=K+1
500	      CONTINUE
              COLUMN=SUM/FACTOR
	      OUT(I,1)=COLUMN
600       CONTINUE
       ELSE
C
C
C      THIS PART OF THE SUBROUTINE IS EXECUTED IF THE IMAGE IS 2-D
C
C      OUTER LOOP GOES THROUGH THE OUTPUT PIXELS
C
      DO 400 J=1,MY
         DO 10 JR=1,NX
          ROW(JR)=0
   10    CONTINUE
         NSTLIN=(J-1)*FACTOR+1
         NENLIN=NSTLIN+FACTOR-1
C
C      FORM THE COLUMN SUMS
C
         DO 200 K=NSTLIN,NENLIN
          DO 100 I=1,NX
           ROW(I)=ROW(I)+IN(I,K)
  100     CONTINUE
  200    CONTINUE
C
C      NOW SUM THE COLUMN SUMS
C
         DO 300 I=1,MX
          ITEMP=0
          IST=(I-1)*FACTOR
          IEN=IST+FACTOR-1
           DO 250 IL=IST,IEN
            ITEMP=ITEMP+ROW(IL)
  250      CONTINUE
C
C      FINALLY DIVIDE BY NUMBER OF PIXELS TO FORM AVERAGE
C
          OUT(I,J)=ITEMP/BOX
  300    CONTINUE
  400 CONTINUE
      END IF
      END
