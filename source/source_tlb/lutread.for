	PROGRAM LUTREAD
C
C+	PROGRAM LUTREAD
C
C	SENDS A COLOUR LOOKUP TABLE TO THE ARGS
C
C	OPTIONAL THRESHHOLDS AND LOGGING OF THE SCALE
C
C	PARAMETERS
C		LUT:	COLOUR LOOKUP TABLE
C		LIMITS:	RANGE IN ARGS LOOKUP TABLE ONTO WHICH LUT
C			IS TO BE MAPPED
C		LOG:    TRUE IFF A LOG SCALE IS TO BE USED
C
C     THE LAST TWO ARE CONNECTION FILE DEFAULTED
C
C	WFL RGO FEB 1981 - MODIF JULY 1981 FOR NEW ARGS ROUTINES
C
C-
	IMPLICIT INTEGER (A-Z)
      INCLUDE 'INTERIM(ERRPAR)'
      INCLUDE 'INTERIM(FMTPAR)'
	INTEGER LIMITS(2),AXIS(2)
	LOGICAL LLOG
C
C	READ THE INPUT LUT
C
10	CALL RDIMAG('LUT',FMT_SL,2,AXIS,NAXIS,INPTR,STATUS)
	IF (STATUS.NE.ERR_NORMAL) THEN
		CALL CNPAR('LUT',STATUS)
		GOTO 10
	ENDIF
	IF (NAXIS.NE.2.OR.AXIS(1).NE.3.OR.AXIS(2).NE.256) THEN
		CALL WRUSER('MUST BE 3*256 IMAGE',STATUS)
		CALL CNPAR('LUT',STATUS)
		GOTO 10
	ENDIF
C
C	NOW READ LIMITS
C
20	CALL RDKEYI('LIMITS',.FALSE.,2,LIMITS,I,STATUS)
	IF (STATUS.NE.ERR_NORMAL) THEN
		CALL CNPAR('LIMITS',STATUS)
		GOTO 20
	ENDIF
	IF (I.NE.2) THEN
		CALL WRUSER('MUST BE TWO LIMITS',STATUS)
		CALL CNPAR('LIMITS',STATUS)
		GOTO 20
	ENDIF
	DO I=1,2
		IF (LIMITS(I).LT.0.OR.LIMITS(I).GT.255) THEN
			CALL WRUSER('MUST BE IN RANGE [0,255]',STATUS)
			CALL CNPAR('LIMITS',STATUS)
			GOTO 20
		ENDIF
	ENDDO
C
C	NOW READ LOG
C
30	CALL RDKEYL('LOG',.FALSE.,1,LLOG,I,STATUS)
	IF (STATUS.NE.ERR_NORMAL) THEN
		CALL CNPAR('LOG',STATUS)
		GOTO 30
	ENDIF
C
C	AND CALL LUTREAD2
C
	CALL LUTREAD2(%VAL(INPTR),LIMITS(1),LIMITS(2),LLOG)
	CALL EXIT
	END
C
	SUBROUTINE LUTREAD2(LUT,LOW,HIGH,LLOG)
C
C	ROUTINE TO SEND LOOKUP TABLE TO THE ARGS
C
C	ARGUMENTS
C		LUT	INTEGER ARRAY	LOOKUP TABLE
C		LOW	INTEGER		LOW THRESHHOLD VALUE
C		HIGH	INTEGER		HIGH THRESHHOLD VALUE
C		LLOG	LOGICAL		TRUE IFF LOG SCALE REQUIRED
C
C	WFL RGO FEB 1981
C
	INTEGER LUT(3,0:255),TABLE(3,0:255),LOW,HIGH,STATUS
	LOGICAL LLOG
C
C	GET ARGS
C
	CALL SRINIT(0,.FALSE.,STATUS)
	IF (STATUS.NE.0) THEN
		CALL WRUSER('NO ARGS',STATUS)
		GOTO 999
	ENDIF
C
C	SET UP TABLE (CHECK FOR THE CASE HIGH=LOW)
C
	IF (HIGH.EQ.LOW) THEN
		HIGH=HIGH+1
	ENDIF
	RATIO=255.0/(HIGH-LOW)
	DO I=0,255
		K=MAX(0.0,MIN(RATIO*(I-LOW),255.0))
		IF (LLOG) THEN
			K=45.986*LOG(REAL(K)+1.0)
		ENDIF
		DO J=1,3
			TABLE(J,I)=LUT(J,K)
		ENDDO
	ENDDO
C
C	SEND TO ARGS
C
	CALL SRCOLS(0,256,TABLE)
C
C	RETURN
C
999	RETURN
	END
