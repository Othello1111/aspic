C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C      **************
C      *            *
C      * S/R POLFIT *
C      *            *
C      **************
C
C
C
C    PURPOSE
C
C     DOES A LEAST SQUARES FIT TO DATA WITH A POLYNOMIAL CURVE,
C     Y=A(1)+A(2)*X+A(3)*X**2+...
C
C
C   ARGUMENTS
C    IN
C     X=ARRAY OF DATA POINTS FOR INDEPENDENT VARIABLE
C     Y=ARRAY OF DATA POINTS FOR DEPENDENT VARIABLE
C     SIGMAY=ARRAY OF STANDARD DEV. FOR Y DATA POINTS
C     NPTS=NUMBER OF PAIRS OF DATA POINTS
C     NTERMS=NUMBER OF COEFFICINTS (DEGREE OF POLYNOMIAL+1)
C     MODE=DETERMINES METHOD OF WEIGHTING LEAST SQUARES FIT
C          +1=(INSTRUMENTAL) WEIGHT(I)=1./SIGMAY(I)**2
C           0=(NO WEIGHTING)  WEIGHT(I)=1.
C          -1=(STATISTICAL)  WEIGHT(I)=1./Y(I)
C   OUT
C     A=ARRAY OF COEFFICIENTS OF POLYNOMIAL
C     CHISQR=REDUCED CHI SQUARE FOR FIT
C     RMS = STD DEVIATION
C
C
C   NOTES
C
C     VALID UP TO NTERMS=10
C
C     NEEDS INPUT X,Y VALUES NOT MUCH ABOVE 1
C
C     NOTE INPUT,OUTPUT REAL VALUES ARE DOUBLE PRECISION
C
C
C
C   CALLS
C     This file
C       DETERM
C
C     GOT FROM M J CURRIE BY A J PENNY           7-SEP-82
C
C -------------------------------------------------------------
C
C
C
      SUBROUTINE POLFIT(X,Y,SIGMAY,NPTS,NTERMS,MODE,A,CHISQR,RMS)
C
C
C
      IMPLICIT DOUBLE PRECISION (A-H),(O-Z)
      DIMENSION X(1),Y(1),A(1),SIGMAY(1)
      DIMENSION SUMX(19),SUMY(10),ARRAY(10,10)
C
C  Check for constant values
C
      KCONST = 1
      DO K = 1,NPTS
         IF (Y(K).NE.Y(1)) KCONST = 0
      ENDDO
      IF (KCONST.EQ.1) THEN
         A(1) = Y(1)
         DO K = 2,NTERMS
            A(K) = 0.0
         ENDDO
         CHISQR = 0.0
         RMS = 0.0
      ENDIF
C
C     ACCUMULATE WEIGHTED SUMS
C
      IF (KCONST.EQ.1) THEN
      NMAX=2*NTERMS-1
      DO 13 N=1,NMAX
13    SUMX(N)=0.
      DO 15 J=1,NTERMS
15    SUMY(J)=0.
      CHISQ=0.
      DO 50 I=1,NPTS
      XI=X(I)
      YI=Y(I)
      IF (MODE)32,37,39
32    IF (YI)35,37,33
33    WEIGHT=1./YI
      GO TO 41
35    WEIGHT=-1./YI
      GO TO 41
37    WEIGHT=1.
      GO TO 41
39    WEIGHT=1./SIGMAY(I)**2
41    XTERM=WEIGHT
      DO 44 N=1,NMAX
      SUMX(N)=SUMX(N)+XTERM
44    XTERM=XTERM*XI
      YTERM=WEIGHT*YI
      DO 48 N=1,NTERMS
      SUMY(N)=SUMY(N)+YTERM
48    YTERM=YTERM*XI
      CHISQ=CHISQ+WEIGHT*YI**2
50    CONTINUE
C
C     CONSTRUCT MATRICES AND CALCULATE COEFFICIENTS
C
      DO 54 J=1,NTERMS
      DO 54 K=1,NTERMS
      N=J+K-1
54    ARRAY(J,K)=SUMX(N)
      DELTA=DETERM(ARRAY,NTERMS)
      IF(DELTA)61,57,61
57    CHISQR=0.
      DO 59 J=1,NTERMS
59    A(J)=0.
      GO TO 80
61    DO 70 L=1,NTERMS
      DO 66 J=1,NTERMS
      DO 65 K=1,NTERMS
      N=J+K-1
65    ARRAY(J,K)=SUMX(N)
66    ARRAY(J,L)=SUMY(J)
70    A(L)=DETERM(ARRAY,NTERMS)/DELTA
C
C     CALCULATE CHI SQUARE
C
      FREE=NPTS-NTERMS
      IF (FREE .LE. 0.)RETURN
      DO 75 J=1,NTERMS
      CHISQ=CHISQ-2.*A(J)*SUMY(J)
      DO 75 K=1,NTERMS
      N=J+K-1
75    CHISQ=CHISQ+A(J)*A(K)*SUMX(N)
      CHISQR=CHISQ/FREE
C
C     CALCULATE STANDARD DEVIATION
C
      RMS=0.
      DO 90 K=1,NPTS
      CALC=A(1)
      IF (NTERMS .EQ. 1)GO TO 90
      DO 95 J=2,NTERMS
95    CALC=CALC+A(J)*X(K)**(J-1)
90    RMS=RMS+(Y(K)-CALC)**2
      RMS=SQRT(RMS/FREE)
80    CONTINUE
      ENDIF
C
C
C
      END



C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C      FUNCTION DETERM
C
C
C     CALCULATES THE DETERMINANT OF A SQUARE MATRIX
C     ARRAY=MATRIX
C     NORDER=ORDER OF DETERMINANT (DEGREE OF MATRIX)
C     NOTE: THIS ROUTINE DESTROYS THE INPUT MATRIX ARRAY
C     DIMENSION VALID FOR NORDER UP TO 10
C
C
C      A J PENNY             RGO                      83-2-16
C ------------------------------------------------------------
C
C
C
      FUNCTION DETERM(ARRAY,NORDER)
C
C
C
      IMPLICIT DOUBLE PRECISION (A-H),(O-Z)
      DIMENSION ARRAY(10,10)
C
C
C
      DETERM=1.
      DO 50 K=1,NORDER
C
C     INTERCHANGE COLUMNS IF DIAGONAL ELEMENT IS ZERO
C
      IF (ARRAY(K,K))41,21,41
21    DO 23 J=K,NORDER
      IF (ARRAY(K,J))31,23,31
23    CONTINUE
      DETERM=0.
      GO TO 60
31    DO 34 I=K,NORDER
      SAVE=ARRAY(I,J)
      ARRAY(I,J)=ARRAY(I,K)
34    ARRAY(I,K)=SAVE
      DETERM=-DETERM
C
C     SUBTRACT ROW K FROM LOWER ROWS TO GET DIAGONAL MATRIX
C
41    DETERM=DETERM*ARRAY(K,K)
      IF (K-NORDER)43,50,50
43    K1=K+1
      DO 46 I=K1,NORDER
      DO 46 J=K1,NORDER
46    ARRAY(I,J)=ARRAY(I,J)-ARRAY(I,K)*ARRAY(K,J)/ARRAY(K,K)
50    CONTINUE
60    RETURN
      END
