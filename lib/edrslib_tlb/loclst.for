      SUBROUTINE LOCLST(XA,YA,IDA,NIN,IMAGE,NPIX,NLINES,INVAL,ISIZE,
     +			ISIGN,SHFTMX,MAXIT,TOLL,ILEVEL,XB,YB,IDB,NOUT,
     +			IERR)
*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
*PURPOSE
*	TO FIND THE CENTROIDS OF A SET OF IMAGE FEATURES AND PRINT
*	THE RESULTS
*
*METHOD
*	PRINT TITLE FOR TABLE OF RESULTS, CALL LOCATE FOR EACH FEATURE
*	TO FIND THE CENTROIDS. COPY SUCCESSFUL LOCATIONS TO OUTPUT
*	POSITION AND IDENTIFIER LIST. PRINT RESULTS.
*
*ARGUMENTS
*	XA,YA (IN)
*	REAL(NIN)
*		APPROXIMATE FEATURE POSITIONS
*	IDA (IN)
*	BYTE(20,NIN)
*		LIST OF ASCII IDENTIFIERS FOR THE INPUT POSITIONS
*	NIN (IN)
*	INTEGER
*		NUMBER OF INPUT POSITIONS
*	IMAGE (IN)
*	INTEGER*2(NPIX,NLINES)
*		THE IMAGE
*	NPIX,NLINES (IN)
*	INTEGER
*		DIMENSIONS OF IMAGE
*	INVAL (IN)
*	INTEGER
*		INVALID PIXEL FLAG FOR IMAGE
*	ISIZE (IN)
*	INTEGER
*		SIZE OF SEARCH AREA SIDE
*	ISIGN (IN)
*	INTEGER
*		POSITIVE IF IMAGE FEATURES ARE POSITIVE, OTHERWISE
*		NEGATIVE
*	SHFTMX (IN)
*	REAL
*		MAX SHIFT ALLOWED FROM STARTING POSITIONS
*	MAXIT (IN)
*	INTEGER
*		MAX NUMBER OF CENTROIDING ITERATIONS
*	TOLL (IN)
*	REAL
*		ACCURACY REQUIRED IN THE CENTROID POSITION
*	ILEVEL (IN)
*	INTEGER
*		FLAG TO CONTROL PRINTING OF RESULTS
*	XB,YB (OUT)
*	REAL(NIN)
*		OUTPUT CENTROID ESTIMATES. THOSE NOT FOUND ARE OMITTED
*	IDB (OUT)
*	BYTE(20,NIN)
*		ASCII IDENTIFIERS FOR THE POSITIONS IN THE OUTPUT 
*		POSITION LISTS X,Y
*	NOUT (OUT)
*	INTEGER
*		THE NUMBER OF SUCCESSFULLY FOUND LOCATIONS IN X,Y,IDB
*	IERR (OUT)
*	INTEGER
*		ERROR FLAG: ZERO FOR SUCCESS
*
*CALLS
*	THIS PACKAGE:
*		LOCATE
*	STARLINK:
*		WRUSER
*
*NOTES
*	USES INTEGER*2 AND BYTE ARRAYS
*
*WRITTEN BY
*	R.F. WARREN-SMITH
*-----------------------------------------------------------------------
C
C
      INTEGER*2 IMAGE(NPIX,NLINES)
      REAL XA(NIN),YA(NIN),XB(NIN),YB(NIN)
      BYTE IDA(20,NIN),IDB(20,NIN)
      CHARACTER PRBUF*80,ERRMSG(2)*24,ID*20
      DATA ERRMSG/'  MAXIMUM SHIFT EXCEEDED','  NO IMAGE FEATURE FOUND'/
C
C IF ILEVEL IS ABOVE 1, PRINT TITLES
C
      IF(ILEVEL.GT.1) THEN
	CALL WRUSER(' ',ISTAT)
        WRITE(PRBUF,14)
   14   FORMAT(T27,'POSITION SEARCHED',T57,'CENTROID FOUND')
	CALL WRUSER(PRBUF,ISTAT)
        WRITE(PRBUF,17)
   17   FORMAT(T27,'-----------------',T57,'--------------')
        CALL WRUSER(PRBUF,ISTAT)
	WRITE(PRBUF,15)
   15   FORMAT('     IDENTIFIER',T24,2(' X COORD.',5X,' Y COORD.',5X))
        CALL WRUSER(PRBUF,ISTAT)
	WRITE(PRBUF,16)
   16   FORMAT('     ----------',T24,2(' --------',5X,' --------',5X))
        CALL WRUSER(PRBUF,ISTAT)
      ENDIF
C
C SCAN THROUGH LIST, CALLING LOCATE TO FIND EACH CENTROID IN TURN
C
      NOUT=0
      DO 7 I=1,NIN
        CALL LOCATE(XA(I),YA(I),IMAGE,NPIX,NLINES,INVAL,ISIZE,ISIGN,
     +  SHFTMX,MAXIT,TOLL,XB(NOUT+1),YB(NOUT+1),IERR)
C
C IF A FATAL ERROR IS FOUND, RETURN
C
        IF(IERR.GE.3) GO TO 99
C
C IF OK, TRANSFER ID TO OUTPUT LIST
C
	IF(IERR.EQ.0) THEN
	  NOUT=NOUT+1
	  DO 77 L=1,20
	    IDB(L,NOUT)=IDA(L,I)
   77     CONTINUE
C
C IF ILEVEL IS ABOVE 1, PRINT THE SUCCESSFUL LOCATION
C
	  IF(ILEVEL.GT.1) THEN
	    DO 78 L=1,20
	      NCHAR=IDA(L,I)
	      ID(L:L)=CHAR(NCHAR)
   78	    CONTINUE
	    WRITE(PRBUF,10)ID,XA(I),YA(I),XB(NOUT),YB(NOUT)
   10       FORMAT(' ',A20,T23,4(SS,G13.6,1X))
            CALL WRUSER(PRBUF,ISTAT)
	  ENDIF
        ELSE
C
C IF THE CENTROID WAS NOT FOUND, THEN IF ILEVEL IS ABOVE 2, PRINT
C DETAILS
C
	  IF(ILEVEL.GT.2) THEN
	    DO 79 L=1,20
	      NCHAR=IDA(L,I)
	      ID(L:L)=CHAR(NCHAR)
   79	    CONTINUE
	    WRITE(PRBUF,11)ID,XA(I),YA(I),ERRMSG(IERR)
   11       FORMAT(' ',A20,T23,2(SS,G13.6,1X),A24)
	    CALL WRUSER(PRBUF,ISTAT)
          ENDIF
        ENDIF
    7 CONTINUE
C
C IF A LIST HAS BEEN PRINTED, ADD SPACING AT THE END
C
      IF(ILEVEL.GE.2) THEN
	CALL WRUSER(' ',ISTAT)
	CALL WRUSER(' ',ISTAT)
      ENDIF
   99 RETURN
      END
