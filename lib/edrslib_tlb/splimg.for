      SUBROUTINE SPLIMG(IA,NPIX,NLINES,INVALA,IDX,IDY,NXKNOT,
     +			NYKNOT,MAXBIN,INVALB,IB,RMS,WORK,POINT,
     +			IERR)
*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
*PURPOSE
*	TO GENERATE AN IMAGE WHICH IS A LEAST-SQUARES BI-CUBIC SPLINE
*	FIT TO AN INPUT IMAGE
*
*METHOD
*	CALL BININT TO BIN THE INPUT DATA INTO RECTANGULAR BINS. SORT
*	THE BIN COORDINATES IN THE X AND Y DIRECTION AND CALL SETKNT
*	TO PLACE THE INTERIOR SPLINE KNOTS. ADD DUMMY DATA POINTS AT
*	THE IMAGE CORNERS TO FORCE THE FIT TO EXTEND TO THE IMAGE EDGES.
*	CALL NAG ROUTINE E02ZAF TO SORT THE DATA POINTS, THEN CALL
*	E02DAF TO FIT THE SPLINE SURFACE. EVALUATE THE FITTED SURFACE
*	AT THE FOUR CORNERS OF EACH BIN, AND APPROXIMATE IT BY A
*	BI-LINEAR SURFACE. EVALUATE THE BI-LINEAR SURFACES OVER THE
*	OUTPUT IMAGE AREA
*
*ARGUMENTS
*	IA (IN)
*	INTEGER*2(NPIX,NLINES)
*		THE INPUT IMAGE
*	NPIX,NLINES (IN)
*	INTEGER
*		THE DIMENSIONS OF IA
*	INVALA (IN)
*	INTEGER
*		INVALID PIXEL FLAG FOR IA
*	IDX,IDY (IN)
*	INTEGER
*		RECTANGULAR BIN SIZE IN THE X AND Y DIRECTIONS
*	NXKNOT,NYKNOT (IN)
*	INTEGER
*		NUMBER OF INTERIOR KNOTS IN THE X AND Y DIRECTIONS
*	MAXBIN (IN)
*	INTEGER
*		MAXIMUM NUMBER OF BINS WHICH CAN CONTAIN DATA +2
*	INVALB (IN)
*	INTEGER
*		INVALID PIXEL FLAG FOR IB
*	IB (OUT)
*	INTEGER*2(NPIX,NLINES)
*		OUTPUT IMAGE
*	RMS (OUT)
*	REAL
*		RMS ERROR OF FIT
*	WORK (WORKSPACE)
*	DOUBLE PRECISION(MAXBIN,5)
*		INTERMEDIATE STORAGE
*	POINT (WORKSPACE)
*	INTEGER(MAXBIN+(NXKNOT+1)*(NYKNOT+1))
*		INTERMEDIATE STORAGE
*	IERR (OUT)
*	INTEGER
*		ERROR FLAG: ZERO FOR SUCCESS
*
*CALLS
*	THIS PACKAGE:
*		BININT,SETKNT
*	NAG LIBRARY:
*		M01ANF,E02ZAF,E02DAF,E02DBF
*
*NOTES
*	USES INTEGER*2 ARRAYS
*
*WRITTEN BY
*	R.F. WARREN-SMITH
*-----------------------------------------------------------------------
C
C
C
C SET MAXIMUM NUMBER OF INTERIOR KNOTS AND THE CORRESPONDING
C MAXIMUM DIMENSIONS OF WORK ARRAYS (N.B. WORKSPACE INCREASES
C RAPIDLY WITH NO. OF KNOTS)
C
      PARAMETER (MXKNOT=10,
     +		 NCMAX=(MXKNOT+4)**2,
     +		 NP=3*(MXKNOT+4)+4,
     +		 NWS=2*NCMAX*(NP+2)+NP,
     +		 MXADRS=(MXKNOT+1)**2   )
C
C DIMENSION ARRAYS
C
      INTEGER*2 IA(NPIX,NLINES),IB(NPIX,NLINES)
      INTEGER ADRES(MXADRS),POINT(MAXBIN+(NXKNOT+1)*(NYKNOT+1))
      DOUBLE PRECISION XKNOT(MXKNOT+8),YKNOT(MXKNOT+8),DL(NCMAX),
     +		       COEFF(NCMAX),WS(NWS),WORK(MAXBIN,5),SIGMA,
     +		       X(4),Y(4),F(4)
C
C CALCULATE THE TOTAL NO. OF SPLINE COEFFICIENTS AND THE
C NUMBER OF PANELS PRODUCED BY THE KNOTS
C (SEE NAG DOCUMENTATION FOR E02DAF,E02ZAF FOR DETAILS)
C
      NC=(NXKNOT+4)*(NYKNOT+4)
      NADRES=(NXKNOT+1)*(NYKNOT+1)
C
C CALL BININT TO BIN THE IMAGE INTO RECTANGULAR BINS, RETURNING 
C THE X,Y POSITIONS, THE MEAN VALUE AND A WEIGHT FOR EACH BIN
C IN WORK(*,N),N=1,4
C
      CALL BININT(IA,NPIX,NLINES,INVALA,IDX,IDY,WORK(1,1),WORK(1,2),
     +WORK(1,3),WORK(1,4),NBIN)
C
C IF INSUFFICIENT BINS CONTAINED VALID DATA, SET IERR=3 AND QUIT
C
      IF(NBIN.LE.1) THEN
	IERR=3
	GO TO 99
      ENDIF
C
C COPY THE X POSITIONS INTO SPARE WORKSPACE AND SORT INTO ORDER
C USING NAG ROUTINE M01ANF
C
      DO 1 I=1,NBIN
        WORK(I,5)=WORK(I,1)
    1 CONTINUE
      IFAIL=1
      CALL M01ANF(WORK(1,5),1,NBIN,IFAIL)
C
C CALL SETKNT TO SET THE INTERIOR X KNOTS AN EQUAL NUMBER OF
C DATA POINTS APART IN THE X DIRECTION
C
      IF(NXKNOT.GE.1)CALL SETKNT(WORK(1,5),NBIN,XKNOT(5),NXKNOT)
C
C NOW REPEAT THE ABOVE FOR THE INTERIOR Y KNOTS
C
      DO 2 I=1,NBIN
	WORK(I,5)=WORK(I,2)
    2 CONTINUE
      IFAIL=1
      CALL M01ANF(WORK(1,5),1,NBIN,IFAIL)
      IF(NYKNOT.GE.1)CALL SETKNT(WORK(1,5),NBIN,YKNOT(5),NYKNOT)
C
C SCALE DATA VALUES TO LIE IN THE RANGE -1 TO +1 TO IMPROVE
C PERFORMANCE OF THE FITTING ROUTINES
C
      DO 601 I=1,NBIN
	WORK(I,3)=WORK(I,3)*3.051850947D-5
  601 CONTINUE
C
C ADD 2 MORE BINS, WITH ZERO WEIGHT, AT OPPOSITE CORNERS OF
C THE IMAGE, TO ENSURE THAT THE SPLINE FIT IS VALID OVER
C THE ENTIRE IMAGE AREA
C
      WORK(NBIN+1,1)=0.0D0
      WORK(NBIN+1,2)=0.0D0
      WORK(NBIN+1,3)=0.0D0
      WORK(NBIN+1,4)=0.0D0
      WORK(NBIN+2,1)=NPIX+1.0D0
      WORK(NBIN+2,2)=NLINES+1.0D0
      WORK(NBIN+2,3)=0.0D0
      WORK(NBIN+2,4)=0.0D0
      NBIN=NBIN+2
C
C CALCULATE THE NUMBER OF POINTERS REQUIRED TO ACCESS THE DATA
C POINTS IN PANEL ORDER
C
      NPOINT=NBIN+NADRES
C
C CALL NAG ROUTINE E02ZAF TO SORT DATA POINTS INTO PANEL ORDER
C
      IFAIL=1
      CALL E02ZAF(NXKNOT+8,NYKNOT+8,XKNOT,YKNOT,NBIN,WORK(1,1),
     +WORK(1,2),POINT,NPOINT,ADRES,NADRES,IFAIL)
C
C CALL NAG ROUTINE E02DAF TO OBTAIN THE SPLINE COEFFICIENTS OF
C THE LEAST SQUARES FIT
C
      IFAIL=1
      CALL E02DAF(NBIN,NXKNOT+8,NYKNOT+8,WORK(1,1),WORK(1,2),
     +WORK(1,3),WORK(1,4),XKNOT,YKNOT,POINT,NPOINT,DL,COEFF,NC,WS,NWS,
     +1.0E-9,SIGMA,IRANK,IFAIL)
      IF(IFAIL.NE.0) THEN
	IERR=2
	GO TO 99
      ENDIF
C
C NOW EVALUATE THE FITTED SURFACE
C -------------------------------
C
C INITIALLISE SUMS TO FORM THE RMS ERROR OF FIT
C
      SUMSQ=0.0
      NPT=0
C
C SCAN THROUGH THE BINS, CALCULATING THE MIN AND MAX X AND Y
C COORDINATES OF EACH BIN
C
      DO 66 JMIN=1,NLINES,IDY
        JMAX=MIN(JMIN+IDY-1,NLINES)
	DO 65 IMIN=1,NPIX,IDX
	  IMAX=MIN(IMIN+IDX-1,NPIX)
C
C FIND THE X,Y COORDINATES OF THE FOUR BIN CORNERS
C
	  X(1)=IMIN-0.5D0
          Y(1)=JMIN-0.5D0
	  X(2)=IMAX+0.5D0
	  Y(2)=Y(1)
	  X(3)=X(2)
          Y(3)=JMAX+0.5D0
	  X(4)=X(1)
	  Y(4)=Y(3)
C
C CALL NAG ROUTINE E02ZAF TO SORT THE CORNERS INTO PANEL ORDER
C
          IFAIL=1
	  NPOINT=4+NADRES
	  CALL E02ZAF(NXKNOT+8,NYKNOT+8,XKNOT,YKNOT,4,X,Y,POINT,
     +	  NPOINT,ADRES,NADRES,IFAIL)
C
C CALL NAG ROUTINE E02DBF TO EVALUATE THE FITTED SURFACE AT THE
C 4 BIN CORNERS
C
	  IFAIL=1
	  CALL E02DBF(4,NXKNOT+8,NYKNOT+8,X,Y,F,XKNOT,YKNOT,POINT,
     +	  NPOINT,COEFF,NC,IFAIL)
	  IF(IFAIL.NE.0) THEN
	    IERR=2
	    GO TO 99
	  ENDIF
C
C CONVERT SCALE BACK TO THE RANGE -32767 TO +32767
C
	  DO 666 L=1,4
	    F(L)=F(L)*32767.0D0
  666	  CONTINUE
C
C CALCULATE THE COEFFICIENTS OF A BI-LINEAR SURFACE WHICH PASSES
C THROUGH THE FOUR CORNERS
C
	  A=F(1)
	  B=(F(2)-A)/IDX
	  C=(F(4)-A)/IDY
	  D=(F(3)-A-B*IDX-C*IDY)/(IDX*IDY)
C
C NOW SCAN ALL PIXELS IN THE BIN, EVALUATING THE BI-LINEAR SURFACE
C
	  DY=-0.5
	  DO 64 J=JMIN,JMAX
	    DY=DY+1.0
	    FA=A+C*DY
	    FB=B+D*DY
	    DX=-0.5
	    DO 63 I=IMIN,IMAX
	      DX=DX+1.0
	      FUN=FA+FB*DX
C
C IF RESULT IS OUTSIDE THE RANGE OF INTEGERS, SET OUTPUT PIXEL
C INVALID
C
	      IF(ABS(FUN).GT.32767.0) THEN
		IB(I,J)=INVALB
	      ELSE
		IB(I,J)=NINT(FUN)
C
C FORM SUMS FOR THE RMS ERROR OF FIT
C
		IF(IA(I,J).NE.INVALA) THEN
		  SUMSQ=SUMSQ+(FUN-IA(I,J))**2
		  NPT=NPT+1
		ENDIF
	      ENDIF
   63	    CONTINUE
   64	  CONTINUE
   65	CONTINUE
   66 CONTINUE
C
C CALCULATE RMS ERROR OF FIT
C
      IF(NPT.GE.1) THEN
	RMS=SQRT(SUMSQ/NPT)
      ELSE
	RMS=0.0
      ENDIF
C
C SER IERR TO INDICATE IF THE FIT WAS NOT UNIQUE
C
      IERR=0
      IF(IRANK.NE.NC) IERR=1
   99 RETURN
      END
