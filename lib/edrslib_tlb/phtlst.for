      SUBROUTINE PHTLST(XA,YA,IDA,NIN,IMAGE,NPIX,NLINES,INVAL,
     +			SCALE,ZERO,ISIZE,SIGMA,E,THETA,G,RANGE,
     +			ZERMAG,ILEVEL,XB,YB,IDB,RMAG,NOUT)
*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
*PURPOSE
*	TO OBTAIN INTEGRATED MAGNITUDES FOR A SET OF STARS, GIVEN
*	APPROXIMATE POSITIONS, AND TO PRINT THE RESULTS.
*
*METHOD
*	PRINT HEADINGS. CALL PHOTRY FOR EACH STAR TO CALCULATE THE
*	INTEGRATED MAGNITUDE. PRINT A TABLE OF THE RESULTS.
*
*ARGUMENTS
*	XA,YA (IN)
*	REAL(NIN)
*		INPUT LISTS OF APPROXIMATE POSITIONS
*	IDA (IN)
*	BYTE(20,NIN)
*		ASCII IDENTIFIERS FOR THE INPUT POSITIONS
*	NIN (IN)
*	INTEGER
*		NUMBER OF INPUT POSITIONS
*	IMAGE (IN)
*	INTEGER*2(NPIX,NLINES)
*		THE IMAGE
*	NPIX,NLINES (IN)
*	INTEGER
*		DIMENSIONS OF IMAGE
*	INVAL (IN)
*	INTEGER
*		INVALID PIXEL FLAG FOR IMAGE
*	SCALE,ZERO (IN)
*	REAL
*		SCALE AND ZERO LEVEL FOR IMAGE
*	ISIZE (IN)
*	INTEGER
*		SIDE OF SEARCH SQUARE IN WHICH DATA IS USED
*	SIGMA (IN)
*	REAL
*		THE 'SIGMA' FOR THE STAR PROFILE
*	E (IN)
*	REAL
*		THE AXIS RATIO OF THE ELLIPTICAL STAR IMAGES
*	THETA (IN)
*	REAL
*		THE INCLINATION OF THE MAJOR AXIS TO THE X DIRECTION
*		IN RADIANS (X THROUGH Y POSITIVE)
*	G (IN)
*	REAL
*		THE EXPONENT IN THE STAR RADIAL PROFILE FUNCTION
*	RANGE (IN)
*	REAL
*		THE RADIUS IN UNITS OF SIGMA OUT TO WHICH THE RADIAL
*		PROFILE IS FITTED
*	ZERMAG (IN)
*	REAL
*		CONSTANT MAGNITUDE ADDED TO ALL RESULTS
*	ILEVEL (IN)
*	INTEGER
*		INTERACTION LEVEL: CONTROLS PRINTING OF RESULTS
*	XB,YB (OUT)
*	REAL(NIN)
*		OUTPUT X,Y STAR POSITIONS
*	IDB (OUT)
*	BYTE(20,NIN)
*		ASCII IDENTIFIERS FOR OUTPUT POSITIONS
*	RMAG (OUT)
*	REAL(NIN)
*		OUTPUT MAGNITUDES
*	NOUT (OUT)
*	INTEGER
*		NUMBER OF OUTPUT POSITIONS IN XB,YB,IDB,RMAG
*
*CALLS
*	THIS PACKAGE:
*		PHOTRY,BYTCPY
*	STARLINK:
*		WRUSER
*
*NOTES
*	USES INTEGER*2 AND BYTE ARRAYS
*
*WRITTEN BY
*	R.F. WARREN-SMITH
*-----------------------------------------------------------------------
C
C
      REAL XA(NIN),YA(NIN),XB(NIN),YB(NIN),RMAG(NIN)
      BYTE IDA(20,NIN),IDB(20,NIN)
      CHARACTER PRBUF*80,ERRMSG(5)*30,ID*20
C
C SET UP ERROR MESSAGES
C
      DATA ERRMSG(1)/' STAR CENTRE NOT FOUND        '/,
     +     ERRMSG(2)/' TOO LITTLE DATA TO FIND STAR '/,
     +     ERRMSG(3)/' TOO LITTLE DATA TO FIND STAR '/,
     +     ERRMSG(4)/' TOO LITTLE DATA TO FIT STAR  '/,
     +     ERRMSG(5)/' FIT GIVES NEGATIVE BRIGHTNESS'/
C
C IF ILEVEL.GE.2 PRINT HEADINGS FOR TABLE OF RESULTS
C
      IF(ILEVEL.GE.2) THEN
	CALL WRUSER(' ',ISTAT)
	WRITE(PRBUF,16)
   16	FORMAT(48X,'PEAK BRIGHTNESS')
	CALL WRUSER(PRBUF,ISTAT)
	WRITE(PRBUF,14)
   14   FORMAT(5X,'IDENTIFIER',T24,' X COORD.',5X,' Y COORD.',
     +  4X,'/ BACKGROUND',4X,'MAGNITUDE')
	CALL WRUSER(PRBUF,ISTAT)
	WRITE(PRBUF,15)
   15   FORMAT(5X,'----------',T24,' --------',5X,' --------',
     +  4X,'------------',4X,'---------')
	CALL WRUSER(PRBUF,ISTAT)
      ENDIF
C
C FOR EACH INPUT POSITION, CALL PHOTRY TO EVALUATE THE STELLAR
C MAGNITUDE
C
      NOUT=0
      DO 7 I=1,NIN
	CALL PHOTRY(IMAGE,NPIX,NLINES,INVAL,SCALE,ZERO,XA(I),YA(I),
     +	ISIZE,SIGMA,E,THETA,G,RANGE,XB(NOUT+1),YB(NOUT+1),CENDEN,
     +	BACKGD,TOTI,TOTMAG,IERR)
C
C IF THE MAGNITUDE WAS OBTAINED SUCCESSFULLY, INSERT THE IDENTIFIER
C AND MAGNITUDE IN THE OUTPUT LIST
C
	IF(IERR.EQ.0) THEN
	  NOUT=NOUT+1
	  CALL BYTCPY(IDA(1,I),IDB(1,NOUT),20)
	  RMAG(NOUT)=TOTMAG+ZERMAG
C
C IF ILEVEL.GE.2 PRINT THE SUCCESSFUL RESULT
C
	  IF(ILEVEL.GE.2) THEN
	    DO 78 L=1,20
	      NCHAR=IDA(L,I)
	      ID(L:L)=CHAR(NCHAR)
   78	    CONTINUE
	    WRITE(PRBUF,10)ID,XB(NOUT),YB(NOUT),CENDEN,RMAG(NOUT)
   10	    FORMAT(1X,A20,T23,2(SS,G13.6,1X),1X,SS,G12.5,4X,SS,
     +	    G12.5)
	    CALL WRUSER(PRBUF,ISTAT)
	    WRITE(PRBUF,9)BACKGD
    9	    FORMAT(51X,SS,G12.5)
	    CALL WRUSER(PRBUF,ISTAT)
	  ENDIF
	ELSE
C
C IF THE MAGNITUDE WAS NOT FOUND, THEN IF ILEVEL.GE.3 PRINT
C THE COORDINATES AND AN ERROR MESSAGE
C
	  IF(ILEVEL.GE.3) THEN
	    DO 79 L=1,20
	      NCHAR=IDA(L,I)
	      ID(L:L)=CHAR(NCHAR)
   79	    CONTINUE
	    WRITE(PRBUF,11)ID,XA(I),YA(I),ERRMSG(IERR)
   11	    FORMAT(1X,A20,T23,2(SS,G13.6,1X),A30)
	    CALL WRUSER(PRBUF,ISTAT)
	  ENDIF
	ENDIF
    7 CONTINUE
C
C IF A LIST HAS BEEN PRINTED, ADD SPACING AT THE END
C
      IF(ILEVEL.GE.2) THEN
	CALL WRUSER(' ',ISTAT)
	CALL WRUSER(' ',ISTAT)
      ENDIF
      RETURN
      END
