      SUBROUTINE CINVER
*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
*PURPOSE
*	TO INVERT A LINEAR TRANSFORMATION BETWEEN IMAGE POSITIONS
*
*METHOD
*	OBTAIN PARAMETERS, CALCULATE INVERSE, PRINT RESULT AND WRITE
*	TO ENVIRONMENT
*
*ARGUMENTS
*	NONE
*
*STARLINK PARAMETERS
*	ILEVEL
*		INTERACTION LEVEL: CONTROLS PRINTING OF RESULTS
*	TRCOEFFS
*		INPUT TRANSFORMATION COEFFICIENTS
*	INVERSE
*		OUTPUT INVERSE TRANSFORMATION COEFFICIENTS
*	SINGULAR/ERROR/
*		CALLED IF INPUT TRANSFORMATION IS SINGULAR
*
*CALLS
*	THIS PACKAGE:
*		GETPAR,TRCOUT
*	STARLINK:
*		RDKEYR,WRUSER,WRERR
*
*WRITTEN BY
*	R.F. WARREN-SMITH
*-----------------------------------------------------------------------
C
C
      REAL C(6),D(6)
      CHARACTER PRBUF*80
C
C OBTAIN INTERACTION LEVEL
C
      ILEVEL=2
      CALL GETPAR('ILEVEL','INTEGER',1,1.0,3.0,.TRUE.,ILEVEL,RVAL,
     +IERR)
C
C SET DEFAULT TRANSFORMATION
C
      C(1)=0.0
      C(2)=1.0
      C(3)=0.0
      C(4)=0.0
      C(5)=0.0
      C(6)=1.0
C
C OBTAIN INPUT TRANSFORMATION
C
      CALL RDKEYR('TRCOEFFS',.FALSE.,6,C,NVAL,ISTAT)
C
C CALCULATE THE DETERMINANT
C
      DET=C(2)*C(6)-C(3)*C(5)
C
C IF THE TRANSFORMATION IS NOT SINGULAR, CALCULATE THE INVERSE
C
      IF(DET.NE.0.0) THEN
	D(1)=(C(4)*C(3)-C(1)*C(6))/DET
        D(2)=C(6)/DET
	D(3)=-C(3)/DET
	D(4)=(C(1)*C(5)-C(4)*C(2))/DET
        D(5)=-C(5)/DET
	D(6)=C(2)/DET
C
C IF ILEVEL.GE.2, SHOW THE USER THE RESULT
C
	IF(ILEVEL.GE.2) THEN
	  CALL WRUSER(' ',ISTAT)
	  CALL WRUSER(' INVERSE TRANSFORMATION COEFFICIENTS:',ISTAT)
	  CALL WRUSER(' ',ISTAT)
	  DO 44 J=1,4,3
	    WRITE(PRBUF,43)((L,D(L)),L=J,J+2)
   43	    FORMAT(10X,3('C(',I1,')=',SS,G13.6,2X))
	    CALL WRUSER(PRBUF,ISTAT)
   44	  CONTINUE
	  CALL WRUSER(' ',ISTAT)
	ENDIF
C
C WRITE THE INVERSE TO THE ENVIRONMENT
C
        CALL TRCOUT('INVERSE',D,6,ISTAT)
      ELSE
C
C IF TRANSFORMATION IS SINGULAR, GIVE MESSAGE
C
	CALL WRERR('SINGULAR')
      ENDIF
      RETURN
      END
