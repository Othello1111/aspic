      SUBROUTINE GT2DIR(NAME,IFMT,NULL,NPIX,NLINES,IPOINT,IERR)
*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
*PURPOSE
*	TO OBTAIN AN INPUT 2 DIMENSIONAL IMAGE FRAME AND HANDLE ANY
*	ERRORS WHICH OCCUR
*
*METHOD
*	OBTAIN INPUT IMAGE FRAME, CHECK FOR SUCCESS. IF AN ERROR OCCURS
*	EXIT OR RETURN TO GET A NEW FRAME AS APPROPRIATE.
*
*ARGUMENTS
*	NAME (IN)
*	CHARACTER*(*)
*		THE PARAMETER NAME USED TO ACCESS THE INPUT FRAME
*	IFMT (IN)
*	INTEGER
*		THE STARLINK FORMAT CODE FOR THE FRAME
*	NULL (IN)
*	LOGICAL
*		IF TRUE, A NULL ENTRY FOR THE FRAME IS OK, OTHERWISE
*		IT IS AN ERROR CONDITION
*	NPIX,NLINES (OUT)
*	INTEGER
*		THE IMAGE DIMENSIONS
*	IPOINT (OUT)
*	INTEGER
*		THE POINTER TO THE DATA FRAME
*	IERR (OUT)
*	INTEGER
*		ERROR FLAG: ZERO FOR SUCCESS
*
*STARLINK PARAMETERS
*	'NAME'
*		THE PARAMETER NAME FOR THE INPUT IMAGE IS GIVEN IN THE
*		ARGUMENT 'NAME'
*	NONULL/ERROR/
*		ACCESSED IF A NULL ENTRY IS GIVEN AND 'NULL' IS FALSE
*	NOACCESS/ERROR/
*		ACCESSED IF THE FRAME CANNOT BE ACCESSED
*	DIMINVAL/ERROR/
*		ACCESSED IF THE IMAGE DIMENSIONS ARE INVALID
*	NOTIMAGE/ERROR/
*		ACCESSED IF THE FRAME DOES NOT CONTAIN AN IMAGE
*	FMTFAIL/ERROR/
*		ACCESSED IF FORMAT CONVERSION FAILS
*	NOT2DIM/ERROR/
*		ACCESSED IF THE IMAGE IS NOT 2 DIMENSIONAL
*
*CALLS
*	STARLINK:
*		RDIMAG,WRERR,CNPAR
*
*WRITTEN BY
*	R.F. WARREN-SMITH
*-----------------------------------------------------------------------
C
C
      CHARACTER NAME*(*)
      LOGICAL NULL,EXIT
      INTEGER DIMS(2),CNSTAT
C
C SET MAXIMUM NUMBER OF NULL ENTRIES TO BE TOLERATED IF NULL IS
C NOT ALLOWED
C
      PARAMETER (MAXNUL=2)
C
C INITIALLISE NULL ENTRY COUNTER AND ERROR FLAG AND OBTAIN REQUIRED
C IMAGE FRAME
C
      NNULL=0
   11 IERR=0
      CALL RDIMAG(NAME,IFMT,2,DIMS,NDIMS,IPOINT,ISTAT)
C
C IF NULL ENTERED:
C
      IF(ISTAT.EQ.1) THEN
	IF(.NOT.NULL) THEN
C
C IF NULL IS NOT ALLOWED, THEN:
C IF MAX COUNT NOT EXCEEDED, INCREMENT COUNTER, GIVE MESSAGE AND
C RETURN FOR NEW ENTRY
C
	  IF(NNULL.LE.MAXNUL) THEN
	    NNULL=NNULL+1
	    CALL WRERR('NONULL')
	    CALL CNPAR(NAME,CNSTAT)
	    EXIT=.FALSE.
	  ELSE
C
C IF MAX NULL COUNT HAS BEEN REACHED, ABORT WITH IERR=1
C
	    IERR=1
	    EXIT=.TRUE.
	  ENDIF
	ELSE
C
C IF NULL ENTRY IS OK, RETURN WITH IERR=1
C
	  IERR=1
	  EXIT=.TRUE.
	ENDIF
C
C IF FRAME COULD NOT BE ACCESSED, GIVE MESSAGE AND RETURN FOR NEW FRAME
C
      ELSE IF(ISTAT.EQ.3) THEN
	CALL WRERR('NOACCESS')
	CALL CNPAR(NAME,CNSTAT)
	EXIT=.FALSE.
C
C IF PARAMETER NAME IS INVALID, RETURN WITH IERR=4
C
      ELSE IF(ISTAT.EQ.4) THEN
	IERR=4
	EXIT=.TRUE.
C
C IF FORMAT CODE IS INVALID, RETURN IERR=5
C
      ELSE IF(ISTAT.EQ.5) THEN
	IERR=5
	EXIT=.TRUE.
C
C IF IMAGE HAS INVALID DIMENSIONS, GIVE MESSAGE AND RETURN FOR NEW
C FRAME
C
      ELSE IF(ISTAT.EQ.6) THEN
	CALL WRERR('DIMINVAL')
	CALL CNPAR(NAME,CNSTAT)
	EXIT=.FALSE.
C
C IF FRAME IS NOT AN IMAGE, GIVE MESSAGE AND RETURN FOR NEW FRAME
C
      ELSE IF(ISTAT.EQ.7) THEN
	CALL WRERR('NOTIMAGE')
	CALL CNPAR(NAME,CNSTAT)
	EXIT=.FALSE.
C
C IF FORMAT CONVERSION FAILED, GIVE MESSAGE AND RETURN FOR NEW FRAME
C
      ELSE IF(ISTAT.EQ.8) THEN
        CALL WRERR('FMTFAIL')
	CALL CNPAR(NAME,CNSTAT)
	EXIT=.FALSE.
C
C IF NONE OF THE ABOVE: FRAME IS A GOOD IMAGE
C
      ELSE
	EXIT=.TRUE.
      ENDIF
C
C GO BACK FOR NEW FRAME IF NECESSARY
C
      IF(.NOT.EXIT) GO TO 11
C
C IF AN IMAGE WAS OBTAINED, CHECK THE NUMBER OF DIMENSIONS
C
      IF(IERR.EQ.0) THEN
	IF(NDIMS.NE.2) THEN
C
C IF NOT 2 DIMENSIONAL, GIVE MESSAGE AND GET NEW FRAME
C
	  CALL WRERR('NOT2DIM')
	  CALL CNPAR(NAME,CNSTAT)
          EXIT=.FALSE.
	ELSE
C
C IF DIMENSIONS ARE OK, SET SIZE OF IMAGE
C
	  NPIX=DIMS(1)
	  NLINES=DIMS(2)
	ENDIF
      ENDIF
C
C GO BACK FOR A NEW FRAME IF NECESSARY
C
      IF(.NOT.EXIT) GO TO 11
      RETURN
      END
