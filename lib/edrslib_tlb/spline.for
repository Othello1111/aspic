      SUBROUTINE SPLINE
*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
*PURPOSE
*	TO FIT A BI-CUBIC SPLINE SURFACE TO AN IMAGE
*
*METHOD
*	OBTAIN INPUT IMAGE. OBTAIN PARAMETERS CONTROLLING THE FITTING.
*	OBTAIN WORKSPACE FOR THE FITTING ROUTINE. CALL SPLIMG TO
*	PERFORM THE FITTING. UPDATE OUTPUT DESCRIPTOR ITEMS
*
*ARGUMENTS
*	NONE
*
*STARLINK PARAMETERS
*	ILEVEL
*		INTERACTION LEVEL: CONTROLS PRINTING OF RESULTS
*	INPUT
*		THE INPUT IMAGE
*	OUTPUT
*		THE OUTPUT IMAGE I.E. THE FITTED SURFACE
*	NXKNOT,NYKNOT
*		THE NUMBER OF INTERIOR KNOTS IN THE X AND Y DIRECTIONS
*	IX,IY
*		SIZE OF THE DATA BINNING AREA IN THE X AND Y DIRECTIONS
*	NOSPACE/ERROR/
*		ACCESSED IF WORKSPACE CANNOT BE OBTAINED
*	NOTUNIQ/ERROR/
*		ACCESSED IF THE INPUT DATA DOES NOT UNIQUELY DEFINE
*		A LEAST SQUARES FIT
*	XSKNOTS/ERROR/
*		ACCESSED IF TOO MANY KNOTS WERE USED FOR THE NUMBER OF
*		DATA POINTS GIVEN
*	BINS2FEW/ERROR/
*		ACCESSED IF THERE ARE TOO FEW DATA BINS TO FIT
*	RMSERROR
*		OUTPUT PARAMETER: ESTIMATE OF THE RMS ERROR OF FIT
*	TITLE
*		A TITLE TO REPLACE THE INPUT TITLE IN THE OUTPUT IMAGE
*
*CALLS
*	THIS PACKAGE:
*		GETPAR,GT2DIR,GT2DIW,GTDSCR,SPLIMG,LBGONE,PTDSCR
*	STARLINK:
*		GETDYN,WRERR,WRUSER,WRKEYR,CYDSCR,RDKEYC,FRDATA
*
*NOTES
*	USES VAX %VAL FACILITY
*
*WRITTEN BY
*	R.F. WARREN-SMITH
*-----------------------------------------------------------------------
C
C
      CHARACTER TITLE(1)*30,CVAL*1,PRBUF*50
      REAL RMS(1)
C
C OBTAIN INTERACTION LEVEL
C
      ILEVEL=2
      CALL GETPAR('ILEVEL','INTEGER',1,1.0,3.0,.TRUE.,ILEVEL,RVAL,
     +IERR)
C
C OBTAIN INPUT IMAGE FRAME
C
      CALL GT2DIR('INPUT',102,.FALSE.,NPIX,NLINES,IPA,IERRA)
      IF(IERRA.EQ.0) THEN
C
C INPUT IMAGE OBTAINED SUCCESSFULLY... OBTAIN OUTPUT IMAGE FRAME
C
	CALL GT2DIW('OUTPUT',102,.FALSE.,NPIX,NLINES,IPB,IERRB)
	IF(IERRB.EQ.0) THEN
C
C OUTPUT IMAGE OBTAINED SUCCESSFULLY...OBTAIN NUMBER OF INTERNAL
C KNOTS REQUIRED IN THE X AND Y DIRECTIONS
C
	  NXKNOT=0
	  NYKNOT=0
	  CALL GETPAR('NXKNOT','INTEGER',1,0.0,10.0,.TRUE.,NXKNOT,
     +	  RVAL,IERR)
	  CALL GETPAR('NYKNOT','INTEGER',1,0.0,10.0,.TRUE.,NYKNOT,
     +	  RVAL,IERR)
C
C OBTAIN DIMENSIONS OF RECTANGLES INTO WHICH THE DATA IS TO
C BE BINNED
C
	  IX=10
	  IY=10
	  CALL GETPAR('IX','INTEGER',1,1.0,10000.0,.TRUE.,IX,RVAL,
     +	  IERR)
	  CALL GETPAR('IY','INTEGER',1,1.0,10000.0,.TRUE.,IY,RVAL,
     +	  IERR)
C
C CALCULATE THE NUMBER OF BINS IN THE X AND Y DIRECTIONS
C
	  XN=REAL(NPIX)/IX
	  YN=REAL(NLINES)/IY
	  NX=XN
	  NY=YN
	  IF(NX.LT.XN) NX=NX+1
	  IF(NY.LT.YN) NY=NY+1
C
C CALCULATE THE TOTAL NUMBER OF BINS AND THE STORAGE REQUIREMENT
C FOR THE SPLINE FITTING ROUTINE
C
	  MAXBIN=NX*NY+2
	  NPOINT=MAX(MAXBIN,4)+(NXKNOT+1)*(NYKNOT+1)
C
C OBTAIN REQUIRED WORKSPACE
C
	  CALL GETDYN('WORK',208,5*MAXBIN,IPWRK,ISTWRK)
	  CALL GETDYN('POINT',104,NPOINT,IPPNT,ISTPNT)
C
C IF SPACE WAS NOT AVAILABLE, GIVE MESSAGE AND ABORT
C
	  IF((ISTWRK.NE.0).OR.(ISTPNT.NE.0)) THEN
	    CALL WRERR('NOSPACE')
	    GO TO 99
	  ENDIF
C
C EXTRACT REQUIRED DESCRIPTOR ITEMS FROM INPUT IMAGE
C
	  TITLE(1)=' '
	  INVALA=-100000
	  SCALE=1.0
	  CALL GTDSCR('INPUT','TITLE','CHARACTER',IVAL,RVAL,TITLE(1),
     +	  IERR)
	  CALL GTDSCR('INPUT','INVAL','INTEGER',INVALA,RVAL,CVAL,IERR)
	  CALL GTDSCR('INPUT','BSCALE','REAL',IVAL,SCALE,CVAL,IERR)
C
C SET INVALID FLAG FOR OUTPUT IMAGE
C
	  IF(ABS(INVALA).GT.32767) THEN
	    INVALB=-32767
	  ELSE
	    INVALB=INVALA
	  ENDIF
C
C CALL SPLIMG TO FIT THE SPLINE SURFACE TO THE INPUT IMAGE
C AND PUT THE RESULTING IMAGE IN THE OUTPUT
C
	  CALL SPLIMG(%VAL(IPA),NPIX,NLINES,INVALA,IX,IY,NXKNOT,
     +	  NYKNOT,MAXBIN,INVALB,%VAL(IPB),RMS(1),%VAL(IPWRK),
     +	  %VAL(IPPNT),IERR)
C
C IF IERR INDICATES THE SURFACE FIT WAS NOT UNIQUELY DEFINED, GIVE
C WARNING MESSAGE (A FIT IS STILL PRODUCED AND MAY BE SATISFACTORY
C ...SEE NAG DOCUMENTATION FOR E02DAF FOR DETAILS)
C
	  IF(IERR.EQ.1) THEN
	    CALL WRERR('NOTUNIQ')
C
C FOR OTHER ERROR CONDITIONS, GIVE MESSAGE AND ABORT
C
	  ELSE IF(IERR.EQ.2) THEN
	    CALL WRERR('XSKNOTS')
	    GO TO 99
	  ELSE IF(IERR.EQ.3) THEN
	    CALL WRERR('BINS2FEW')
	    GO TO 99
	  ENDIF
C
C IF ILEVEL.GE.2, SHOW THE USER THE RMS ERROR OF FIT
C
	  IF(ILEVEL.GE.2) THEN
	    WRITE(PRBUF,10)SCALE*RMS(1)
   10	    FORMAT('   RMS ERROR OF FIT=',SS,G11.4,' PER PIXEL')
	    CALL LBGONE(PRBUF(29:))
	    CALL WRUSER(' ',ISTAT)
	    CALL WRUSER(PRBUF,ISTAT)
	    CALL WRUSER(' ',ISTAT)
	  ENDIF
C
C WRITE THE RMS ERROR TO THE ENVIRONMENT, COPY THE INPUT DESCRIPTOR
C TO THE OUTPUT AND ADD NEW DESCRIPTOR ITEMS
C
	  RMS(1)=RMS(1)*SCALE
	  CALL WRKEYR('RMSERROR',RMS,1,ISTAT)
	  CALL CYDSCR('INPUT','OUTPUT',ISTAT)
	  CALL RDKEYC('TITLE',.TRUE.,1,TITLE,NVAL,ISTAT)
	  CALL PTDSCR('OUTPUT','TITLE','CHARACTER',IVAL,RVAL,TITLE(1),
     +	  IERR)
	  CALL PTDSCR('OUTPUT','INVAL','INTEGER',INVALB,RVAL,CVAL,IERR)
	ENDIF
      ENDIF
C
C RELEASE DATA AREAS AND RETURN
C
   99 CALL FRDATA(' ',ISTAT)
      RETURN
      END
