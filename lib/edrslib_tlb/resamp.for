      SUBROUTINE RESAMP
*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
*PURPOSE
*	TO RESAMPLE AN IMAGE AT POINTS DEFINED BY TRANSFORMING THE
*	PIXEL COORDINATES OF THE OUTPUT IMAGE
*
*METHOD
*	OBTAIN THE INPUT IMAGE AND TRANSFORM COEFFICIENTS. OBTAIN THE
*	OUTPUT IMAGE. CALL REBIN TO RESAMPLE THE IMAGE BY THE REQUIRED
*	METHOD. UPDATE OUTPUT DESCRIPTOR ITEMS
*
*ARGUMENTS
*	NONE
*
*STARLINK PARAMETERS
*	INPUT
*		THE INPUT IMAGE
*	TRCOEFFS
*		6 REAL COEFFICIENTS DEFINING THE TRANSFORMATION
*	METHOD
*		SPECIFIES THE RESAMPLING INTERPOLATION METHOD
*	CONSERVE
*		(LOGICAL) IF SET TRUE, THE IMAGE IS RESCALED TO
*		CONSERVE TOTAL DATA SUM
*	NPIXOUT
*		NUMBER OF PIXELS PER LINE IN THE OUTPUT IMAGE
*	NLINEOUT
*		NUMBER OF LINES IN THE OUTPUT IMAGE
*	OUTPUT
*		OUTPUT IMAGE
*	TITLE
*		TITLE TO REPLACE THE INPUT TITLE IN THE OUTPUT IMAGE
*
*CALLS
*	THIS PACKAGE:
*		GT2DIR,GETCMD,GETPAR,GT2DIW,GTDSCR,REBIN,PTDSCR
*	STARLINK:
*		RDKEYR,RDKEYL,CYDSCR,RDKEYC,FRDATA
*
*NOTES
*	USES VAX %VAL FACILITY
*
*WRITTEN BY
*	R.F. WARREN-SMITH
*-----------------------------------------------------------------------
C
C
      CHARACTER CVAL*1,CMETHD*10,TITLE(1)*30
      REAL C(6)
      LOGICAL CONSRV(1)
C
C OBTAIN INPUT IMAGE
C
      CALL GT2DIR('INPUT',102,.FALSE.,NPIX,NLINES,IPIN,IERR1)
      IF(IERR1.EQ.0) THEN
C
C INPUT IMAGE SUCESSFULLY OBTAINED... 
C OBTAIN POSITION TRANSFORMATION COEFFICIENTS
C
        C(1)=0.0
	C(2)=1.0
	C(3)=0.0
	C(4)=0.0
	C(5)=0.0
	C(6)=1.0
	CALL RDKEYR('TRCOEFFS',.FALSE.,6,C,NVAL,ISTAT)
C
C OBTAIN TYPE OF INTERPOLATION REQUIRED
C
	METHOD=2
	CALL GETCMD('METHOD','NEAREST,LINEAR,UNIFORM.',
     +  1,METHOD,CMETHD,LMETHD,IERR)
C
C DETERMINE IF TOTAL DATA COUNT IS TO BE CONSERVED
C
        CONSRV(1)=.FALSE.
        CALL RDKEYL('CONSERVE',.TRUE.,1,CONSRV,NVAL,ISTAT)
C
C OBTAIN SIZE OF OUTPUT IMAGE, USING INPUT SIZE AS DEFAULT
C
	NPOUT=NPIX
	NLOUT=NLINES
	CALL GETPAR('NPIXOUT','INTEGER',1,1.0,10000.0,.TRUE.,NPOUT,
     +  RVAL,IERR)
        CALL GETPAR('NLINEOUT','INTEGER',1,1.0,10000.0,.TRUE.,NLOUT,
     +  RVAL,IERR)
C
C OBTAIN OUTPUT IMAGE
C
	CALL GT2DIW('OUTPUT',102,.FALSE.,NPOUT,NLOUT,IPOUT,IERR2)
	IF(IERR2.EQ.0) THEN
C
C SUCCESSFULLY OBTAINED... 
C EXTRACT TITLE, INVALID FLAG, SCALE AND ZERO FROM INPUT DESCRIPTOR
C
          TITLE(1)=' '
	  INVAL=-100000
	  SCALE=1.0
	  ZERO=0.0
          CALL GTDSCR('INPUT','TITLE','CHARACTER',IVAL,RVAL,TITLE(1),
     +    IERR)
	  CALL GTDSCR('INPUT','INVAL','INTEGER',INVAL,RVAL,CVAL,IERR)
	  CALL GTDSCR('INPUT','BSCALE','REAL',IVAL,SCALE,CVAL,IERR)
	  CALL GTDSCR('INPUT','BZERO','REAL',IVAL,ZERO,CVAL,IERR)
C
C SET OUTPUT INVALID PIXEL FLAG
C
	  IF(ABS(INVAL).LE.32767) THEN
	    INVALB=INVAL
	  ELSE
	    INVALB=-32767
	  ENDIF
C
C CALL REBIN TO RESAMPLE THE INPUT IMAGE OVER THE ENTIRE AREA
C COVERED BY THE OUTPUT IMAGE
C
	  CALL REBIN(%VAL(IPIN),NPIX,NLINES,INVAL,INVALB,1,NPOUT,
     +    1,NLOUT,C,S,METHOD,%VAL(IPOUT),NPOUT,NLOUT,IERR)
C
C COPY DESCRIPTOR FROM INPUT TO OUTPUT AND UPDATE IMAGE SIZE
C
	  CALL CYDSCR('INPUT','OUTPUT',ISTAT)
	  CALL PTDSCR('OUTPUT','NAXIS1','INTEGER',NPOUT,RVAL,CVAL,IERR)
	  CALL PTDSCR('OUTPUT','NAXIS2','INTEGER',NLOUT,RVAL,CVAL,IERR)
C
C MODIFY IMAGE SCALE TO CONSERVE TOTAL COUNTS AND UPDATE SCALE,ZERO
C AND INVALID FLAG IN OUTPUT DESCRIPTOR
C
          IF(CONSRV(1)) THEN
	    SCALE=SCALE*S
	    ZERO=ZERO*S
	  ENDIF
	  CALL PTDSCR('OUTPUT','INVAL','INTEGER',INVALB,RVAL,CVAL,IERR)
	  CALL PTDSCR('OUTPUT','BSCALE','REAL',IVAL,SCALE,CVAL,IERR)
	  CALL PTDSCR('OUTPUT','BZERO','REAL',IVAL,ZERO,CVAL,IERR)
C
C ADD TITLE
C
          CALL RDKEYC('TITLE',.TRUE.,1,TITLE,NVAL,ISTAT)
	  CALL PTDSCR('OUTPUT','TITLE','CHARACTER',IVAL,RVAL,TITLE(1),
     +    IERR)
	ENDIF
      ENDIF
C
C RELEASE DATA AREAS AND RETURN
C
      CALL FRDATA(' ',ISTAT)
      RETURN
      END
