      SUBROUTINE COMBIN(IA,NPIX,NIMAGE,WEIGHT,METH,SCALE,ZERO,
     +			INVAL,NMIN,SCALEF,ZEROL,INVALB,LINEB,
     +			IB,WORK)
*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
*PURPOSE
*	TO COMBINE A NUMBER OF LINES FROM DIFFERENT IMAGES INTO A
*	SINGLE OUTPUT LINE
*
*METHOD
*	WORK ALONG THE LINE, COMBINING THE VALUES FROM EACH INPUT IMAGE
*	USING EITHER A WEIGHTED MEAN, THE MEDIAN, THE MODE, THE MAXIMUM
*	OR THE MINIMUM, TAKING DUE ACCOUNT OF INVALID PIXELS AND
*	DIFFERING SCALE FACTORS AND ZERO LEVELS IN EACH IMAGE.
*
*ARGUMENTS
*	IA (IN)
*	INTEGER*2(NPIX,NIMAGE)
*		THE INPUT STACK OF IMAGE LINES
*	NPIX (IN)
*	INTEGER
*		THE NUMBER OF PIXELS PER LINE
*	NIMAGE (IN)
*	INTEGER
*		THE NUMBER OF IMAGE LINES IN THE STACK IA
*	WEIGHT (IN)
*	REAL(NIMAGE)
*		WEIGHTS TO BE USED WITH EACH IMAGE IF USING MEAN OR
*		MODE
*	METH (IN)
*	INTEGER
*		METHOD TO BE USED IN THE RANGE 1 TO 5
*	SCALE,ZERO (IN)
*	REAL
*		SCALE FACTORS AND ZERO LEVELS FOR INPUT IMAGE LINES
*	INVAL (IN)
*	INTEGER
*		INVALID PIXEL FLAGS FOR INPUT IMAGE LINES
*	NMIN (IN)
*	INTEGER
*		MINIMUM NUMBER OF IMAGES REQUIRED AT EACH PIXEL BEFORE
*		A VALID OUTPUT VALUE IS GENERATED
*	SCALEF,ZEROL (IN)
*	REAL
*		CONSTANTS TO CONVERT OUTPUT VALUES TO INTEGERS
*		I.E. THE 'INVERSE' OF THE OUTPUT SCALE AND ZERO LEVEL
*	INVALB (IN)
*	INTEGER
*		INVALID PIXEL FLAG FOR OUTPUT IMAGE
*	LINEB (IN)
*	INTEGER
*		THE LINE IN THE OUTPUT IMAGE IB INTO WHICH THE RESULT
*		IS TO BE PUT
*	IB (IN/OUT)
*	INTEGER*2(NPIX,*)
*		THE OUTPUT IMAGE INTO WHICH THE RESULTANT LINE IS
*		INSERTED
*	WORK (WORKSPACE)
*	REAL(NIMAGE,2)
*		USED TO STORE INTERMEDIATE VALUES IN THE COMPUTATIONS
*
*CALLS
*	THIS PACKAGE:
*		NTHMIN,WMODE
*
*NOTES
*	USES INTEGER*2 ARRAYS
*
*WRITTEN BY
*	R.F. WARREN-SMITH
*-----------------------------------------------------------------------
C
C
      INTEGER*2 IA(NPIX,NIMAGE),IB(NPIX,*)
      REAL WEIGHT(NIMAGE),SCALE(NIMAGE),ZERO(NIMAGE),WORK(NIMAGE,2)
      INTEGER INVAL(NIMAGE)
C
C SET PROBABILITY OF A PIXEL BEING CORRUPT (USED IN THE ROUTINE WMODE)
C 0.01 IS A SAFE VALUE FOR ELECTRONOGRAPHS
C
      PARAMETER (PBAD=0.01)
C
C SET ACCURACY CRITERION AND LIMIT THE METHOD TO THE RANGE 1-5
C
      TOLL=0.5/SCALEF
      METHOD=MIN(MAX(1,METH),5)
C
C COUNT THROUGH EACH PIXEL IN THE LINE
C
      DO 100 I=1,NPIX
C
C INITIALLISE COUNTER FOR GOOD IMAGES AT EACH PIXEL LOCATION
C
	NGOOD=0
C
C IF THE MEAN IS REQUIRED:
C ------------------------
C
	  IF(METHOD.EQ.1) THEN
	    SUM1=0.0
	    SUM2=0.0
C
C FORM WEIGHTED MEAN OF VALID VALUES
C
	    DO 901 J=1,NIMAGE
	      IF(IA(I,J).NE.INVAL(J)) THEN
	        NGOOD=NGOOD+1
		SUM1=SUM1+WEIGHT(J)
		SUM2=SUM2+WEIGHT(J)*(IA(I,J)*SCALE(J)+ZERO(J))
	      ENDIF
  901	    CONTINUE
C
C IF INSUFFICIENT IMAGES WERE GOOD, ABORT AND SET OUTPUT INVALID
C
	    IF(NGOOD.GE.NMIN) THEN
	      B=SUM2/SUM1
	    ELSE
	      GO TO 999
	    ENDIF
C
C IF THE MEDIAN IS REQUIRED:
C --------------------------
C
	  ELSE IF(METHOD.EQ.2) THEN
C
C EXTRACT A LIST OF THE VALID VALUES, CORRECTLY SCALED
C
	    DO 902 J=1,NIMAGE
	      IF(IA(I,J).NE.INVAL(J)) THEN
	        NGOOD=NGOOD+1
	        WORK(NGOOD,1)=IA(I,J)*SCALE(J)+ZERO(J)
	      ENDIF
  902	    CONTINUE
C
C IF SUFFICIENT POINTS ARE PRESENT, CALL NTHMIN TO FIND THE MEDIAN
C VALUE
C
	    IF(NGOOD.GE.NMIN) THEN
	      NMED=NGOOD/2+1
	      CALL NTHMIN(WORK(1,1),NGOOD,NMED,WORK(1,2),IERR)
C
C MEDIAN LIES BETWEEN TWO VALUES IF THE NUMBER OF VALUES IS EVEN
C
	      IF(MOD(NGOOD,2).EQ.0) THEN
		B=(WORK(1,2)+WORK(2,2))*0.5
	      ELSE
		B=WORK(1,2)
	      ENDIF
	    ELSE
	      GO TO 999
	    ENDIF
C
C IF THE MODE IS REQUIRED:
C ------------------------
C
	  ELSE IF(METHOD.EQ.3) THEN
C
C FORM A LIST OF THE VALID VALUES (SCALED) AND THEIR WEIGHTS
C
	    DO 903 J=1,NIMAGE
	      IF(IA(I,J).NE.INVAL(J)) THEN
	        NGOOD=NGOOD+1
		WORK(NGOOD,1)=IA(I,J)*SCALE(J)+ZERO(J)
	        WORK(NGOOD,2)=WEIGHT(J)
	      ENDIF
  903	    CONTINUE
C
C IF SUFFICIENT VALUES ARE VALID, CALL WMODE TO FIND THE MAXIMUM
C LIKELIHOOD VALUE
C
	    IF(NGOOD.GE.NMIN) THEN
	      CALL WMODE(WORK(1,1),WORK(1,2),NGOOD,PBAD,3,TOLL,B,
     +	      SIGMA)
	    ELSE
	      GO TO 999
	    ENDIF
C
C IF THE MINIMUM IS REQUIRED:
C ---------------------------
C
	  ELSE IF(METHOD.EQ.4) THEN
	    B=1.0E20
C
C FIND THE MINIMUM OF THE VALID VALUES (SCALED)
C
	    DO 904 J=1,NIMAGE
  	      IF(IA(I,J).NE.INVAL(J)) THEN
		NGOOD=NGOOD+1
		B=MIN(B,IA(I,J)*SCALE(J)+ZERO(J))
	      ENDIF
  904	    CONTINUE
	    IF(NGOOD.LT.NMIN) GO TO 999
C
C IF THE MAXIMUM IS REQUIRED:
C ---------------------------
C
	  ELSE IF(METHOD.EQ.5) THEN
	    B=-1.0E20
C
C FIND THE MAXIMUM OF THE VALID VALUES (SCALED)
C
	    DO 905 J=1,NIMAGE
	      IF(IA(I,J).NE.INVAL(J)) THEN
		NGOOD=NGOOD+1
		B=MAX(B,IA(I,J)*SCALE(J)+ZERO(J))
	      ENDIF
  905	    CONTINUE
	    IF(NGOOD.LT.NMIN) GO TO 999
	  ENDIF
C
C THE OUTPUT VALUE IS NOW KNOWN... APPLY THE OUTPUT SCALE FACTOR
C TO CONVERT TO AN INTEGER
C
	  B=B*SCALEF+ZEROL
	  IF(ABS(B).GT.32767.0) THEN
	    IB(I,LINEB)=INVALB
	  ELSE
	    IB(I,LINEB)=NINT(B)
	  ENDIF
	  GO TO 100
C
C PIXELS WITH INSUFFICIENT VALID INPUT IMAGES ARE HERE SET INVALID
C ON OUTPUT:
C
  999	  IB(I,LINEB)=INVALB
  100 CONTINUE
      RETURN
      END
