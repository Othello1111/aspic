      SUBROUTINE GTXYLR(NAME,NULL,NITEM,LSTLEN,IPOINT,IERR)
*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
*PURPOSE
*	TO OBTAIN AN INPUT X,Y LIST FRAME AND HANDLE ANY
*	ERROR CONDITIONS WHICH MAY ARISE
*
*METHOD
*	OBTAIN INPUT FRAME, CHECK FOR ERROR CODES, GIVING ERROR MESSAGES
*	AS REQUIRED. CHECK DIMENSIONS ARE OK. IF ERROR CONDITIONS
*	ARISE, RETURN FOR A NEW FRAME OR ABORT AS APPROPRIATE
*
*ARGUMENTS
*	NAME (IN)
*	CHARACTER*(*)
*		NAME OF FRAME
*	NULL (IN)
*	LOGICAL
*		IF NULL IS .TRUE., A NULL ENTRY FOR A FRAME IS VALID
*		OTHERWISE IT IS AN ERROR CONDITION
*	NITEM (OUT)
*	INTEGER
*		NUMBER OF ITEMS IN LIST RECORDS
*	LSTLEN (OUT)
*	INTEGER
*		NUMBER OF LIST ENTRIES (RECORDS)
*	IPOINT (OUT)
*	INTEGER
*		POINTER TO DATA FRAME
*	IERR (OUT)
*	INTEGER
*		ERROR FLAG: ZERO FOR SUCCESS
*
*STARLINK PARAMETERS
*	'NAME'
*		PARAMETER NAME FOR INPUT FRAME IS SPECIFIED IN THE
*		ARGUMENT 'NAME'
*	NONULL/ERROR/
*		ACCESSED IF A NULL IS ENTERED AND IS NOT VALID
*	NOTXYLST/ERROR/
*		ACCESSED IF A FRAME IS SPECIFIED WHICH IS NOT AN
*		X,Y LIST
*	NOACCESS/ERROR/
*		ACCESSED IF FRAME CANNOT BE ACCESSED
*	DIMINVAL/ERROR/
*		ACCESSED IF FRAME HAS INVALID DIMENSIONS
*
*CALLS
*	THIS PACKAGE:
*		GTDSCR
*	STARLINK:
*		RDDATA,WRERR,CNPAR
*
*WRITTEN BY
*	R.F. WARREN-SMITH
*-----------------------------------------------------------------------
C
C
      CHARACTER NAME*(*),FRTYPE*6,CVAL*1
      INTEGER CNSTAT
      LOGICAL NULL,EXIT
      PARAMETER (MAXNUL=2)
C
C INITIALLISE NULL ENTRY COUNTER AND ERROR FLAG AND CALL RDDATA
C TO OBTAIN DATA FRAME
C
      NNULL=0
   11 IERR=0
      CALL RDDATA(NAME,-104,FRTYPE,LEN,IPOINT,ISTAT)
C
C IF NULL ENTRY:
C
      IF(ISTAT.EQ.1) THEN
C
C IF NULL IS NOT ACCEPTABLE, INCREMENT NULL COUNT AND RETURN TO GET
C NEW FRAME. OTHERWISE, IF MAXNUL EXCEEDED, RETURN WITH ERROR STATUS
C
        IF(.NOT.NULL) THEN
	  IF(NNULL.LT.MAXNUL) THEN
	    NNULL=NNULL+1
	    CALL WRERR('NONULL')
	    CALL CNPAR(NAME,CNSTAT)
	    EXIT=.FALSE.
	  ELSE
	    IERR=1
	    EXIT=.TRUE.
	  ENDIF
C
C IF NULL IS OK, RETURN WITH IERR=1
C
	ELSE
	  IERR=1
	  EXIT=.TRUE.
	ENDIF
C
C IF FORMAT CONVERSION HAS BEEN TRIED, THIS IS NOT AN XYLIST FRAME
C
      ELSE IF((ISTAT.EQ.2).OR.(ISTAT.EQ.8)) THEN
	CALL WRERR('NOTXYLST')
	CALL CNPAR(NAME,CNSTAT)
	EXIT=.FALSE.
C
C IF NOT ACCESSIBLE, GIVE ERROR MESSAGE AND GET NEW FRAME
C
      ELSE IF(ISTAT.EQ.3) THEN
	CALL WRERR('NOACCESS')
	CALL CNPAR(NAME,CNSTAT)
	EXIT=.FALSE.
C
C INVALID PARAMETER NAME: RETURN IERR=4
C
      ELSE IF(ISTAT.EQ.4) THEN
	IERR=4
	EXIT=.TRUE.
C
C INVALID SIZE: GIVE MESSAGE AND GET NEW FRAME
C
      ELSE IF(ISTAT.EQ.6) THEN
	CALL WRERR('DIMINVAL')
	CALL CNPAR(NAME,CNSTAT)
	EXIT=.FALSE.
C
C IF NONE OF THESE... FRAME IS OK
C
      ELSE
	EXIT=.TRUE.
      ENDIF
C
C RETURN FOR NEW FRAME IF NECESSARY
C
      IF(.NOT.EXIT) GO TO 11
C
C IF FRAME PASSES TESTS ABOVE, EXTRACT NECESSARY DESCRIPTOR ITEMS
C
      IF(IERR.EQ.0) THEN
	NITEM=0
	LSTLEN=0
	CALL GTDSCR(NAME,'NITEM','INTEGER',NITEM,RVAL,CVAL,IERRN)
        CALL GTDSCR(NAME,'LSTLEN','INTEGER',LSTLEN,RVAL,CVAL,IERRL)
C
C IF DESCRIPTOR ITEMS DO NOT EXIST, OR HAVE INVALID VALUES, THIS IS
C NOT A VALID XYLIST... RETURN FOR NEW FRAME
C
	IF((FRTYPE.NE.'XYLIST').OR.(NITEM.LT.7).OR.(LSTLEN.LT.1)) THEN
	  CALL WRERR('NOTXYLST')
	  CALL CNPAR(NAME,CNSTAT)
          EXIT=.FALSE.
	ENDIF
      ENDIF
      IF(.NOT.EXIT) GO TO 11
      RETURN
      END
