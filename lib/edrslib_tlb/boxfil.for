      SUBROUTINE BOXFIL
*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
*PURPOSE
*	TO APPLY A RECTANGULAR 'BOX' FILTER TO AN IMAGE
*
*METHOD
*	OBTAIN IMAGE AND ALLOCATE WORKSPACE. OBTAIN REQUIRED BOX
*	SIZE AND EXTRACT DESCRIPTOR ITEMS FROM IMAGE. CALL ROUTINE
*	IMGBOX TO APPLY FILTER WITH A THRESHOLD ON THE NUMBER OF
*	VALID PIXELS REQUIRED IN THE BOX AREA. UPDATE OUTPUT 
*	DESCRIPTOR.
*
*ARGUMENTS
*	NONE
*
*STARLINK PARAMETERS
*	INPUT
*		INPUT IMAGE
*	NOSPACE/ERROR/
*		CALLED IF WORKSPACE CANNOT BE OBTAINED
*	OUTPUT
*		OUTPUT IMAGE
*	XSIZE,YSIZE
*		BOX SIZE IN PIXELS IN THE X,Y DIRECTIONS
*	MINPIX
*		MINIMUM NUMBER OF VALID PIXELS REQUIRED IN BOX AREA
*	TITLE
*		TITLE TO REPLACE INPUT TITLE IN OUTPUT IMAGE
*
*CALLS
*	THIS PACKAGE:
*			GT2DIR,GT2DIW,GETPAR,GTDSCR,IMGCPY,IMGBOX,
*			PTDSCR
*	STARLINK:
*			GETDYN,WRERR,CYDSCR,RDKEYC,FRDATA
*
*NOTES
*	USES VAX %VAL FACILITY
*
*WRITTEN BY
*	R.F. WARREN-SMITH
*-----------------------------------------------------------------------
C
C
      CHARACTER TITLE(1)*30,CVAL*1
C
C OBTAIN INPUT IMAGE
C
      CALL GT2DIR('INPUT',102,.FALSE.,NPIX,NLINES,IPA,IERRA)
      IF(IERRA.EQ.0) THEN
C
C IMAGE OBTAINED SUCCESSFULLY...GET DYNAMIC MEMORY WORKSPACE
C FOR FILTERING ROUTINE
C
	CALL GETDYN('ISTOR',104,NPIX*NLINES,IPIST,ISTIST)
	CALL GETDYN('NSTOR',102,NPIX*NLINES,IPNST,ISTNST)
        CALL GETDYN('ILINE',104,NPIX,IPIL,ISTIL)
        CALL GETDYN('NLINE',102,NPIX,IPNL,ISTNL)
C
C IF SPACE WAS NOT AVAILABLE, GIVE MESSAGE AND ABORT
C
	IF((ISTIST.NE.0).OR.(ISTNST.NE.0).OR.(ISTIL.NE.0).OR.
     +  (ISTNL.NE.0)) THEN
	  CALL WRERR('NOSPACE')
	  GO TO 99
        ENDIF
C
C OBTAIN OUTPUT IMAGE FRAME
C
	CALL GT2DIW('OUTPUT',102,.FALSE.,NPIX,NLINES,IPB,IERRB)
	IF(IERRB.EQ.0) THEN
C
C OUTPUT FRAME OBTAINED SUCCESSFULLY...OBTAIN RECTANGLE SIZE
C
	  IX=3
	  CALL GETPAR('XSIZE','INTEGER',1,1.0,32767.0,.TRUE.,IX,RVAL,
     +    IERR)
C
C MAKE RECTANGLE SIZE ODD AND SET LIMITS ON IY TO PREVENT THE
C NUMBER OF PIXELS IN THE RECTANGLE EXCEEDING 32767 (THIS COULD CAUSE
C OVERFLOW IN IMGBOX)
C
          IX=2*MAX(IX/2,0)+1
          IYMAX=32767/IX
          IF(MOD(IYMAX,2).EQ.0) IYMAX=IYMAX-1
          IY=MIN(IYMAX,3)
          BOTLIM=1.0
          IF(IX.EQ.1) BOTLIM=2.0
	  CALL GETPAR('YSIZE','INTEGER',1,BOTLIM,REAL(IYMAX),.TRUE.,IY,
     +    RVAL,IERR)
          IY=2*MAX(IY/2,0)+1
C
C CALCULATE NO. OF PIXELS PER RECTANGLE AND GET LIMIT ON MINIMUM
C NO. OF GOOD PIXELS REQUIRED IN RECTANGLE
C
	  MAXLIM=IX*IY
	  MINPIX=1
	  CALL GETPAR('MINPIX','INTEGER',1,1.0,REAL(MAXLIM),.TRUE.,
     +    MINPIX,RVAL,IERR)
C
C OBTAIN REQUIRED DESCRIPTOR ITEMS FROM INPUT IMAGE
C
	  TITLE(1)=' '
	  INVAL=-100000
	  CALL GTDSCR('INPUT','TITLE','CHARACTER',IVAL,RVAL,TITLE(1),
     +    IERR)
	  CALL GTDSCR('INPUT','INVAL','INTEGER',INVAL,RVAL,CVAL,IERR)
C
C COPY INPUT IMAGE TO OUTPUT
C
	  CALL IMGCPY(%VAL(IPA),NPIX,NLINES,%VAL(IPB))
C
C CALL IMGBOX TO APPLY THE RECTANGULAR FILTER TO THE OUTPUT IMAGE
C
	  CALL IMGBOX(%VAL(IPB),NPIX,NLINES,INVAL,IX,IY,MINPIX,
     +	  %VAL(IPIST),%VAL(IPNST),%VAL(IPIL),%VAL(IPNL))
C
C COPY INPUT DESCRIPTOR TO OUTPUT AND ADD NEW TITLE
C
	  CALL CYDSCR('INPUT','OUTPUT',ISTAT)
	  CALL RDKEYC('TITLE',.TRUE.,1,TITLE,NVAL,ISTAT)
	  CALL PTDSCR('OUTPUT','TITLE','CHARACTER',IVAL,RVAL,TITLE(1),
     +	  IERR)
	ENDIF
      ENDIF
C
C RELEASE DATA AREAS AND RETURN
C
   99 CALL FRDATA(' ',ISTAT)
      RETURN
      END
