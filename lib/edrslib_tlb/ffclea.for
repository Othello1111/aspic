      SUBROUTINE FFCLEA
*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
*PURPOSE
*	TO REMOVE DEFECTS FROM A SUBSTANTIALLY FLAT IMAGE
*
*METHOD
*	OBTAIN INPUT IMAGE, WORKSPACE AND THE OUTPUT IMAGE. OBTAIN
*	PARAMETERS SPECIFYING THE FILTER BOX SIZE, NUMBER OF ITERATIONS
*	AND REJECTION THRESHOLD FOR THE REJECTION ROUTINE. EXTRACT
*	THE INPUT IMAGE DESCRIPTOR ITEMS REQUIRED, THEN CALL FFREJ TO
*	IMPLEMENT THE REJECTION ALGORITHM. UPDATE OUTPUT DESCRIPTOR.
*
*ARGUMENTS
*	NONE
*
*STARLINK PARAMETERS
*	ILEVEL
*		INTERACTION LEVEL: CONTROLS PRINTING OF RESULTS
*	INPUT
*		THE INPUT IMAGE
*	NOSPACE/ERROR/
*		CALLED IF THE REQUIRED WORKSPACE CANNOT BE OBTAINED
*	OUTPUT
*		THE OUTPUT IMAGE
*	XSIZE,YSIZE
*		THE SIZE OF THE BOX AREA USED IN FILTERING THE IMAGE
*	NITER
*		THE NUMBER OF REJECTION ITERATIONS TO BE PERFORMED
*	GAMMA
*		THE NUMBER OF STANDARD DEVIATIONS AT WHICH POINTS ARE
*		REJECTED
*	ALLREJ/ERROR/
*		CALLED IF ALL THE INPUT PIXELS ARE REJECTED
*	NONEVAL/ERROR/
*		CALLED IF THERE ARE NO VALID PIXELS IN THE INPUT IMAGE
*	SIGMA
*		AN OUTPUT ESTIMATE OF THE RMS NOISE PER PIXEL IN THE
*		OUTPUT IMAGE
*	TITLE
*		A TITLE TO REPLACE THE INPUT TITLE IN THE OUTPUT IMAGE
*
*CALLS
*	THIS PACKAGE:
*		GETPAR,GT2DIR,GT2DIW,GTDSCR,FFREJ,PTDSCR
*	STARLINK:
*		GETDYN,WRERR,WRKEYR,CYDSCR,RDKEYC,FRDATA
*
*NOTES
*	USES VAX %VAL FACILITY
*
*WRITTEN BY
*	R.F. WARREN-SMITH
*-----------------------------------------------------------------------
C
C
      CHARACTER CVAL*1,TITLE(1)*30
      REAL SIGMA(1)
C
C OBTAIN INTERACTION LEVEL
C
      ILEVEL=2
      CALL GETPAR('ILEVEL','INTEGER',1,1.0,3.0,.TRUE.,ILEVEL,RVAL,
     +IERR)
C
C OBTAIN INPUT IMAGE
C
      CALL GT2DIR('INPUT',102,.FALSE.,NPIX,NLINES,IPA,IERRA)
      IF(IERRA.EQ.0) THEN
C
C IMAGE OBTAINED SUCCESSFULLY...GET WORK SPACE
C
	CALL GETDYN('ISTOR',104,NPIX*NLINES,IPIST,ISTIST)
	CALL GETDYN('NSTOR',102,NPIX*NLINES,IPNST,ISTNST)
	CALL GETDYN('ILINE',104,NPIX,IPIL,ISTIL)
	CALL GETDYN('NLINE',102,NPIX,IPNL,ISTNL)
C
C IF SPACE NOT AVAILABLE, GIVE MESSAGE AND ABORT
C
	IF((ISTIST.NE.0).OR.(ISTNST.NE.0).OR.(ISTIL.NE.0).OR.
     +  (ISTNL.NE.0)) THEN
	  CALL WRERR('NOSPACE')
	  GO TO 99
	ENDIF
C
C OBTAIN OUTPUT IMAGE FRAME
C
	CALL GT2DIW('OUTPUT',102,.FALSE.,NPIX,NLINES,IPB,IERRB)
	IF(IERRB.EQ.0) THEN
C
C OUTPUT IMAGE OBTAINED SUCCESSFULLY...SET DEFAULT BOX SIZE, THEN
C OBTAIN SIZE FROM THE ENVIRONMENT
C
	  IX=3
	  CALL GETPAR('XSIZE','INTEGER',1,1.0,32767.0,.TRUE.,IX,
     +	  RVAL,IERR)
C
C CONSTRAIN IY SO THAT THE NUMBER OF PIXELS IN THE BOX CANNOT EXCEED
C 32767... THIS COULD CAUSE OVERFLOW IN ROUTINE IMGBOX
C
	  IX=2*MAX(0,IX/2)+1
	  IYMAX=32767/IX
	  IF(MOD(IYMAX,2).EQ.0) IYMAX=IYMAX-1
	  IY=MIN(IYMAX,3)
	  BOTLIM=1.0
	  IF(IX.EQ.1) BOTLIM=2.0
	  CALL GETPAR('YSIZE','INTEGER',1,BOTLIM,REAL(IYMAX),.TRUE.,
     +	  IY,RVAL,IERR)
	  IY=2*MAX(0,IY/2)+1
C
C OBTAIN NUMBER OF ITERATIONS FOR REJECTION ALGORITHM
C
	  NITER=2
	  CALL GETPAR('NITER','INTEGER',1,1.0,100.0,.TRUE.,NITER,
     +    RVAL,IERR)
C
C OBTAIN NUMBER OF STANDARD DEVIATIONS FOR REJECTION THRESHOLD
C
	  GAMMA=3.0
	  CALL GETPAR('GAMMA','REAL',1,0.0,1.0E10,.TRUE.,IVAL,GAMMA,
     +	  IERR)
C
C OBTAIN REQUIRED DESCRIPTOR ITEMS FROM INPUT IMAGE
C
	  TITLE(1)=' '
	  INVALA=-100000
	  SCALE=1.0
	  CALL GTDSCR('INPUT','TITLE','CHARACTER',IVAL,RVAL,TITLE(1),
     +	  IERR)
	  CALL GTDSCR('INPUT','INVAL','INTEGER',INVALA,RVAL,CVAL,IERR)
	  CALL GTDSCR('INPUT','BSCALE','REAL',IVAL,SCALE,CVAL,IERR)
C
C SET OUTPUT INVALID FLAG
C
	  IF(ABS(INVALA).LE.32767) THEN
	    INVALB=INVALA
	  ELSE
	    INVALB=-32767
	  ENDIF
C
C CALL FFREJ TO APPLY THE REJECTION ALGORITHM
C
	  CALL FFREJ(%VAL(IPA),NPIX,NLINES,INVALA,NITER,GAMMA,
     +    IX,IY,ILEVEL,SCALE,SIGMA(1),%VAL(IPB),INVALB,NGOOD,
     +    %VAL(IPIST),%VAL(IPNST),%VAL(IPIL),%VAL(IPNL))
C
C IF THERE ARE NO VALID PIXELS IN THE OUTPUT IMAGE, GIVE MESSAGE
C AND ABORT... EITHER THERE WERE NONE VALID ON ENTRY (NGOOD.LT.0)
C OR THEY HAVE ALL BEEN REJECTED (NGOOD=0)
C
	  IF(NGOOD.LE.0) THEN
	    IF(NGOOD.EQ.0) THEN
	      CALL WRERR('ALLREJ')
	    ELSE
	      CALL WRERR('NONEVAL')
	    ENDIF
	    GO TO 99
	  ENDIF
C
C WRITE ESTIMATE OF NOISE LEVEL TO ENVIRONMENT
C
	  CALL WRKEYR('SIGMA',SIGMA,1,ISTAT)
C
C COPY DESCRIPTOR TO OUTPUT AND UPDATE VALUES
C
	  CALL CYDSCR('INPUT','OUTPUT',ISTAT)
	  CALL RDKEYC('TITLE',.TRUE.,1,TITLE,NVAL,ISTAT)
	  CALL PTDSCR('OUTPUT','TITLE','CHARACTER',IVAL,RVAL,TITLE(1),
     +    IERR)
	  CALL PTDSCR('OUTPUT','INVAL','INTEGER',INVALB,RVAL,CVAL,IERR)
	ENDIF
      ENDIF
C
C FREE DATA AREAS AND RETURN
C
      
   99 CALL FRDATA(' ',ISTAT)
      RETURN
      END
