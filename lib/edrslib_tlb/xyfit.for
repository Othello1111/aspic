      SUBROUTINE XYFIT
*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
*PURPOSE
*	TO OBTAIN A LEAST-SQUARES LINEAR POSITION TRANSFORMATION
*	BETWEEN 2 SETS OF X,Y POSITIONS
*
*METHOD
*	OBTAIN THE INPUT X,Y POSITION LISTS. ASSIGN WORKSPACE AND
*	EXTRACT THE X,Y POSITIONS AND IDENTIFIERS. OBTAIN PARAMETERS
*	CONTROLLING THE FITTING, THEN CALL FITLST TO OBTAIN THE
*	FIT AND PRINT THE RESULTS.
*
*ARGUMENTS
*	NONE
*
*STARLINK PARAMETERS
*	ILEVEL
*		INTERACTION LEVEL: CONTROLS PRINTING OF RESULTS
*	INPUTA
*		INPUT LIST OF POSITIONS
*	INPUTB
*		SECOND INPUT LIST OF POSITIONS
*	NOSPACE/ERROR/
*		ACCESSED IF DYNAMIC STORAGE SPACE IS NOT AVAILABLE
*	FITTYPE
*		CONTROLS NUMBER OF DEGREES OF FREEDOM IN FIT
*	NSIGMA
*		NUMBER OF STANDARD DEVIATIONS AT WHICH ABERRANT POINTS
*		ARE REJECTED
*	MXREJECT
*		MAX NUMBER OF REJECTION ITERATIONS
*	NOMATCH/ERROR/
*		ACCESSED IF INPUT LISTS HAVE NO POSITIONS WITH
*		MATCHING IDENTIFIERS
*	TRCOEFFS
*		OUTPUT PARAMETER, GIVES 6 COEFFICIENTS DEFINING THE
*		TRANSFORMATION
*
*CALLS
*	THIS PACKAGE:
*		GETPAR,GTXYLR,FITLST,TRCOUT
*	STARLINK:
*		GETDYN,WRERR,FRDATA
*
*NOTES
*	USES VAX %VAL FACILITY
*
*WRITTEN BY
*	R.F. WARREN-SMITH
*-----------------------------------------------------------------------
C
C
      REAL C(6)
C
C OBTAIN INTERACTION LEVEL
C
      ILEVEL=2
      CALL GETPAR('ILEVEL','INTEGER',1,1.0,3.0,.TRUE.,ILEVEL,RVAL,IERR)
C
C OBTAIN FIRST INPUT DATA FRAME 'A'
C
      CALL GTXYLR('INPUTA',.FALSE.,NITEMA,LLENA,IPINA,IERRA)
      IF(IERRA.EQ.0) THEN
C
C OBTAINED SUCCESSFULLY... GET SECOND FRAME 'B'
C
	CALL GTXYLR('INPUTB',.FALSE.,NITEMB,LLENB,IPINB,IERRB)
	IF(IERRB.EQ.0) THEN
C
C SECOND FRAME OK... GET WORKSPACE
C
	  CALL GETDYN('IDA',104,5*LLENA,IPIDA,ISTIDA)
	  CALL GETDYN('IDB',104,5*LLENB,IPIDB,ISTIDB)
	  CALL GETDYN('XA',204,LLENA,IPXA,ISTXA)
	  CALL GETDYN('XB',204,LLENB,IPXB,ISTXB)
	  CALL GETDYN('YA',204,LLENA,IPYA,ISTYA)
	  CALL GETDYN('YB',204,LLENB,IPYB,ISTYB)
	  CALL GETDYN('VALID',104,MIN(LLENA,LLENB),IPVAL,ISTVAL)
C
C IF WORKSPACE WAS NOT AVAILABLE, GIVE MESSAGE AND ABORT
C
	  IF((ISTIDA.NE.0).OR.(ISTIDB.NE.0).OR.(ISTXA.NE.0).OR.
     +    (ISTXB.NE.0).OR.(ISTYA.NE.0).OR.(ISTYB.NE.0).OR.
     +    (ISTVAL.NE.0)) THEN
	    CALL WRERR('NOSPACE')
	    GO TO 99
	  ENDIF
C
C OBTAIN TYPE OF FIT (IFIT), NO. OF SIGMA REJECTION THRESHOLD (GAMMA)
C AND MAX NO. OF REJECTED POINTS (MAXIT)
C
	  IFIT=4
	  CALL GETPAR('FITTYPE','INTEGER',1,1.0,4.0,.TRUE.,IFIT,RVAL,
     +    IERR)
	  GAMMA=1.0E10
	  CALL GETPAR('NSIGMA','REAL',1,0.0,1.0E10,.TRUE.,IVAL,GAMMA,
     +    IERR)
          MAXIT=MIN(LLENA,LLENB)
	  CALL GETPAR('MXREJECT','INTEGER',1,0.0,1.0E7,.TRUE.,MAXIT,
     +    RVAL,IERR)
C
C CALL FITLST TO PERFORM THE FITTING AND DISPLAY THE RESULTS
C
	  CALL FITLST(%VAL(IPINA),NITEMA,LLENA,%VAL(IPINB),NITEMB,LLENB,
     +    MAXIT,GAMMA,IFIT,ILEVEL,C,%VAL(IPIDA),%VAL(IPXA),%VAL(IPYA),
     +    %VAL(IPIDB),%VAL(IPXB),%VAL(IPYB),%VAL(IPVAL),IERRF)
C
C IF NO MATCHES ARE FOUND BETWEEN THE TWO SETS OF POSITIONS, GIVE
C MESSAGE AND ABORT
C
	  IF(IERRF.EQ.1) THEN
	    CALL WRERR('NOMATCH')
	    GO TO 99
	  ENDIF
C
C WRITE TRANSFORMATION COEFFICIENTS TO ENVIRONMENT
C
	  CALL TRCOUT('TRCOEFFS',C,6,ISTAT)
	ENDIF
      ENDIF
C
C FREE DATA AREAS AND RETURN
C
   99 CALL FRDATA(' ',ISTAT)
      RETURN
      END
