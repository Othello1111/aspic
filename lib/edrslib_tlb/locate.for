      SUBROUTINE LOCATE(X0,Y0,IMAGE,NPIX,NLINES,INVAL,
     +                  ISIZE,ISIGN,SHFTMX,MAXIT,TOLL,X,Y,IERR)
*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
*PURPOSE
*	TO LOCATE THE CENTROIDS OF STAR LIKE IMAGE FEATURES
*
*METHOD
*	FORM MARGINAL PROFILES WITHIN A SEARCH SQUARE. SUBTRACT A
*	BACKGROUND ESTIMATE FROM EACH PROFILE AND FIND THE PROFILE
*	CENTROIDS. REPEAT FOR A SET NUMBER OF ITERATIONS , OR UNTIL
*	THE REQUIRED ACCURACY IS REACHED.
*
*ARGUMENTS
*	X0,Y0 (IN)
*	REAL
*		THE INITIAL ESTIMATE OF THE FEATURE POSITION
*	IMAGE (IN)
*	INTEGER*2(NPIX,NLINES)
*		THE IMAGE
*	NPIX,NLINES (IN)
*	INTEGER
*		THE DIMENSIONS OF IMAGE
*	INVAL (IN)
*	INTEGER
*		INVALID PIXEL FLAG FOR IMAGE
*	ISIZE (IN)
*	INTEGER
*		SIZE OF THE SEARCH SQUARE SIDE
*	ISIGN (IN)
*	INTEGER
*		POSITIVE IF THE IMAGE FEATURES ARE POSITIVE, NEGATIVE
*		IF THEY ARE NEGATIVE
*	SHFTMX (IN)
*	REAL
*		MAX SHIFT ALLOWED FROM INITIAL POSITION X0,Y0
*	MAXIT (IN)
*	INTEGER
*		NUMBER OF CENTROIDING ITERATIONS
*	TOLL (IN)
*	REAL
*		ACCURACY REQUIRED IN THE CENTROID POSITION. ITERATIONS
*		STOP WHEN THIS ACCURACY HAS BEEN MET
*	X,Y (OUT)
*	REAL
*		CENTROID POSITION FOUND. IF IERR IS NOT ZERO, X AND Y
*		RETURN THE VALUES OF X0,Y0
*	IERR (OUT)
*	INTEGER
*		ERROR FLAG, 0:SUCCESS
*			    1:NO DATA IN SEARCH AREA
*			    2:SHFTMX EXCEEDED
*
*CALLS
*	THIS PACKAGE:
*		NTHMIN
*
*NOTES
*	USES INTEGER*2 ARRAYS
*
*WRITTEN BY
*	R.F. WARREN-SMITH
*-----------------------------------------------------------------------
C
C
      INTEGER*2 IMAGE(NPIX,NLINES)
C
C SET MAXIMUM SIZE OF SEARCH AREA
C
      PARAMETER (MAXSIZ=51)
      REAL XAV(MAXSIZ),YAV(MAXSIZ),STAK(MAXSIZ/4+2)
      INTEGER NXAV(MAXSIZ),NYAV(MAXSIZ)
C
C SET SQUARE CENTRE TO STARTING POSITION AND CHECK ARGUMENT VALIDITY
C
      X=X0
      Y=Y0
      IERR=0
      IF(NPIX.LT.1) THEN
        IERR=3
      ELSE IF(NLINES.LT.1) THEN
	IERR=4
      ELSE
C
C RESTRICT SEARCH SQUARE SIZE TO LIE FROM 3 TO MAXSIZ
C
	NSAMP=MIN(MAX(3,ISIZE),MAXSIZ)
	IHALF=NSAMP/2
C
C MAKE NUMBER OF ITERATIONS AT LEAST 1
C
	NITER=MAX(1,MAXIT)
C
C START COUNTING ITERATIONS
C -------------------------
C
	ITER=0
   63   ITER=ITER+1
C
C FIND STARTING EDGE OF SEARCH SQUARE
C
	ISTART=NINT(MIN(MAX(-1.0E6,X),1.0E6))-(IHALF+1)
	JSTART=NINT(MIN(MAX(-1.0E6,Y),1.0E6))-(IHALF+1)
C
C REMEMBER STARTING POSITION THIS ITERATION
C
	XLAST=X
	YLAST=Y
C
C INITIALLISE ARRAYS FOR FORMING MARGINAL PROFILES
C
        DO 10 NBIN=1,NSAMP
	  XAV(NBIN)=0.0
	  YAV(NBIN)=0.0
	  NXAV(NBIN)=0
	  NYAV(NBIN)=0
   10   CONTINUE
C
C SCAN SEARCH AREA, FORMING X AND Y PROFILES FROM ALL VALID PIXELS
C
	DO 30 J=1,NSAMP
	  JPOSN=JSTART+J
	  IF((JPOSN.GE.1).AND.(JPOSN.LE.NLINES)) THEN
	    DO 20 I=1,NSAMP
	      IPOSN=ISTART+I
	      IF((IPOSN.GE.1).AND.(IPOSN.LE.NPIX)) THEN
		IF(IMAGE(IPOSN,JPOSN).NE.INVAL) THEN
		  XAV(I)=XAV(I)+IMAGE(IPOSN,JPOSN)
		  YAV(J)=YAV(J)+IMAGE(IPOSN,JPOSN)
		  NXAV(I)=NXAV(I)+1
		  NYAV(J)=NYAV(J)+1
		ENDIF
	      ENDIF
   20       CONTINUE
          ENDIF
   30   CONTINUE
C
C EVALUATE THOSE X PROFILE BINS WHICH CONTAIN AT LEAST 1 VALID PIXEL,
C INVERT THE RESULTS IF ISIGN.LT.0
C
        DO 80 NBIN=1,NSAMP
	  IF(NXAV(NBIN).EQ.0) THEN
	    XAV(NBIN)=1.0E10
	  ELSE
	    XAV(NBIN)=XAV(NBIN)/NXAV(NBIN)
	    IF(ISIGN.LT.0) THEN
	      XAV(NBIN)=-XAV(NBIN)
	    ENDIF
	  ENDIF
C
C REPEAT FOR THE Y PROFILE
C
	  IF(NYAV(NBIN).EQ.0) THEN
	    YAV(NBIN)=1.0E10
	  ELSE
	    YAV(NBIN)=YAV(NBIN)/NYAV(NBIN)
	    IF(ISIGN.LT.0) THEN
	      YAV(NBIN)=-YAV(NBIN)
	    ENDIF
	  ENDIF
   80   CONTINUE
C
C CALL NTHMIN TO FIND THE LOWER QUARTILE POINT IN EACH PROFILE AS A
C BACKGROUND ESTIMATE
C
	NTH=MAX(NSAMP/4,2)
	CALL NTHMIN(XAV,NSAMP,NTH,STAK,IERR)
	ZLEVX=STAK(1)
	CALL NTHMIN(YAV,NSAMP,NTH,STAK,IERR)
        ZLEVY=STAK(1)
C
C INITIALLISE SUMS FOR FORMING CENTROIDS
C
	XNUMER=0.0
	XDENOM=0.0
	YNUMER=0.0
	YDENOM=0.0
	XPOSN=ISTART
	YPOSN=JSTART
C
C SCAN THE PROFILES, USING ALL DATA ABOVE THE BACKGROUND TO FORM
C SUMS FOR THE CENTROIDS
C
	DO 110 NBIN=1,NSAMP
	  XPOSN=XPOSN+1.0
	  YPOSN=YPOSN+1.0
	  IF(NXAV(NBIN).NE.0) THEN
	    DATA=MAX(XAV(NBIN)-ZLEVX,0.0)
	    XNUMER=XNUMER+XPOSN*DATA
	    XDENOM=XDENOM+DATA
	  ENDIF
	  IF(NYAV(NBIN).NE.0) THEN
	    DATA=MAX(YAV(NBIN)-ZLEVY,0.0)
	    YNUMER=YNUMER+YPOSN*DATA
	    YDENOM=YDENOM+DATA
	  ENDIF
  110   CONTINUE
C
C IF EITHER PROFILE CONTAINED NO DATA, ABORT WITH IERR=2
C
	IF((XDENOM.LT.1.0E-10).OR.(YDENOM.LT.1.0E-10)) THEN
	  IERR=2
	  X=X0
	  Y=Y0
	ELSE
C
C OTHERWISE FORM THE X AND Y CENTROIDS AND FIND THE SHIFT FROM
C THE INITIAL POSITION
C
	  X=XNUMER/XDENOM
	  Y=YNUMER/YDENOM
	  SHIFT=SQRT((X-X0)**2+(Y-Y0)**2)
C
C IF MAX SHIFT IS EXCEEDED, ABORT WITH IERR=1
C
	  IF(SHIFT.GT.SHFTMX) THEN
	    IERR=1
	    X=X0
	    Y=Y0
	  ELSE
C
C OTHERWISE FIND THE POSITION SHIFT THIS ITERATION
C
	    PSNCNG=SQRT((X-XLAST)**2+(Y-YLAST)**2)
C
C IF REQUIRED ACCURACY HAS BEEN MET, EXIT. OTHERWISE, IF ITERATIONS
C REMAIN, GO ROUND ITERATION LOOP AGAIN
C
	    IF(PSNCNG.GT.TOLL) THEN
	      IF(ITER.LT.NITER) GO TO 63
	    ENDIF
	  ENDIF
	ENDIF
      ENDIF
      RETURN
      END
