      SUBROUTINE ARITH
*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
*PURPOSE
*	TO PERFORM 4 FUNCTION ARITHMETIC ON IMAGES USING CONSTANTS
*
*METHOD
*	OBTAIN IMAGE, FUNCTION REQUIRED AND CONSTANT. MODIFY IMAGE
*	SCALE AND ZERO LEVEL ACCORDINGLY.
*
*ARGUMENTS
*	NONE
*
*STARLINK PARAMETERS
*	IMAGE
*		INPUT/OUTPUT IMAGE FRAME
*	FUNCTION
*		REQUIRED ARITHMETIC FUNCTION
*	CONSTANT
*		CONSTANT TO BE USED IN ARITHMETIC
*
*CALLS
*	THIS PACKAGE:
*		GETCMD,GTDSCR,GETPAR,GT2DIR,PTDSCR.
*	STARLINK:
*		FRDATA
*
*WRITTEN BY
*	R.F. WARREN-SMITH
*-----------------------------------------------------------------------
C
C
      CHARACTER CVAL*1,FUN*8
C
C OBTAIN IMAGE FRAME
C
      CALL GT2DIR('IMAGE',102,.FALSE.,NPIX,NLINES,IPIM,IERRIM)
      IF(IERRIM.EQ.0) THEN
C
C IMAGE OBTAINED SUCCESSFULLY... OBTAIN SCALE FACTOR AND ZERO LEVEL
C FROM DESCRIPTOR
C
	SCALE=1.0
	ZERO=0.0
	CALL GTDSCR('IMAGE','BSCALE','REAL',IVAL,SCALE,CVAL,IERR)
	CALL GTDSCR('IMAGE','BZERO','REAL',IVAL,ZERO,CVAL,IERR)
C
C OBTAIN REQUIRED ARITHMETIC FUNCTION FROM ENVIRONMENT
C
	IFUN=1
	CALL GETCMD('FUNCTION','ADD,SUBTRACT,MULTIPLY,DIVIDE,+,-,*,/.',
     +	1,IFUN,FUN,LFUN,IERR)
C
C TREAT EACH FUNCTION SEPARATELY: OBTAINING CONSTANT FROM ENVIRONMENT
C AND MODIFYING THE IMAGE SCALE AND ZERO ACCORDINGLY
C
	IF((FUN.EQ.'ADD').OR.(FUN.EQ.'+')) THEN
	  CONST=0.0
	  CALL GETPAR('CONSTANT','REAL',1,-1.0E20,1.0E20,.TRUE.,IVAL,
     +	  CONST,IERR)
	  ZERO=ZERO+CONST
	ELSE IF((FUN.EQ.'SUBTRACT').OR.(FUN.EQ.'-')) THEN
	  CONST=0.0
	  CALL GETPAR('CONSTANT','REAL',1,-1.0E20,1.0E20,.TRUE.,IVAL,
     +    CONST,IERR)
	  ZERO=ZERO-CONST
	ELSE IF ((FUN.EQ.'MULTIPLY').OR.(FUN.EQ.'*')) THEN
	  CONST=1.0
	  CALL GETPAR('CONSTANT','REAL',1,-1.0E20,1.0E20,.TRUE.,IVAL,
     +	  CONST,IERR)
	  SCALE=SCALE*CONST
	  ZERO=ZERO*CONST
	ELSE IF((FUN.EQ.'DIVIDE').OR.(FUN.EQ.'/')) THEN
	  CONST=1.0
	  CALL GETPAR('CONSTANT','REAL',1,1.0E-20,-1.0E-20,.TRUE.,IVAL,
     +    CONST,IERR)
	  SCALE=SCALE/CONST
	  ZERO=ZERO/CONST
	ENDIF
C
C PUT MODIFIED SCALE AND ZERO BACK INTO DESCRIPTOR
C
	CALL PTDSCR('IMAGE','BSCALE','REAL',IVAL,SCALE,CVAL,IERR)
	CALL PTDSCR('IMAGE','BZERO','REAL',IVAL,ZERO,CVAL,IERR)
      ENDIF
C
C FREE IMAGE FRAME AND RETURN
C
      CALL FRDATA(' ',ISTAT)
      RETURN
      END
