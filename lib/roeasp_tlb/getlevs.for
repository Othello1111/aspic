      SUBROUTINE GETLEVS(INXEXT,INYEXT,WEDGE,MAXLEVS,LEVS,NLEVS)
C+
C    GETLEVS
C
C	part of calibration suite
C	called from GETLEV
C	given image array WEDGE of stepwedges, interactively get LEVS the levels
C	array of observed values and true intensities and NLEVS the actual
C	number of levels in LEVS, using an ARGS on which stepwedge has previously been plotted.
C
C    Given (arguments)
C	WEDGE(INXEXT,INYEXT)	RA	image array of stepwedges, assumed displayed on ARGS
C	MAXLEVS			I	default maximum number of entries in LEVS
C
C    Given (.kb)
C	LEVS(*,2)		R	true intensities, typed in
C	NCX,NCY			I	new cursor size
C
C    Returned (arguments)
C	LEVS(MAXLEVS,2)		R	 array of observed values,true intensities
C					generated by user interactively
C	NLEVS			I	actual number of entries in LEVS generated
C
C	User first chooses size of rectangular cursor wanted, then for each level
C	user positions it over the desired stepwedge on ARGS and hits the left button
C	(except for the last level when right hand button is hit), upon which
C	GETLEVS calculates mean of that rectangle (observed value)
C	and prompts user for true intensity which is then typed in.
C	Process ends when right button is hit.
C
C	J.A COOKE/UOE/1981
C	D. Tudhope/ROE/Oct 1982
C-

      INTEGER INXEXT,INYEXT,MAXLEVS,NLEVS
      REAL WEDGE(INXEXT,INYEXT),LEVS(MAXLEVS,2)
      INTEGER STAT,CSIZ(2),NCX,NCY,XPOS,YPOS,BUTTON
      REAL XP,YP,XP1,YP1
      CHARACTER MESSG*80,RPLY*20
C*  pixel coords for size of rectangle and bottom left hand corner
      INTEGER CSIZP(2),PX0,PY0
      INTEGER IDMAX,ISTATUS


C*  first make sure something on args
      CALL SRINIT(0,.FALSE.,ISTATUS)
      CALL ARGS_NUMIM(IDMAX)
      IF (IDMAX.LE.0) THEN
        CALL WRERR('NOWEDGE')
      ELSE

C     DEFAULT CURSOR SIZE
C
      CSIZ(1)=20
      CSIZ(2)=20
C
C     SET START CURSOR POSITION
C
      XPOS=255
      YPOS=255
      XP=255.
      YP=255.
C
C     WRITE INSTRUCTIONS
C
      CALL WRUSER ('*********     GETLEV      *****',STAT)
      CALL WRUSER('Use cursor to indicate levels of calibration',STAT)
      CALL WRUSER('in turn.  You will be prompted for the intensity',
     -  STAT)
      CALL WRUSER('value for each level.',STAT)
      CALL WRUSER(' But first set rectangular cursor size',STAT)
      CALL WRUSER('*************************************',STAT)
C
C     PLOT DEFAULT CURSOR
C
      RPLY='N'
      DO WHILE (RPLY.NE.'Y')
        CALL ARGSET(0)
        CALL ARGS_OVGEN('W')
        CALL ARGS_OVWRT(8)
        CALL ARGS_OVCOL(8,'W')
        XP1=XP+FLOAT(CSIZ(1))
        YP1=YP+FLOAT(CSIZ(2))
        CALL BOX(XP,XP1,YP,YP1)
        CALL DEVEND
C
C     OK ?  IF NOT GET NEW SIZE
C
        WRITE(MESSG,20)CSIZ(1),CSIZ(2)
 20   FORMAT('cursor size ',I2,' (X) and ',I2,' (Y);')
        CALL WRUSER(MESSG,STAT)
        CALL YESNO('is this ok ? (Y or N)','Y',RPLY,STAT)
        CALL ARGS_OVCLR(8)
        CALL ARGS_OVGEN('0')
        CALL ARGS_ALLWRT
        IF(RPLY.EQ.'N')THEN
          CALL READI('NCX','give new cursor size, X (range 1-99)',
     -    CSIZ(1),1,99,NCX,STAT)
          CALL READI('NCY','give new cursor size, Y (range 1-99)',
     -    CSIZ(2),1,99,NCY,STAT)
          CSIZ(1)=NCX
          CSIZ(2)=NCY
        ENDIF
      ENDDO
C
C     CURSOR SIZE OK:  PROCEED, INTERACT TO GET LEVELS
C*  first work out cursor size in pixel (not args) units for latest image plotted on args
        CALL ARGS_ATOP(IDMAX,0,0,PX0,PY0,ISTATUS)
        CALL ARGS_ATOP(IDMAX,CSIZ(1),CSIZ(2),CSIZP(1),CSIZP(2),ISTATUS)
        CSIZP(1)=CSIZP(1)-PX0
        CSIZP(2)=CSIZP(2)-PY0
C*  then can deal with ARECUR in pixel units as ought to
      CALL WRUSER('*******************************',STAT)
      CALL WRUSER('Indicate calibration levels with trackerball.',STAT)
      CALL WRUSER('Position cursor over next stepwedge',STAT)
      CALL WRUSER('Press left hand button and then',STAT)
      CALL WRUSER('you will be prompted for true intensity',STAT)
      CALL WRUSER('for that level.',STAT)
      CALL WRUSER('Except for very last level, when you must hit',STAT)
      CALL WRUSER('right hand button.',STAT)
      CALL WRUSER('Observed values obtained from mean of box',STAT)
      CALL WRUSER('and you get the chance to repeat any level',STAT)
      CALL WRUSER('you do not like.',STAT)
      CALL WRUSER('*******************************',STAT)
C
      NLEVS=1
      BUTTON=1
      DO WHILE ((NLEVS.LE.MAXLEVS) .AND. (BUTTON.NE.4))
       RPLY='N'
       DO WHILE (RPLY.NE.'Y')
        WRITE(MESSG,50)NLEVS
 50     FORMAT('indicate level ',I2)
        CALL WRUSER(MESSG,STAT)
        CALL ARECUR('W',XPOS,YPOS,CSIZP(1),CSIZP(2),XPOS,YPOS,BUTTON)
        CALL LMEAN(XPOS,YPOS,CSIZP,LEVS(NLEVS,1),WEDGE,INXEXT,INYEXT)
        CALL READR('INTEN','give true intensity',0.,0.,1.E20,
     :             LEVS(NLEVS,2),STAT)
        WRITE(MESSG,60) NLEVS,LEVS(NLEVS,1),LEVS(NLEVS,2)
 60     FORMAT(' level ',I2,' mean value = ',E10.4,
     -    '  intensity = ',E10.4)
        CALL WRUSER(MESSG,STAT)
        CALL YESNO('value and intensity OK ? (Y or N)','Y',RPLY,STAT)
       ENDDO
       NLEVS=NLEVS+1
      ENDDO
      IF (NLEVS.GT.MAXLEVS)
     :    CALL WRUSER ('maximum number of levels reached',STAT)
      NLEVS=NLEVS-1
      ENDIF
      RETURN
      END
