      SUBROUTINE CRB_STARMA
*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
*PURPOSE
*	TO ESTIMATE STELLAR MAGNITUDES BY FITTING A STANDARD FUNCTION
*	TO STAR IMAGES
*
*METHOD
*	OBTAIN THE INPUT IMAGE AND EXTRACT THE REQUIRED DESCRIPTOR ITEMS
*	OBTAIN THE LIST OF APPROXIMATE STAR POSITIONS AND OBTAIN
*	WORKSPACE. COPY THE X,Y POSITIONS AND IDENTIFIERS TO THE
*	WORKSPACE. OBTAIN THE PARAMETERS GOVERNING THE FIT. CALL PHTLST
*	TO PERFORM THE PHOTOMETRIC FITTING. OBTAIN THE OUTPUT LIST
*	AND ADD THE RESULTS TO IT. UPDATE THE OUTPUT DESCRIPTOR.
*
*ARGUMENTS
*	NONE
*
*STARLINK PARAMETERS
*	ILEVEL
*		INTERACTION LEVEL: CONTROLS PRINTING OF RESULTS
*	IMAGE
*		THE INPUT IMAGE
*	INPUT
*		THE INPUT LIST OF POSITIONS
*	NOSPACE/ERROR/
*		ACCESSED IF WORKSPACE CANNOT BE OBTAINED
*	SEEING
*		THE FWHM SEEING
*	AXISR
*		THE AXIS RATIO OF ELLIPTICAL STAR IMAGES
*	THETA
*		THE INCLINATION OF THE MAJOR AXIS TO THE X DIRECTION
*		IN DEGREES (X THROUGH Y POSITIVE)
*	GAMMA
*		THE RADIAL EXPONENT IN THE STAR PROFILE FUNCTION
*	RANGE
*		THE RADIUS IN UNITS OF THE STAR 'SIGMA' TO WHICH THE
*		FIT EXTENDS
*	ZEROMAG
*		A ZERO LEVEL TO BE ADDED TO ALL MAGNITUDES CALCULATED
*	NOLIST/ERROR/
*		ACCESSED IF NO RESULTS ARE OBTAINED
*	OUTPUT
*		OUTPUT LIST OF ACCURATE POSITIONS AND MAGNITUDES
*	TITLE
*		A TITLE TO REPLACE THE INPUT TITLE IN THE OUTPUT LIST
*
*CALLS
*	THIS PACKAGE:
*		GETPAR,GT2DIR,GTDSCR,GTXYLR,EXTLST,PHTLST,GTXYLW,ADDLST,
*		PTDSCR,NEWSCL
*	STARLINK:
*		GETDYN,WRERR,CYDSCR,RDKEYC,FRDATA
*
*NOTES
*	USES VAX %VAL FACILITY
*
*WRITTEN BY
*	R.F. WARREN-SMITH
*-----------------------------------------------------------------------
C
C
      CHARACTER CVAL*1,TITLE(1)*30
C
C OBTAIN INTERACTION LEVEL
C
      ILEVEL=2
      CALL GETPAR('ILEVEL','INTEGER',1,1.0,3.0,.TRUE.,ILEVEL,RVAL,
     +IERR)
C
C OBTAIN INPUT IMAGE FRAME
C
      CALL GT2DIR('IMAGE',102,.FALSE.,NPIX,NLINES,IPIMG,IERRIM)
      IF(IERRIM.EQ.0) THEN
C
C INPUT IMAGE OBTAINED SUCCESSFULLY...EXTRACT REQUIRED DESCRIPTOR
C ITEMS
C
	ZERO=0.0
        SCALE=1.0
        INVAL=-100000
	CALL GTDSCR('IMAGE','BZERO','REAL',IVAL,ZERO,CVAL,IERR)
	CALL GTDSCR('IMAGE','BSCALE','REAL',IVAL,SCALE,CVAL,IERR)
	CALL GTDSCR('IMAGE','INVAL','INTEGER',INVAL,RVAL,CVAL,IERR)
C
C IF THE IMAGE SCALE FACTOR IS NEGATIVE, THE IMAGE DATA IS STORED UPSIDE
C DOWN... OBTAIN ANOTHER IMAGE AND CONVERT TO A POSITIVE SCALE FACTOR
C
	IF(SCALE.LT.0.0) THEN
	  CALL GETDYN('WORK',102,NPIX*NLINES,IPWRK,ISTWRK)
C
C IF NEW IMAGE SPACE IS NOT AVAILABLE, GIVE MESSAGE AND ABORT
C
	  IF(ISTWRK.NE.0) THEN
	    CALL WRERR('NOSPACE')
	    GO TO 99
	  ENDIF
C
C CALL NEWSCL TO CONVERT THE SCALE FACTOR
C
	  CALL NEWSCL(%VAL(IPIMG),NPIX,NLINES,INVAL,SCALE,ZERO,INVAL,
     +	  -SCALE,ZERO,%VAL(IPWRK))
C
C SUBSEQUENTLY USE THE NEW IMAGE AND SCALE FACTOR
C
	  SCALE=-SCALE
	  IPIMG=IPWRK
	ENDIF
C
C OBTAIN INPUT LIST OF POSITIONS
C
	CALL GTXYLR('INPUT',.FALSE.,NITEM,LSTLEN,IPIN,IERRXY)
	IF(IERRXY.EQ.0) THEN
C
C INPUT LIST OBTAINED SUCCESSFULLY...EXTRACT TITLE
C
	  TITLE(1)=' '
	  CALL GTDSCR('INPUT','TITLE','CHARACTER',IVAL,RVAL,TITLE(1),
     +	  IERR)
C
C OBTAIN WORKSPACE FOR INPUT AND OUTPUT LISTS OF POSITIONS AND
C MAGNITUDES
C
	  CALL GETDYN('IDA',104,5*LSTLEN,IPIDA,ISTIDA)
	  CALL GETDYN('IDB',104,5*LSTLEN,IPIDB,ISTIDB)
	  CALL GETDYN('XA',104,LSTLEN,IPXA,ISTXA)
	  CALL GETDYN('YA',104,LSTLEN,IPYA,ISTYA)
	  CALL GETDYN('XB',104,LSTLEN,IPXB,ISTXB)
	  CALL GETDYN('YB',104,LSTLEN,IPYB,ISTYB)
	  CALL GETDYN('MAG',104,LSTLEN,IPMAG,ISTMAG)
C
C IF SPACE WAS NOT AVAILABLE, GIVE MESSAGE AND ABORT
C
	  IF((ISTIDA.NE.0).OR.(ISTIDB.NE.0).OR.(ISTXA.NE.0).OR.
     +    (ISTYA.NE.0).OR.(ISTXB.NE.0).OR.(ISTYB.NE.0).OR.
     +    (ISTMAG.NE.0)) THEN
	    CALL WRERR('NOSPACE')
	    GO TO 99
	  ENDIF
C
C COPY INPUT IDENTIFIERS AND X,Y POSITIONS TO WORKSPACE
C
	  CALL EXTLST(%VAL(IPIN),NITEM,LSTLEN,%VAL(IPIDA),1,20)
	  CALL EXTLST(%VAL(IPIN),NITEM,LSTLEN,%VAL(IPXA),21,24)
	  CALL EXTLST(%VAL(IPIN),NITEM,LSTLEN,%VAL(IPYA),25,28)
C
C OBTAIN PARAMETERS DESCRIBING THE STAR IMAGE:
C
	  SEEING=5.0
	  CALL GETPAR('SEEING','REAL',1,1.0,50.0,.TRUE.,IVAL,
     +	  SEEING,IERR)
	  E=1.0
	  CALL GETPAR('AXISR','REAL',1,1.0,2.0,.TRUE.,IVAL,E,IERR)
	  THETA=0.0
	  CALL GETPAR('THETA','REAL',1,-180.0,+180.0,.TRUE.,IVAL,
     +	  THETA,IERR)
C
C CONVERT TO RADIANS
C
          THETA=THETA*0.0174533
	  GAMMA=2.0
	  CALL GETPAR('GAMMA','REAL',1,1.0,5.0,.TRUE.,IVAL,GAMMA,IERR)
	  RANGE=3.5
	  CALL GETPAR('RANGE','REAL',1,1.0,5.0,.TRUE.,IVAL,RANGE,IERR)
	  ZERMAG=0.0
	  CALL GETPAR('ZEROMAG','REAL',1,-1.0E20,1.0E20,.TRUE.,IVAL,
     +	  ZERMAG,IERR)
C
C CALCULATE THE 'STANDARD DEVIATION' FROM THE FWHM SEEING AND
C THE SIZE OF BOX REQUIRED TO CONTAIN A STAR IMAGE
C
	  SIGMA=(0.5*SEEING)/(1.38629**(1.0/GAMMA))
	  ISIZE=NINT(SEEING*E*3.0)
C
C CALL PHTLST TO EVALUATE THE MAGNITUDES OF EACH STAR IN THE LIST
C AND TO DISPLAY THE RESULTS
C
	  CALL PHTLST(%VAL(IPXA),%VAL(IPYA),%VAL(IPIDA),LSTLEN,
     +	  %VAL(IPIMG),NPIX,NLINES,INVAL,SCALE,ZERO,ISIZE,SIGMA,
     +	  E,THETA,GAMMA,RANGE,ZERMAG,ILEVEL,%VAL(IPXB),%VAL(IPYB),
     +	  %VAL(IPIDB),%VAL(IPMAG),NOUT)
C
C IF THERE ARE NO RESULTS IN THE OUTPUT LISTS, GIVE ERROR MESSAGE
C AND ABORT
C
	  IF(NOUT.LE.0) THEN
	    CALL WRERR('NOLIST')
	    GO TO 99
	  ENDIF
C
C OBTAIN THE OUTPUT FRAME
C
	  CALL GTXYLW('OUTPUT',.FALSE.,8,NOUT,IPOUT,IERRB)
	  IF(IERRB.EQ.0) THEN
C
C OUTPUT FRAME OBTAINED SUCCESSFULLY...COPY RESULTS INTO IT
C
	    CALL ADDLST(%VAL(IPOUT),8,NOUT,%VAL(IPIDB),1,20)
	    CALL ADDLST(%VAL(IPOUT),8,NOUT,%VAL(IPXB),21,24)
	    CALL ADDLST(%VAL(IPOUT),8,NOUT,%VAL(IPYB),25,28)
	    CALL ADDLST(%VAL(IPOUT),8,NOUT,%VAL(IPMAG),29,32)
C
C COPY DESCRIPTOR FROM INPUT TO OUTPUT AND ADD NEW ITEMS
C
	    CALL CYDSCR('INPUT','OUTPUT',ISTAT)
	    CALL PTDSCR('OUTPUT','NITEM','INTEGER',8,RVAL,CVAL,IERR)
	    CALL PTDSCR('OUTPUT','LSTLEN','INTEGER',NOUT,RVAL,CVAL,
     +	    IERR)
	    CALL RDKEYC('TITLE',.TRUE.,1,TITLE,NVAL,IERR)
	    CALL PTDSCR('OUTPUT','TITLE','CHARACTER',IVAL,RVAL,
     +	    TITLE(1),IERR)
	  ENDIF
	ENDIF
      ENDIF
C
C FREE DATA AREAS AND RETURN
C
   99 CALL FRDATA(' ',ISTAT)
	CALL CNPAR('INPUT',ISTAT)
	CALL CNPAR('SEEING',ISTAT)
	CALL CNPAR('OUTPUT',ISTAT)
	CALL CNPAR('TITLE',ISTAT)
	CALL CNPAR('AXISR',ISTAT)
	CALL CNPAR('THETA',ISTAT)
	CALL CNPAR('GAMMA',ISTAT)
      RETURN
      END
