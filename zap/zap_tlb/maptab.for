	SUBROUTINE MAPTAB(LUT,OUTLUT,STEP)
C
C 	SUBROUTINE MAPTAB TAKES A LOOKUP TABLE (WHICH IS KNOWN TO
C	CONTAIN SEVERAL EQUALLY SPACED COLOURS) AND USES THESE
C	COLOURS TO SET UP THE ARGS LOOKUP TABLE (SEE NOTES TO THE
C	MAIN PROGRAM).
C
	IMPLICIT INTEGER (A-Z)
	REAL X,Y
	INTEGER LUT(3,0:255),OUTLUT(3,0:255),RGB(3,0:255),GREYLUT(3,0:255)
	CHARACTER COL*2,NCOL*2,DIRN*3
C
C      SET UP THE ARGS CURSOR AND THE BUTTONS
C
        CALL ARGS_CUROP ('1234','0')
        CALL WRUSER('USE THE BUTTONS',ISTAT)
        CALL WRUSER(' NEXT   MOVE   MOVE    STOP',ISTAT)
        CALL WRUSER(' COLOUR LEFT   RIGHT       ',ISTAT)
C
C	GO THROUGH THE INPUT LOOKUP TABLE AND DETERMINE THE
C	DIFFERENT COLOURS IN THE ARRAY RGB
C
	NCOLS=0
	RGB(1,0)=LUT(1,0)
	RGB(2,0)=LUT(2,0)
	RGB(3,0)=LUT(3,0)
	DO I=1,255
		IF (LUT(1,I).NE.LUT(1,I-1).OR.
	1	    LUT(2,I).NE.LUT(2,I-1).OR.
	1	    LUT(3,I).NE.LUT(3,I-1)    ) THEN
			NCOLS=NCOLS+1
			RGB(1,NCOLS)=LUT(1,I)
			RGB(2,NCOLS)=LUT(2,I)
			RGB(3,NCOLS)=LUT(3,I)
		ENDIF
	ENDDO
C
C	SET UP THE GREY LOOKUP TABLE IN GREYLUT
C
	DO I=0,255
		DO J=1,3
			GREYLUT(J,I)=I
		ENDDO
	ENDDO
C
C	INITIALIZE VARIABLES AND ENTER LOOP
C
	ICOLS=0
	IDIR=1
	XLAST=0
	XNEXT=1
        X=0.0
C
C   WRITES A GREY LUT
C
        CALL SRCOLS(0,256,GREYLUT)
C
C   LOOP ON THE BUTTONS
C
   10 CALL ARGS_LRDC(IB,AX,AY)
      GO TO (200,100,400,300),IB
C********    NEXT L   R  STOP
C
C   MOVE THE BOUNDARY TO THE LEFT
C
  100 CONTINUE
      X=X-STEP
      GO TO 450
C
C   INCREMENT THE CURRENT COLUR , OR RESET TO THE FIRST ONE
C
  200 ICOLS=ICOLS+1
      IF (ICOLS.GT.NCOLS) ICOLS=0
      GO TO 10
C
C   FILL THE REST OF THE LUT AND EXIT
C
  300 CALL HANDLE(XNEXT,255.0,RGB,GREYLUT,OUTLUT,ICOLS)
      GO TO 500
C
C   MOVE BOUNDARY TO THE RIGHT
C
  400 X=X+STEP
C
C   UPDATE AND WRITE THE LUT
C
  450 CONTINUE
C
      X=MAX(0.0,MIN(255.0,X))
C
C   HAVING CHECKED THAT THE CURRENT IS IN THE RANGE [0,255]
C
      CALL HANDLE(XNEXT,X,RGB,GREYLUT,OUTLUT,ICOLS)
      GO TO 10
  500 CONTINUE
C
C   STOP THE CURSOR AND RETURN
C
      CALL ARGS_CURCL
      END
