	SUBROUTINE CRB_ATEXT
C
C+
C	PROGRAM ATEXT
C
C	THIS PROGRAM DISPLAYS TEXT ON THE ARGS SCREEN.
C     THE PARAMETERS ARE:
C	   FCOL: THE COLOUR OF THE TEXT  W,R,G,B,Y,M OR C
C	         WHERE:-    W  =  WHITE
C		            R  =  RED
C		            G  =  GREEN
C		            B  =  BLUE
C		            Y  =  YELLOW
C		            M  =  MAGENTA
C		            C  =  CYAN
C
C         SIZE:   THE SIZE OF THE CHARACTERS. VALID RANGE IS 0-31
C                 SIZE 0 DRAWS TEXT APPROX 10 ARGS UNITS HIGH
C                 SIZE 31 DRAWS TEXT APPROX 250 ARGS UNITS HIGH
C
C	  CENTRE   THE POSITION ON THE ARGS WHICH WILL BE THE CENTRE
C		   OF THE TEXT STRING
C
C         DIR:      THE DIRECTION OF THE TEXT (HELP AT RUN TIME)
C
C         TEXT:     THE CHARACTERS TO BE DISPLAYED
C
C         QUIET:    LOGICAL IFF TRUE NO USER PROMPTS GIVEN
C
C
C	D.J.KING      -      17 MARCH 1981
C
C	AMENDED FOR NEW ARGSLIB  -  27 MAY 1981
C
C	AMENDED FOR OVERLAY PLANE  -  30 SEP 1981
C
C-
C
	IMPLICIT INTEGER (A-Z)
	LOGICAL QUIET
	CHARACTER*56 TITLE
	CHARACTER*1 FCOL
C
C	INITIALISE ARGS - STOP IF BAD STATUS
C
	CALL SRINIT(0,.FALSE.,STATUS)
	IF (STATUS.NE.0) THEN
		CALL WRERR('NOARGS')
	ELSE
C
C	INQUIRE COLOUR OF TEXT
C
		FCOL='W'
		CALL RDKEYC('FCOL',.TRUE.,1,FCOL,I,STATUS)
C
C	INQUIRE CHARACTER SIZE - DEFAULT=0
C
		SIZE=0
		CALL RDKEYI('SIZE',.TRUE.,1,SIZE,I,STATUS)
		CHARSIZE=(SIZE+1)*9
C
C	INQUIRE ORIGIN AT WHICH TO START WRITING CHARACTERS
C	DEFAULT IS ABOVE THE CENTRE OF THE LAST IMAGE DISPLAYED
C
		CALL ARGS_RDIM(XC,YC,ISX,ISY,I,I,STATUS)
		YC=YC+(ISY/2)+(CHARSIZE/2)
		IF (XC.GT.(511-(CHARSIZE/2))) XC=511-(CHARSIZE/2)-1
		IF (YC.GT.(511-(CHARSIZE/2))) YC=511-(CHARSIZE/2)-1
		CALL RDKEYI('XC',.TRUE.,1,XC,I,STATUS)
		CALL RDKEYI('YC',.TRUE.,1,YC,I,STATUS)
C
C	ENSURE THAT THE TEXT IS ALWAYS VISIBLE BY ADJUSTING
C	THE VALUES OF COORDINATES OF THE CENTRE OF THE STRING
C
		IF (XC.GT.(511-(CHARSIZE/2))) XC=511-(CHARSIZE/2)-1
		IF (XC.LT.(CHARSIZE/2))       XC=CHARSIZE/2
		IF (YC.GT.(511-(CHARSIZE/2))) YC=511-(CHARSIZE/2)-1
		IF (YC.LT.(CHARSIZE/2))       YC=CHARSIZE/2
C
C	INQUIRE DIRECTION IN WHICH CHARACTERS ARE TO BE WRITTEN
C	DEFAULT DIRECTION = 0
C
		DIR=0
		CALL RDKEYI('DIR',.TRUE.,1,DIR,I,STATUS)
C
C	WORK OUT THE MAXIMUM NUMBER OF CHARACTERS THAT CAN BE TYPED
C	IN BY THE USER THAT WILL FIT ON THE SCREEN WITH THE CURRENT
C	VALUES OF ORIGIN AND SIZE. THEN INFORM THE USER OF THIS NUMBER.
C
		IF ((DIR.EQ.0).OR.(DIR.EQ.2)) THEN
     			NCHARS=(256-ABS(256-XC))*2/CHARSIZE
		ELSE
     			NCHARS=(256-ABS(256-YC))*2/CHARSIZE
		ENDIF
		WRITE(TITLE,'('' DO NOT ENTER MORE THAN '',I3,'' CHARACTERS'')-
     1				') NCHARS
		CALL RDKEYL('QUIET2',.FALSE.,1,QUIET,I,STATUS)
		IF (.NOT.QUIET) CALL WRUSER(TITLE,STATUS)
C
C	SET CHARACTER BUFFER TO ALL SPACES THEN ASK THE USER
C	TO ENTER THE CHARACTERS HE REQUIRES TO WRITE TO THE
C	ARGS MONITOR.
C
		TITLE = ' '
		CALL RDKEYC('TEXT',.TRUE.,1,TITLE,I,STATUS)
C
C	HAVING OBTAINED ALL THE NECESSARY INFORMATION WRITE
C	THIS TO THE ARGS PROCESSOR.
C
		I=NCHARS
		DO WHILE (TITLE(I:I).EQ.' ')
		I=I-1
		END DO
		NCHARS=I
		ODDEVEN=JMOD(NCHARS,2)
		IF ((DIR.EQ.0).OR.(DIR.EQ.2)) THEN
			IF (DIR.EQ.0) THEN
				XS=XC-(NCHARS/2)*CHARSIZE-(CHARSIZE*ODDEVEN)/2
				YS=YC-(CHARSIZE)/2
			ELSE
				XS=XC+(NCHARS/2)*CHARSIZE+(CHARSIZE*ODDEVEN)/2
				YS=YC+(CHARSIZE)/2
			ENDIF
		ELSE
			IF (DIR.EQ.1) THEN
				XS=XC+(CHARSIZE)/2
				YS=YC-(NCHARS/2)*CHARSIZE-(CHARSIZE*ODDEVEN)/2
			ELSE
				XS=XC-(CHARSIZE)/2
				YS=YC+(NCHARS/2)*CHARSIZE+(CHARSIZE*ODDEVEN)/2
			ENDIF
		ENDIF
		CALL ARGS_OVOP(9,FCOL)
		CALL ARGS_S1('XMA',XS)
		CALL ARGS_S1('YMA',YS)
		CALL ARGS_S1('SSB',13)
		CALL ARGS_S1('SSZ',SIZE)
		CALL ARGS_S1('SDD',DIR)
		DO 1 I=1,NCHARS
		CALL ARGS_S1('JSI',ICHAR(TITLE(I:I)))
1		CONTINUE
		CALL ARGS_S1('SSZ',0)
		CALL SRSEND
		CALL ARGS_OVCL(9,.FALSE.)
	ENDIF
	CALL CNPAR('FCOL',ISTAT)
	CALL CNPAR('SIZE',ISTAT)
	CALL CNPAR('XC',ISTAT)
	CALL CNPAR('YC',ISTAT)
	CALL CNPAR('DIR',ISTAT)
	CALL CNPAR('TEXT',ISTAT)
	END
