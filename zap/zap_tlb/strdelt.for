      SUBROUTINE STRDELT(ARRAY,ICOL,IROW,IS,JS,TRIM,LLOG,VLO,VHI,
     1 NS,IXOR,IYOR,ER,NDIMER,NCODE,FILE,CURSOR)
C
C ****************************************************************
C
C     DELETES PIXELS WITHIN A CIRCLE AROUND POINT (IS,JS) AND
C     INTERPOLATES THEM WITH A POLYNOMIAL FITTED TO AN ANNULUS
C     OF SURROUNDING POINTS.
C
C ****************************************************************
C
      INCLUDE 'INTERIM(FMTPAR)'
      PARAMETER NDIM=1000
      REAL ARRAY(ICOL,IROW),ER(NDIMER)
      DOUBLE PRECISION ZZ,D(30),SE(30),RDOE(30),DUMMY
      CHARACTER ANS*1
	DIMENSION XX(NDIM,2),YY(NDIM),ZZ(NDIM)
	LOGICAL TRIM,LLOG,FILE,CURSOR
C
C
      IRAD2=(NS/2)**2
C
C     DEFINE LIMITS OF AREA TO DELETE
C
      I1=MAX(IS-NS/2,1)
      I2=MIN(IS+NS/2,ICOL)
      J1=MAX(JS-NS/2,1)
      J2=MIN(JS+NS/2,IROW)
C
C     TEMPORARILY STORE CURRENT ARRAY CONTENTS
C
      ISIZE=(I2-I1+1)*(J2-J1+1)
	CALL GETDYN('*STAR',FMT_R,ISIZE,IPNT,ISTATUS)
      CALL STRCOPY(ARRAY,IROW,ICOL,%VAL(IPNT),ISIZE,I1,I2,J1,J2)
	XOLD=ARRAY(IS,JS)
C
C     SET UP ARRAYS FOR NEQSOL
C
      FACTOR=2
      IF (NCODE .EQ. 0)FACTOR=1.5
      NWIDE=NS*FACTOR
      NWIDE2=(NWIDE+1)/2
      NWIDE2S=NWIDE2*NWIDE2
      NINC=(NWIDE-1)/30+1
      I11=MAX(IS-NWIDE2,1)
      I22=MIN(IS+NWIDE2,ICOL)
      J11=MAX(JS-NWIDE2,1)
      J22=MIN(JS+NWIDE2,IROW)
C
C     DEFINE NORMALIZING FACTORS SUCH THAT THE COORDS. OF
C     ALL THE POINTS ARE BETWEEN (-1,-1) AND (1,1).
C
      DX=2./(I22-I11)
      DY=2./(J22-J11)
      NPTS=0
      DO 20 J=J11,J22,NINC
      DO 20 I=I11,I22,NINC
C
C     CALC RADIUS, AND REJECT IF TOO CLOSE TO STAR CENTRE
C
      KRAD2=(J-JS)**2+(I-IS)**2
      IF (KRAD2 .LE. IRAD2 .OR. KRAD2 .GT. NWIDE2S)GO TO 20
      NPTS=NPTS+1
C
      XX(NPTS,1)=(I-I11)*DX-1.
      XX(NPTS,2)=(J-J11)*DY-1.
	YY(NPTS)=ARRAY(I,J)
20    CONTINUE
C
30    IF (NCODE .EQ. 3)THEN
        NTERM=10
      ELSE IF (NCODE .EQ. 1)THEN
        NTERM=3
      ELSE IF (NCODE .EQ. 2)THEN
        NTERM=6
      ELSE
        NTERM=1
      END IF
C
      IF (NPTS .LT. NTERM)THEN
       CALL WRUSER('ERROR: TOO FEW POINTS TO FIT BACKGROUND',ISTATUS)
        GO TO 200
      END IF
C
C     ERASE ANY PREVIOUS SOLUTION
C
      DO 35 I=1,30
35    D(I)=0.
C
      DO 40 KQ=1,2
C
C     FIT THE POLYNOMIAL
C
      CALL NEQSOL(XX,YY,ZZ,NDIM,NPTS,NTERM,1,0,D,SE,RDOE,SDOR)
C
C     DO A 2 SIGMA REJECTION
C
      TEST=2.*SDOR
      CALL REJECT(XX,YY,NDIM,D,NPTS,NTERM,TEST,NR,1,-1)
      NPTS=NR
      IF (NPTS .LT. NTERM)THEN
       CALL WRUSER('ERROR: TO FEW POINTS TO FIT BACKGROUND',ISTATUS)
        GO TO 200
      END IF
C
40    CONTINUE
C
C     REFIT POLYNOMIAL
C
      CALL NEQSOL(XX,YY,ZZ,NDIM,NPTS,NTERM,1,0,D,SE,RDOE,SD)
C
C     EVALUATE POLYNOMIAL AT EACH POINT WITHIN CIRCLE
C
      DO 60 J=J1,J2
C
C     FIND A RANDOM STARTING POINTS IN THE SEQUENCE OF NOISE POINTS
C
      XK=G05CAF(DUMMY)
      K=XK*199.
C
      YZ=(J-J11)*DY-1.
      DO 50 I=I1,I2
      IF ((J-JS)**2+(I-IS)**2 .GT. IRAD2)GO TO 50
      XZ=(I-I11)*DX-1.
      K=K+1
      IF (K .GT. 200)K=1
      XNOISE=ER(K)*SDOR
      VALUE=POLY(XZ,YZ,D)+XNOISE
	ARRAY(I,J)=VALUE
50    CONTINUE
C
C     PLOT NEW LINE ON ARGS
C
      CALL ARGSROW(ARRAY,ICOL,IROW,I1,I2,J,
     1     TRIM,LLOG,VLO,VHI,IXOR,IYOR)
C
60    CONTINUE
C
	IF (CURSOR) THEN
	CALL ARGS_LAMPS(1,0,0,1)
	CALL ARGS_CURS('+')
	CALL ARGS_CURC('I')
	CALL ARGS_RDCUR(' ',ID,IB,UX,UY)
	CALL ARGS_LAMPS(0,0,0,0)
      IF (IB .EQ. 4)THEN
      CALL STRRSTR(ARRAY,IROW,ICOL,%VAL(IPNT),ISIZE,I1,I2,J1,J2)
        DO 230 J=J1,J2
        CALL ARGSROW(ARRAY,ICOL,IROW,I1,I2,J,
     1     TRIM,LLOG,VLO,VHI,IXOR,IYOR)
230     CONTINUE
        CALL FRDATA('*STAR',ISTATUS)
      GO TO 300
      ELSE
	IF (FILE) WRITE (9,*) IS,JS,NS
      ENDIF
	ENDIF
C
200   CONTINUE
C
      CALL FRDATA('*STAR',ISTATUS)
C
300	CONTINUE
      END
